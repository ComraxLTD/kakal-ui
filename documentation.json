{
    "pipes": [
        {
            "name": "AreaPipe",
            "id": "pipe-AreaPipe-ba09fc8cf66ce7b677bd39ead7115726",
            "file": "projects/lib-kakal-ui/src/lib/app/utilities/pipes/area.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "tag",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "tag",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "area",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'area',\r\n})\r\nexport class AreaPipe implements PipeTransform {\r\n  transform(value: number, tag?: string): string {\r\n\r\n    tag = tag || 'מ\"ר';\r\n\r\n    return `${value} ${tag}`;\r\n  }\r\n}\r\n"
        },
        {
            "name": "FormatPipe",
            "id": "pipe-FormatPipe-9f1eba3e2c72b2b39c476faca9bdf203",
            "file": "projects/lib-kakal-ui/src/lib/app/utilities/pipes/format.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "format",
            "sourceCode": "import { Inject, LOCALE_ID, Pipe, PipeTransform } from '@angular/core';\r\nimport { AreaPipe } from './area.pipe';\r\nimport { formatDate, formatNumber } from '@angular/common';\r\n\r\n@Pipe({\r\n  name: 'format',\r\n})\r\nexport class FormatPipe implements PipeTransform {\r\n  constructor(\r\n    private area: AreaPipe,\r\n    @Inject(LOCALE_ID) private locale: string\r\n  ) {}\r\n\r\n  transform(value: unknown, type?: string): unknown {\r\n    let result: unknown = value;\r\n\r\n    switch (typeof value) {\r\n      case 'number':\r\n        switch (type) {\r\n          case 'area':\r\n            result = this.area.transform(value);\r\n            break;\r\n          default:\r\n            result = formatNumber(value, this.locale);\r\n        }\r\n        break;\r\n      case 'object':\r\n        if (value instanceof Date) {\r\n          result = formatDate(value, 'M/d/yy', this.locale);\r\n        }\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n"
        },
        {
            "name": "NisPipe",
            "id": "pipe-NisPipe-0025e63daef88aefab975b31e443dcc2",
            "file": "projects/lib-kakal-ui/src/lib/app/utilities/pipes/nis.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "tag",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "tag",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "nis",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'nis',\r\n})\r\nexport class NisPipe implements PipeTransform {\r\n  transform(value: number, tag?: string): string {\r\n\r\n    tag = tag || 'ש\"ח';\r\n\r\n    return `${value} ${tag}`;\r\n  }\r\n}\r\n"
        },
        {
            "name": "NumberToTimePipe",
            "id": "pipe-NumberToTimePipe-51cec8332b2343fa91147b61e56b51b5",
            "file": "projects/lib-kakal-ui/src/lib/app/utilities/pipes/numberToTime.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 5,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "numberToTimePipe",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'numberToTimePipe'})\r\nexport class NumberToTimePipe implements PipeTransform {\r\n  transform(value: number): string {\r\n    const minutes=value%1 ===0?':00':`:${value%1 *60}`\r\n    return `${Math.floor(value)}${minutes}`\r\n  }\r\n}"
        }
    ],
    "interfaces": [
        {
            "name": "AssetStatus",
            "id": "interface-AssetStatus-083d8cf0efbdebf2bdf09995c81890e9",
            "file": "projects/lib-kakal-ui/src/lib/app/utilities/models/assets.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface AssetStatus {\r\n  label : string,\r\n  value : number\r\n}\r\n\r\nexport class AssetsModel {\r\n\r\n  constructor(\r\n    public id?: number,\r\n    public block?: number,\r\n    public division?: number,\r\n    public subdivision?: number,\r\n    public area?: number,\r\n    public areaOwn?: number,\r\n    public property?: string,\r\n    public status?: AssetStatus,\r\n    public description?: string,\r\n    public location?: string,\r\n  ) {\r\n\r\n  }\r\n\r\n}\r\n",
            "properties": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "ColumnsData",
            "id": "interface-ColumnsData-812b97030780f087c6cd4b4f09cb86d2",
            "file": "projects/lib-kakal-ui/src/lib/app/components/columns/columns.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { ColumnDef, ColumnModel } from './column.model';\r\nimport { keys } from 'ts-transformer-keys';\r\n\r\nexport interface ColumnsData<T> {\r\n  columns: ColumnModel<T>[];\r\n  columnsDefs: ColumnDef<T>[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ColumnsService<T> {\r\n  constructor() {}\r\n\r\n  private setColumnDefsFromType(model: T): ColumnDef<T>[] {\r\n    return Object.keys(model);\r\n  }\r\n\r\n  private filterColumnDefs(\r\n    columnDefs: ColumnDef<T>[],\r\n    filters: ColumnDef<T>[]\r\n  ): ColumnDef<T>[] {\r\n    if (filters.length > 0) {\r\n      const filteredColumnsDefs = columnDefs.filter(\r\n        (item) => !filters.includes(item)\r\n      );\r\n      return filteredColumnsDefs;\r\n    } else {\r\n      return columnDefs;\r\n    }\r\n  }\r\n\r\n  private setColumnDefs(model: T, filters: ColumnDef<T>[]): ColumnDef<T>[] {\r\n    return this.filterColumnDefs(this.setColumnDefsFromType(model), filters);\r\n  }\r\n\r\n  private setColumnWithColumnDefs(\r\n    columns: ColumnModel<T>[],\r\n    columnDefs: ColumnDef<T>[]\r\n  ): ColumnModel<T>[] {\r\n    return columns.map((column, i) => {\r\n      if (column.columnDef === 'select') {\r\n        i++;\r\n      }\r\n\r\n      return new ColumnModel<T>({\r\n        ...column,\r\n        columnDef: column.columnDef || columnDefs[i],\r\n      });\r\n    });\r\n  }\r\n\r\n  private setColumnDefsFromColumns(\r\n    columns: ColumnModel<T>[],\r\n    columnDefs: ColumnDef<T>[]\r\n  ): ColumnDef<T>[] {\r\n    if (columns.length > columnDefs.length) {\r\n      columnDefs = columns.map((column) => column.columnDef);\r\n    }\r\n    return columnDefs;\r\n  }\r\n\r\n  private initColumnsDefs(model: T, filters: ColumnDef<T>[]): ColumnDef<T>[] {\r\n    return this.setColumnDefs(model, filters);\r\n  }\r\n\r\n  private getColumnsDefs(\r\n    columns: ColumnModel<T>[],\r\n    columnDefs: ColumnDef<T>[]\r\n  ) {\r\n    return this.setSelect(this.setColumnDefsFromColumns(columns, columnDefs));\r\n  }\r\n\r\n  private setSelect(columns: ColumnDef<T>[]): ColumnDef<T>[] {\r\n    const newColumns = [...columns];\r\n    const index = newColumns.findIndex((columnDef) => columnDef === 'select');\r\n\r\n    if (index < 0 || index === 0) {\r\n      return newColumns;\r\n    }\r\n\r\n    const selectColumn: ColumnDef<T> = newColumns.find(\r\n      (columnDef) => columnDef === 'select'\r\n    );\r\n    newColumns.splice(index, 1);\r\n\r\n    const updateColumns = [selectColumn, ...newColumns];\r\n\r\n    return updateColumns;\r\n  }\r\n\r\n  private addSelectColumn(columns: ColumnModel<T>[]): ColumnModel<T>[] {\r\n    const columnsWithSelect = [...columns];\r\n\r\n    const column = new ColumnModel<T>({\r\n      columnDef: 'select',\r\n      type: 'select',\r\n      selectable: true,\r\n    });\r\n\r\n    columnsWithSelect.push(column);\r\n\r\n    return columnsWithSelect;\r\n  }\r\n  private addActionsColumn(columns: ColumnModel<T>[]): ColumnModel<T>[] {\r\n    const columnsWithActions = [...columns];\r\n    const column = new ColumnModel<T>({\r\n      columnDef: 'actions',\r\n      type: 'actions',\r\n    });\r\n\r\n    columnsWithActions.push(column);\r\n    return columnsWithActions;\r\n  }\r\n\r\n  private addAccordionColumn(columns: ColumnModel<T>[]): ColumnModel<T>[] {\r\n    const columnsWithAccordion = [...columns];\r\n    const column = new ColumnModel<T>({\r\n      columnDef: 'accordion',\r\n      type: 'custom',\r\n    });\r\n\r\n    columnsWithAccordion.push(column);\r\n    return columnsWithAccordion;\r\n  }\r\n\r\n  private setColumnsWithState(\r\n    selectable,\r\n    hasActions,\r\n    accordion\r\n  ): (columns: ColumnModel<T>[]) => ColumnModel<T>[] {\r\n    return (columns: ColumnModel<T>[]) => {\r\n      let newColumns = [...columns];\r\n\r\n      if (selectable) {\r\n        newColumns = this.addSelectColumn(newColumns);\r\n      }\r\n\r\n      if (accordion) {\r\n        newColumns = this.addAccordionColumn(newColumns);\r\n      }\r\n      if (hasActions) {\r\n        newColumns = this.addActionsColumn(newColumns);\r\n      }\r\n\r\n      return newColumns;\r\n    };\r\n  }\r\n\r\n  public getColumns(options: {\r\n    model: T;\r\n    tableColumns: ColumnModel<T>[];\r\n    filters: ColumnDef<T>[];\r\n    selectable?: boolean;\r\n    accordion?: boolean;\r\n    hasActions?: boolean;\r\n  }): ColumnsData<T> {\r\n    const {\r\n      model,\r\n      tableColumns,\r\n      selectable,\r\n      hasActions,\r\n      accordion,\r\n      filters,\r\n    } = options;\r\n\r\n    const columnWithState = this.setColumnsWithState(\r\n      selectable,\r\n      hasActions,\r\n      accordion\r\n    )(tableColumns);\r\n    const columnsDefs = this.initColumnsDefs(model, filters);\r\n    const columns = this.setColumnWithColumnDefs(columnWithState, columnsDefs);\r\n    return { columns, columnsDefs: this.getColumnsDefs(columns, columnsDefs) };\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "columns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ColumnModel<T>[]",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "columnsDefs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ColumnDef<T>[]",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "ColumnState",
            "id": "interface-ColumnState-069aefea2edd14ee08c4208af9f3a4f3",
            "file": "projects/lib-kakal-ui/src/lib/app/components/columns/column.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { SelectOption } from '../form/models/question-select.model';\r\nimport { ElementRef } from '@angular/core';\r\nimport { Question } from '../form/services/form.service';\r\nimport { ControlType } from '../form/models/question.model';\r\n\r\nexport interface ColumnState {\r\n  expendable?: boolean;\r\n  selectable?: boolean;\r\n  sortable?: boolean;\r\n  filterable?: boolean;\r\n  data : any\r\n}\r\n\r\nexport declare type ColumnDef<T> = keyof T | 'select' | 'actions' | 'accordion' | string;\r\n\r\nexport declare type SortDir = 'desc' | 'asc';\r\n\r\nexport declare type ColumnType =\r\n  | 'number'\r\n  | 'date'\r\n  | 'text'\r\n  | 'custom'\r\n  | 'actions'\r\n  | 'select'\r\n  | 'expend';\r\n\r\nexport class ColumnModel<T> {\r\n  public rowId?: string | number;\r\n  public columnDef?: ColumnDef<T>;\r\n  public label?: string;\r\n  public type?: ColumnType;\r\n  public control?: ControlType;\r\n  public question?: Question;\r\n  public slotRef?: ElementRef;\r\n  public center?: boolean;\r\n  public expendable?: boolean;\r\n  public selectable?: boolean;\r\n  public sortable?: boolean;\r\n  public sortDir?: SortDir;\r\n  public filterable?: boolean;\r\n  public filterOptions?: SelectOption[];\r\n  public footer?: boolean;\r\n  public icon?: string;\r\n\r\n  constructor(options?: {\r\n    rowId?: string | number;\r\n    columnDef?: ColumnDef<T>;\r\n    label?: string;\r\n    type?: ColumnType;\r\n    control?: ControlType;\r\n    question?: Question;\r\n    slotRef?: ElementRef;\r\n    expendable?: boolean;\r\n    selectable?: boolean;\r\n    center?: boolean;\r\n    sortable?: boolean;\r\n    sortDir?: SortDir;\r\n    filterable?: boolean;\r\n    filterOptions?: SelectOption[];\r\n    footer?: boolean;\r\n    icon?: string;\r\n  }) {\r\n    this.rowId = options.rowId;\r\n    this.columnDef = options?.columnDef || '';\r\n    this.label = options?.label || '';\r\n    this.type = options?.type || 'text';\r\n    this.control = options?.control;\r\n    this.question = options?.question;\r\n    this.slotRef = options?.slotRef || null;\r\n    this.center = options?.center || false;\r\n    this.expendable = options?.expendable || false;\r\n    this.selectable = options?.selectable || false;\r\n    this.sortable = options?.sortable || false;\r\n    this.sortDir = options?.sortDir || 'asc';\r\n    this.filterable = options?.filterable || false;\r\n    this.filterOptions = options?.filterOptions || [];\r\n    this.footer = options?.footer || false;\r\n    this.icon = options?.icon || '';\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "expendable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "filterable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "selectable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "sortable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "FilterOption",
            "id": "interface-FilterOption-a12034af3fa46cffaf069ee140f6c766",
            "file": "projects/lib-kakal-ui/src/lib/app/components/columns/column-filter/column-filter.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport { SelectOption } from '../../form/models/question-select.model';\r\nimport { ColumnModel } from '../column.model';\r\n\r\nexport interface FilterOption<T> {\r\n  column: ColumnModel<T>;\r\n  option: SelectOption;\r\n}\r\n\r\n@Component({\r\n  selector: 'kkl-column-filter',\r\n  templateUrl: './column-filter.component.html',\r\n  styleUrls: ['./column-filter.component.scss'],\r\n})\r\nexport class ColumnFilterComponent<T> implements OnInit {\r\n  @Input() column: ColumnModel<T>;\r\n  @Input() label: string;\r\n  @Input() options: SelectOption[];\r\n  @Input() filterSlots: TemplateRef<any>;\r\n  @Output() optionSelect: EventEmitter<FilterOption<T>> = new EventEmitter();\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.label = this.column.label;\r\n  }\r\n\r\n  public onOptionSelect(option: SelectOption): void {\r\n    this.optionSelect.emit({ column: this.column, option });\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "column",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ColumnModel<T>",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "option",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectOption",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "GridProps",
            "id": "interface-GridProps-ce3694cf5fc5e0c994c868def65b5149",
            "file": "projects/lib-kakal-ui/src/lib/app/components/form/models/question.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ValidatorFn } from '@angular/forms';\r\nimport { MatFormFieldAppearance } from '@angular/material/form-field';\r\n\r\nexport interface GridProps {\r\n  cols?: number;\r\n  rows?: number;\r\n  offset?: number;\r\n  gutter?: number;\r\n  fullWidth?: boolean;\r\n  buttonCols? : number\r\n}\r\n\r\nexport type ControlType =\r\n  | 'text'\r\n  | 'password'\r\n  | 'number'\r\n  | 'textarea'\r\n  | 'select'\r\n  | 'calendar'\r\n  | 'radio'\r\n  | 'date'\r\n  | 'time'\r\n  | 'group'\r\n  | 'custom'\r\n  | 'autocomplete';\r\n\r\nexport type QuestionType = 'default' | 'group' | 'custom';\r\n\r\nexport abstract class QuestionBaseModel<T> {\r\n  public key: any;\r\n  public label: string;\r\n  public value?: T | undefined;\r\n  public appearance?: MatFormFieldAppearance\r\n  public type?: QuestionType;\r\n  public controlType?: ControlType;\r\n  public gridProps?: GridProps;\r\n  public icon?: string;\r\n  public customRef?: string;\r\n  public validations?: ValidatorFn[];\r\n  public disabled?: boolean;\r\n  constructor(options: {\r\n    value?: T;\r\n    key?: string;\r\n    label?: string;\r\n    appearance?: MatFormFieldAppearance;\r\n    type?: QuestionType;\r\n    controlType?: ControlType;\r\n    disabled?: boolean;\r\n    gridProps?: GridProps;\r\n    icon?: string;\r\n    customRef?: string;\r\n    validations?: ValidatorFn[];\r\n  }) {\r\n    this.key = options.key || '';\r\n    this.value = options.value;\r\n    this.label = options.label || '';\r\n    this.appearance = options.appearance || 'outline';\r\n    this.type = options.type || 'default';\r\n    this.controlType = options.controlType || 'text';\r\n    this.disabled = this.disabled || false;\r\n    this.validations = options.validations || [];\r\n    this.gridProps = options.gridProps || {\r\n      cols: 1,\r\n      rows: 1,\r\n      gutter: 0,\r\n      offset: 0,\r\n      fullWidth: false,\r\n    };\r\n    this.icon = options.icon || '';\r\n    this.customRef = options.customRef || '';\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "buttonCols",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "cols",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "fullWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "gutter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "offset",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "rows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "GroupOptions",
            "id": "interface-GroupOptions-7d7cbcb4cd80b81c3d3d1da48b29c176",
            "file": "projects/lib-kakal-ui/src/lib/app/components/form/models/question-group.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { FormGroup } from '@angular/forms';\r\nimport { Question } from '../services/form.service';\r\nimport { ControlType, GridProps } from './question.model';\r\n\r\nexport type GroupType = 'default' | 'group' | 'custom';\r\n\r\nexport interface GroupOptions {\r\n  label?: string;\r\n  type?: GroupType;\r\n  controlType?: ControlType;\r\n  formGroup?: FormGroup;\r\n  gridProps?: GridProps;\r\n  hasButton?: boolean;\r\n}\r\n\r\nexport class QuestionGroupModel {\r\n  public key: string;\r\n  public questions: Question[];\r\n  public label?: string;\r\n  public type?: GroupType;\r\n  public controlType?: ControlType;\r\n  public formGroup?: FormGroup;\r\n  public gridProps?: GridProps;\r\n  public hasButton?: boolean;\r\n\r\n  constructor(options?: {\r\n    key: string;\r\n    questions: Question[];\r\n    label?: string;\r\n    type?: GroupType;\r\n    formGroup?: FormGroup;\r\n    gridProps?: GridProps;\r\n    hasButton?: boolean;\r\n  }) {\r\n    this.key = options.key;\r\n    this.label = options.label;\r\n    this.type = options.type || 'default';\r\n    this.controlType = 'group';\r\n    this.questions = options.questions;\r\n    this.formGroup = options.formGroup;\r\n    this.gridProps = options.gridProps || { cols: 1 };\r\n    this.hasButton = options.hasButton || false;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "controlType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ControlType",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "gridProps",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GridProps",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "hasButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GroupType",
                    "optional": true,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "ListItem",
            "id": "interface-ListItem-b9eb261fd6398f329fa426561278ebef",
            "file": "projects/lib-kakal-ui/src/lib/app/components/list-item/list-item.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export declare type ListItemKeys = 'path' | 'label' | 'svgUrl';\r\n\r\nexport interface ListItem {\r\n  type?: string,\r\n  key?: string,\r\n  selector? : string[],\r\n  label?: string,\r\n  size?: number,\r\n  value?: any,\r\n  svgUrl?: string,\r\n} \r\n\r\nexport abstract class ListItemModel implements ListItem {\r\n\r\n  constructor(\r\n    public key?: string,\r\n    public type?: string,\r\n    public label?: string,\r\n    public svgUrl?: string,\r\n    public size?: number,\r\n  ) {\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "selector",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "svgUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "NavigationCardModel",
            "id": "interface-NavigationCardModel-cc3e5b6e1bb746e3211cdfdf7511e33a",
            "file": "projects/lib-kakal-ui/src/lib/app/utilities/models/nav-card-model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface NavigationCardModel {\r\n  title? : string,\r\n  path? : string,\r\n  svgUrl? : string,\r\n  isActive ?  : boolean\r\n  hasBadge? : boolean\r\n  badgeValue? : number\r\n}\r\n",
            "properties": [
                {
                    "name": "badgeValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "hasBadge",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "isActive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "svgUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "RadioOption",
            "id": "interface-RadioOption-f0681bb7a23a36b3cc633248f0ed4ae3",
            "file": "projects/lib-kakal-ui/src/lib/app/components/form/models/question-radio.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ValidatorFn } from '@angular/forms';\r\nimport { GridProps, QuestionBaseModel } from './question.model';\r\n\r\nexport interface RadioOption {\r\n  label: string;\r\n  value: any;\r\n  checked?: boolean;\r\n}\r\n\r\nexport class QuestionRadio extends QuestionBaseModel<string> {\r\n  public options?: RadioOption[];\r\n\r\n  constructor(options?: {\r\n    key: string;\r\n    label: string;\r\n    gridProps?: GridProps;\r\n    icon?: string;\r\n    validations?: ValidatorFn[];\r\n    options?: RadioOption[];\r\n  }) {\r\n    super(options);\r\n    this.key = options.key;\r\n    this.label = options.label;\r\n    this.controlType = 'radio';\r\n    this.gridProps = options.gridProps;\r\n    this.validations = options.validations;\r\n    this.options = options.options;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "checked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "Register",
            "id": "interface-Register-88ea18e6bf71d5678d8c365666031e09",
            "file": "projects/lib-kakal-ui/src/lib/app/components/form/form/form.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { QuestionSelectModel } from '../models/question-select.model';\r\nimport { GridProps } from '../models/question.model';\r\nimport { QuestionGroupModel } from '../models/question-group.model';\r\nimport { FormGroup } from '@angular/forms';\r\nimport {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\nimport { Question } from '../services/form.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nexport interface Register {\r\n  form: FormGroup;\r\n  questions$?: BehaviorSubject<Question[]>;\r\n}\r\n\r\n@Component({\r\n  selector: 'kkl-form',\r\n  templateUrl: './form.component.html',\r\n  styleUrls: ['./form.component.scss'],\r\n})\r\nexport class FormComponent implements OnInit {\r\n  @Input() public group: QuestionGroupModel;\r\n  @Input() public questions: Question[];\r\n  @Input() public editMode: boolean;\r\n  @Input() public rowHeight: number;\r\n\r\n  @Input() public slots: {\r\n    button?: ElementRef;\r\n    group?: ElementRef;\r\n  };\r\n\r\n  @Output() register: EventEmitter<Register> = new EventEmitter();\r\n  @Output() submit: EventEmitter<any> = new EventEmitter();\r\n\r\n  public questions$: BehaviorSubject<Question[]>;\r\n  public formGroup: FormGroup;\r\n  public grid: GridProps;\r\n  public hasButton: boolean;\r\n  public cols: string | number;\r\n  public buttonCols: string | number;\r\n  public gutter: number;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    this.formGroup = this.group.formGroup;\r\n    this.setQuestions();\r\n    this.setGrid();\r\n\r\n    if (this.group.formGroup) {\r\n      this.register.emit({ form: this.formGroup, questions$: this.questions$ });\r\n    }\r\n\r\n    if (this.editMode) {\r\n      this.formGroup.disable();\r\n    }\r\n  }\r\n\r\n  private setQuestions() {\r\n    this.questions = this.questions || this.group.questions;\r\n    this.questions$ = new BehaviorSubject<Question[]>(this.questions);\r\n  }\r\n\r\n  private setGrid(): void {\r\n    this.grid = this.group.gridProps;\r\n    this.cols = this.group.gridProps?.cols || 1;\r\n    this.gutter = this.group.gridProps?.gutter || 1;\r\n    this.buttonCols = this.group.gridProps?.buttonCols || 1;\r\n    this.hasButton = this.group.hasButton || false;\r\n  }\r\n\r\n  public onSubmit() {\r\n    this.submit.emit(this.formGroup.value);\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "questions$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<Question[]>",
                    "optional": true,
                    "description": "",
                    "line": 18
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "RowState",
            "id": "interface-RowState-5288e56a12016cf1495acbbba7b9629a",
            "file": "projects/lib-kakal-ui/src/lib/app/components/table/models/row.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { FormGroup } from '@angular/forms';\r\nimport { Question } from '../../form/services/form.service';\r\nimport { ActionState } from './action-state.model';\r\n\r\nexport interface RowState {\r\n  pending: boolean;\r\n  editable: boolean;\r\n  expanded: boolean;\r\n  data : any\r\n}\r\n\r\nexport class RowModel<T> {\r\n  public item: T;\r\n  public formGroup: FormGroup;\r\n  public pending: boolean;\r\n  public editable: boolean;\r\n  public expanded: boolean;\r\n  public questionsGroup: { [x: string]: Question };\r\n  public state?: ActionState<RowState>;\r\n\r\n  constructor(options?: {\r\n    item?: T;\r\n    pending?: boolean;\r\n    editable?: boolean;\r\n    expanded?: boolean;\r\n    questionsGroup?: {};\r\n    state?: {};\r\n  }) {\r\n    this.item = options?.item;\r\n    this.pending = options?.pending || false;\r\n    this.editable = options?.editable || false;\r\n    this.expanded = options?.expanded || false;\r\n    this.questionsGroup = options?.questionsGroup || {};\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "editable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "expanded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "pending",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "SelectOption",
            "id": "interface-SelectOption-cf867120e60f112cb8601a6926e023ca",
            "file": "projects/lib-kakal-ui/src/lib/app/components/form/models/question-select.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ValidatorFn } from '@angular/forms';\r\nimport { GridProps, QuestionBaseModel } from \"./question.model\";\r\n\r\nexport interface SelectOption {\r\n  label: string;\r\n  value: any;\r\n  disabled?: boolean;\r\n}\r\n\r\nexport class QuestionSelectModel extends QuestionBaseModel<string>{\r\n\r\n  public options?: SelectOption[];\r\n  public onSelectChange?: Function;\r\n  public multi?: boolean;\r\n\r\n  constructor(options?: {\r\n    key: string,\r\n    label: string,\r\n    validations?: ValidatorFn[],\r\n    gridProps?: GridProps\r\n    options?: SelectOption[];\r\n    icon?: string;\r\n    multi?: boolean;\r\n    onSelectChange?: Function;\r\n  }) {\r\n    super(options)\r\n    this.controlType = 'select'\r\n    this.options = options.options || []\r\n    this.icon = options.icon || 'keyboard_arrow_down'\r\n    this.multi = options.multi || false\r\n    this.onSelectChange = options.onSelectChange || (() => console.log('select'))\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "Status",
            "id": "interface-Status-2882210c6a6990fb282259f53875a8d8",
            "file": "projects/lib-kakal-ui/src/lib/app/components/status/status.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, ElementRef, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nexport interface Status {\r\n  label: string;\r\n  value: number;\r\n}\r\n@Component({\r\n  selector: 'app-status',\r\n  templateUrl: './status.component.html',\r\n  styleUrls: ['./status.component.scss'],\r\n})\r\nexport class StatusComponent implements OnInit {\r\n\r\n  @Input() public cols: number\r\n  @Input() public height: number\r\n  @Input() public gutter: number\r\n  @Input() public color: string;\r\n  @Input() public hasLabel: boolean\r\n  @Input() public status: Status;\r\n\r\n  @Input() slots: {textRef: ElementRef }\r\n\r\n  @Output() click : EventEmitter<void>  = new EventEmitter()\r\n\r\n  public steps: number[] = [];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.cols = this.cols || 8\r\n    this.color = this.color || 'accent';\r\n\r\n    for (let i = 1; i <= this.status.value; i++) {\r\n      this.steps.push(100);\r\n    }\r\n    for (let i = [...this.steps].length; i < this.cols; i++) {\r\n      this.steps.push(0);\r\n    }\r\n  }\r\n\r\n  public onClick() {\r\n    this.click.emit()\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "Table",
            "id": "interface-Table-6fb629ab5359e7883fb10e1c7a52b6fa",
            "file": "projects/lib-kakal-ui/src/lib/app/components/table/table.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  OnChanges,\r\n} from '@angular/core';\r\n\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { PaginationInstance } from 'ngx-pagination';\r\n\r\nimport { TableService } from './table.service';\r\nimport { RowModel } from './models/row.model';\r\n\r\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { Sort } from '@angular/material/sort';\r\nimport {\r\n  trigger,\r\n  state,\r\n  style,\r\n  transition,\r\n  animate,\r\n} from '@angular/animations';\r\nimport { ColumnDef, ColumnModel } from '../columns/column.model';\r\n\r\nimport { SelectionChange, SelectionModel } from '@angular/cdk/collections';\r\nimport { v4 as uuid4 } from 'uuid';\r\nimport { FilterOption } from '../columns/column-filter/column-filter.component';\r\n\r\ndeclare type id = string | number;\r\n\r\n// interface for table options : {\r\n// filters - keys to remove unwanted fields form object (ex - id)\r\n// pagination - a PaginationInstance\r\n// editable - tag rows to start in edit mode\r\n// pending - tag rows for specific start style\r\n// }\r\nexport interface TableOptions<T> {\r\n  filters?: ColumnDef<T>[];\r\n  pagination?: PaginationInstance;\r\n  editable?: id[];\r\n  pending?: id[];\r\n}\r\n\r\n// interface for every comp which handle kkl-table states :\r\n// mode : edit/add/form/expand/close/remove/delete\r\n// options : additional data\r\n\r\ntype state =\r\n  | 'add'\r\n  | 'save'\r\n  | 'edit'\r\n  | 'expand'\r\n  | 'cancel'\r\n  | 'delete'\r\n  | 'form'\r\n  | '';\r\n\r\nexport interface TableState<T> {\r\n  mode?: state;\r\n  ids?: id[];\r\n  row?: RowModel<T>;\r\n  column?: ColumnModel<T>;\r\n  options?: any;\r\n}\r\n\r\n// interface for every comp which want to use kkl-table = {\r\n// data : array of objects to render in table\r\n//  columns : array of ColumnsModel\r\n// options : see TableOptions interface\r\n// model : new instance of the data object\r\n// }\r\nexport interface Table<T> {\r\n  data$: Observable<T[]>;\r\n  columns: ColumnModel<T>[];\r\n  options: TableOptions<T>;\r\n  model: T;\r\n}\r\n\r\n@Component({\r\n  selector: 'kkl-table',\r\n  templateUrl: './table.component.html',\r\n  styleUrls: ['./table.component.scss'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({ height: '0rem', minHeight: '0' })),\r\n      state('expanded', style({ height: '*' })),\r\n      transition(\r\n        'expanded <=> collapsed',\r\n        animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')\r\n      ),\r\n    ]),\r\n  ],\r\n  providers: [TableService, TableService],\r\n})\r\nexport class TableComponent<T> implements OnInit, Table<T> {\r\n  // color for hedaer : primary or accent\r\n  @Input() public theme: ThemePalette;\r\n\r\n  // data[]\r\n  @Input() public data$: Observable<T[]>;\r\n\r\n  // array of columns model\r\n\r\n  @Input() public columns: ColumnModel<T>[];\r\n\r\n  // table data instance for column keys\r\n  @Input() public model: T;\r\n\r\n  @Input() public options: TableOptions<T>;\r\n\r\n  // if table have state modes\r\n  @Input() public paginator: boolean;\r\n  @Input() public expendable: boolean;\r\n  @Input() public accordion: boolean;\r\n  @Input() public selectable: boolean;\r\n  @Input() public hasState: boolean;\r\n  @Input() public hasFooter: boolean;\r\n  @Input() public hasActions: boolean;\r\n\r\n  // ng template for column header\r\n  @Input() public headerSlots: {} = {};\r\n\r\n  // ng template for cell\r\n  @Input() public rowSlots: {};\r\n\r\n  // ng template for filter\r\n  @Input() public filterSlots: {};\r\n\r\n  // ng template for footer cell\r\n  @Input() public footerSlots: {};\r\n\r\n  // ng template for select cell\r\n  @Input() public selectSlot: {};\r\n\r\n  // ng template for expand cell\r\n  @Input() public expandSlots: {};\r\n\r\n  // -----------------------------------------------------------------------/\r\n\r\n  public rows$: Observable<RowModel<T>[]>;\r\n  public columns$: Observable<ColumnModel<T>[]>;\r\n  public expandKey$: Observable<ColumnDef<T>>;\r\n  public columnDefs: ColumnDef<T>[];\r\n  public pagination: PaginationInstance;\r\n\r\n  // Subject which control table state mode : edit/expand/save\r\n  public tableState$: BehaviorSubject<TableState<T>>;\r\n\r\n  // cdk object that handle selection\r\n  public selection: SelectionModel<RowModel<T>> = new SelectionModel<\r\n    RowModel<T>\r\n  >(true, [], true);\r\n\r\n  private rows: RowModel<T>[];\r\n\r\n  // -----------------------------------------------------------------------/\r\n\r\n  // emit sort event : Sort\r\n  @Output() sort: EventEmitter<Sort> = new EventEmitter();\r\n\r\n  // emit pagination event : {next : number, prev : number}\r\n  @Output() pageChange: EventEmitter<{\r\n    next: number;\r\n    prev: number;\r\n  }> = new EventEmitter();\r\n\r\n  // emit filter event : ColumnModel<T>\r\n  @Output() filter: EventEmitter<FilterOption<T>> = new EventEmitter();\r\n\r\n  // emit state instance event\r\n  @Output() register: EventEmitter<\r\n    BehaviorSubject<TableState<T>>\r\n  > = new EventEmitter();\r\n\r\n  // emit select event : Observable<T[]>\r\n  @Output() selected: EventEmitter<Observable<T[]>> = new EventEmitter();\r\n\r\n  constructor(private tableService: TableService<T>) {}\r\n\r\n  private setExpandState() {\r\n    this.expendable = this.expendable || this.accordion;\r\n    console.log(this.expendable);\r\n    if (this.expendable) {\r\n      this.expandKey$ = this.setExpandKey$();\r\n    }\r\n  }\r\n\r\n  private setTableProps() {\r\n    const { pagination, filters } = this.options;\r\n    this.rows$ = this.setRowWithState$();\r\n    this.columns$ = this.setColumns$(filters);\r\n    this.pagination = { ...pagination, id: uuid4() };\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.theme = this.theme || 'accent';\r\n    this.tableState$ = new BehaviorSubject<TableState<T>>({\r\n      mode: '',\r\n    });\r\n\r\n    this.setTableProps();\r\n    this.setExpandState();\r\n\r\n    this.register.emit(this.tableState$);\r\n  }\r\n\r\n  private setRowState(\r\n    rows: RowModel<T>[],\r\n    state: TableState<T>\r\n  ): RowModel<T>[] {\r\n    const { mode, ids, row, options } = state;\r\n\r\n    switch (mode) {\r\n      case 'expand':\r\n        return rows.map((rowItem) => {\r\n          if (ids.indexOf(rowItem.item['id']) >= 0) {\r\n            rowItem.expanded = !rowItem.expanded;\r\n          }\r\n          return rowItem;\r\n        });\r\n      case 'form':\r\n        const { columns } = this.tableService.setColumns({\r\n          tableColumns: this.columns,\r\n          model: this.model,\r\n          filters: this.options.filters,\r\n        });\r\n\r\n        rows = this.tableService.onFormMode(rows, columns, options);\r\n        return [...rows];\r\n\r\n      case 'add':\r\n        rows = this.tableService.onAddFormRow(rows, this.columns);\r\n        return [...rows];\r\n\r\n      case 'edit':\r\n        rows = this.tableService.onEditMode(rows, row, this.columns, options);\r\n        return [...rows];\r\n      case 'save':\r\n        return this.tableService.onSaveMode(rows, 'id', row.item);\r\n      case 'cancel':\r\n        rows.shift();\r\n        return [...rows];\r\n      default:\r\n        return [...rows];\r\n    }\r\n  }\r\n\r\n  private setRows$(): Observable<RowModel<T>[]> {\r\n    return this.data$.pipe(\r\n      map((data) => {\r\n        return this.tableService.setRows(data, this.options);\r\n      })\r\n    );\r\n  }\r\n\r\n  private setRowWithState$() {\r\n    return combineLatest([\r\n      this.setRows$(),\r\n      this.tableState$.asObservable(),\r\n    ]).pipe(map((pair) => this.setRowState(pair[0], pair[1])));\r\n  }\r\n\r\n  private setColumns$(filters: ColumnDef<T>[]) {\r\n    return this.data$.pipe(\r\n      map(() => {\r\n        const { columns, columnsDefs } = this.tableService.setColumns({\r\n          tableColumns: this.columns,\r\n          model: this.model,\r\n          filters: [...filters],\r\n          selectable: this.selectable,\r\n          accordion: this.accordion,\r\n          hasActions: this.hasActions,\r\n        });\r\n\r\n        this.columnDefs = columnsDefs;\r\n        this.columns = columns;\r\n        return columns;\r\n      })\r\n    );\r\n  }\r\n\r\n  // method to handle key of expand table template (expandSlots) - key need to be the same as the object field\r\n  // ex { name : string } columnDef : name\r\n  private setExpandKey$(): Observable<ColumnDef<T>> {\r\n    return this.tableState$.pipe(\r\n      map((state) => {\r\n        const { mode, column } = state;\r\n\r\n        if (mode === 'expand') {\r\n          return column?.columnDef || 'accordion';\r\n        }\r\n\r\n        return '';\r\n      })\r\n    );\r\n  }\r\n\r\n  // method which handle expand row state\r\n  public onExpandRow(row: RowModel<T>) {\r\n    if (this.accordion) {\r\n      this.tableState$.next({ mode: 'expand', ids: [row.item['id']] });\r\n    }\r\n  }\r\n\r\n  // EMIT EVENTS\r\n\r\n  public onPageChange(event) {\r\n    this.pageChange.emit(event);\r\n  }\r\n\r\n  public onSort(sort: Sort): void {\r\n    this.sort.emit(sort);\r\n  }\r\n  public onFilter(filterOption: FilterOption<T>): void {\r\n    this.filter.emit(filterOption);\r\n  }\r\n\r\n  // method which emit  selection items : []T\r\n  public onSelect(): void {\r\n    const select$ = this.selection.changed.pipe(\r\n      map((selection: SelectionChange<RowModel<T>>) => {\r\n        const { source } = selection;\r\n        return source.selected.map((row) => row.item);\r\n      })\r\n    );\r\n\r\n    this.selected.emit(select$);\r\n  }\r\n\r\n  // SELECT LOGIC SECTION\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  public isAllSelected(): boolean {\r\n    const numSelected = this.selection.selected?.length;\r\n    const numRows = this.rows.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  public masterToggle(): void {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.rows.map((row) => this.selection.select(row));\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "columns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ColumnModel<T>[]",
                    "optional": false,
                    "description": "",
                    "line": 78
                },
                {
                    "name": "data$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<T[]>",
                    "optional": false,
                    "description": "",
                    "line": 77
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 80
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TableOptions<T>",
                    "optional": false,
                    "description": "",
                    "line": 79
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "TableOptions",
            "id": "interface-TableOptions-6fb629ab5359e7883fb10e1c7a52b6fa",
            "file": "projects/lib-kakal-ui/src/lib/app/components/table/table.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  OnChanges,\r\n} from '@angular/core';\r\n\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { PaginationInstance } from 'ngx-pagination';\r\n\r\nimport { TableService } from './table.service';\r\nimport { RowModel } from './models/row.model';\r\n\r\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { Sort } from '@angular/material/sort';\r\nimport {\r\n  trigger,\r\n  state,\r\n  style,\r\n  transition,\r\n  animate,\r\n} from '@angular/animations';\r\nimport { ColumnDef, ColumnModel } from '../columns/column.model';\r\n\r\nimport { SelectionChange, SelectionModel } from '@angular/cdk/collections';\r\nimport { v4 as uuid4 } from 'uuid';\r\nimport { FilterOption } from '../columns/column-filter/column-filter.component';\r\n\r\ndeclare type id = string | number;\r\n\r\n// interface for table options : {\r\n// filters - keys to remove unwanted fields form object (ex - id)\r\n// pagination - a PaginationInstance\r\n// editable - tag rows to start in edit mode\r\n// pending - tag rows for specific start style\r\n// }\r\nexport interface TableOptions<T> {\r\n  filters?: ColumnDef<T>[];\r\n  pagination?: PaginationInstance;\r\n  editable?: id[];\r\n  pending?: id[];\r\n}\r\n\r\n// interface for every comp which handle kkl-table states :\r\n// mode : edit/add/form/expand/close/remove/delete\r\n// options : additional data\r\n\r\ntype state =\r\n  | 'add'\r\n  | 'save'\r\n  | 'edit'\r\n  | 'expand'\r\n  | 'cancel'\r\n  | 'delete'\r\n  | 'form'\r\n  | '';\r\n\r\nexport interface TableState<T> {\r\n  mode?: state;\r\n  ids?: id[];\r\n  row?: RowModel<T>;\r\n  column?: ColumnModel<T>;\r\n  options?: any;\r\n}\r\n\r\n// interface for every comp which want to use kkl-table = {\r\n// data : array of objects to render in table\r\n//  columns : array of ColumnsModel\r\n// options : see TableOptions interface\r\n// model : new instance of the data object\r\n// }\r\nexport interface Table<T> {\r\n  data$: Observable<T[]>;\r\n  columns: ColumnModel<T>[];\r\n  options: TableOptions<T>;\r\n  model: T;\r\n}\r\n\r\n@Component({\r\n  selector: 'kkl-table',\r\n  templateUrl: './table.component.html',\r\n  styleUrls: ['./table.component.scss'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({ height: '0rem', minHeight: '0' })),\r\n      state('expanded', style({ height: '*' })),\r\n      transition(\r\n        'expanded <=> collapsed',\r\n        animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')\r\n      ),\r\n    ]),\r\n  ],\r\n  providers: [TableService, TableService],\r\n})\r\nexport class TableComponent<T> implements OnInit, Table<T> {\r\n  // color for hedaer : primary or accent\r\n  @Input() public theme: ThemePalette;\r\n\r\n  // data[]\r\n  @Input() public data$: Observable<T[]>;\r\n\r\n  // array of columns model\r\n\r\n  @Input() public columns: ColumnModel<T>[];\r\n\r\n  // table data instance for column keys\r\n  @Input() public model: T;\r\n\r\n  @Input() public options: TableOptions<T>;\r\n\r\n  // if table have state modes\r\n  @Input() public paginator: boolean;\r\n  @Input() public expendable: boolean;\r\n  @Input() public accordion: boolean;\r\n  @Input() public selectable: boolean;\r\n  @Input() public hasState: boolean;\r\n  @Input() public hasFooter: boolean;\r\n  @Input() public hasActions: boolean;\r\n\r\n  // ng template for column header\r\n  @Input() public headerSlots: {} = {};\r\n\r\n  // ng template for cell\r\n  @Input() public rowSlots: {};\r\n\r\n  // ng template for filter\r\n  @Input() public filterSlots: {};\r\n\r\n  // ng template for footer cell\r\n  @Input() public footerSlots: {};\r\n\r\n  // ng template for select cell\r\n  @Input() public selectSlot: {};\r\n\r\n  // ng template for expand cell\r\n  @Input() public expandSlots: {};\r\n\r\n  // -----------------------------------------------------------------------/\r\n\r\n  public rows$: Observable<RowModel<T>[]>;\r\n  public columns$: Observable<ColumnModel<T>[]>;\r\n  public expandKey$: Observable<ColumnDef<T>>;\r\n  public columnDefs: ColumnDef<T>[];\r\n  public pagination: PaginationInstance;\r\n\r\n  // Subject which control table state mode : edit/expand/save\r\n  public tableState$: BehaviorSubject<TableState<T>>;\r\n\r\n  // cdk object that handle selection\r\n  public selection: SelectionModel<RowModel<T>> = new SelectionModel<\r\n    RowModel<T>\r\n  >(true, [], true);\r\n\r\n  private rows: RowModel<T>[];\r\n\r\n  // -----------------------------------------------------------------------/\r\n\r\n  // emit sort event : Sort\r\n  @Output() sort: EventEmitter<Sort> = new EventEmitter();\r\n\r\n  // emit pagination event : {next : number, prev : number}\r\n  @Output() pageChange: EventEmitter<{\r\n    next: number;\r\n    prev: number;\r\n  }> = new EventEmitter();\r\n\r\n  // emit filter event : ColumnModel<T>\r\n  @Output() filter: EventEmitter<FilterOption<T>> = new EventEmitter();\r\n\r\n  // emit state instance event\r\n  @Output() register: EventEmitter<\r\n    BehaviorSubject<TableState<T>>\r\n  > = new EventEmitter();\r\n\r\n  // emit select event : Observable<T[]>\r\n  @Output() selected: EventEmitter<Observable<T[]>> = new EventEmitter();\r\n\r\n  constructor(private tableService: TableService<T>) {}\r\n\r\n  private setExpandState() {\r\n    this.expendable = this.expendable || this.accordion;\r\n    console.log(this.expendable);\r\n    if (this.expendable) {\r\n      this.expandKey$ = this.setExpandKey$();\r\n    }\r\n  }\r\n\r\n  private setTableProps() {\r\n    const { pagination, filters } = this.options;\r\n    this.rows$ = this.setRowWithState$();\r\n    this.columns$ = this.setColumns$(filters);\r\n    this.pagination = { ...pagination, id: uuid4() };\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.theme = this.theme || 'accent';\r\n    this.tableState$ = new BehaviorSubject<TableState<T>>({\r\n      mode: '',\r\n    });\r\n\r\n    this.setTableProps();\r\n    this.setExpandState();\r\n\r\n    this.register.emit(this.tableState$);\r\n  }\r\n\r\n  private setRowState(\r\n    rows: RowModel<T>[],\r\n    state: TableState<T>\r\n  ): RowModel<T>[] {\r\n    const { mode, ids, row, options } = state;\r\n\r\n    switch (mode) {\r\n      case 'expand':\r\n        return rows.map((rowItem) => {\r\n          if (ids.indexOf(rowItem.item['id']) >= 0) {\r\n            rowItem.expanded = !rowItem.expanded;\r\n          }\r\n          return rowItem;\r\n        });\r\n      case 'form':\r\n        const { columns } = this.tableService.setColumns({\r\n          tableColumns: this.columns,\r\n          model: this.model,\r\n          filters: this.options.filters,\r\n        });\r\n\r\n        rows = this.tableService.onFormMode(rows, columns, options);\r\n        return [...rows];\r\n\r\n      case 'add':\r\n        rows = this.tableService.onAddFormRow(rows, this.columns);\r\n        return [...rows];\r\n\r\n      case 'edit':\r\n        rows = this.tableService.onEditMode(rows, row, this.columns, options);\r\n        return [...rows];\r\n      case 'save':\r\n        return this.tableService.onSaveMode(rows, 'id', row.item);\r\n      case 'cancel':\r\n        rows.shift();\r\n        return [...rows];\r\n      default:\r\n        return [...rows];\r\n    }\r\n  }\r\n\r\n  private setRows$(): Observable<RowModel<T>[]> {\r\n    return this.data$.pipe(\r\n      map((data) => {\r\n        return this.tableService.setRows(data, this.options);\r\n      })\r\n    );\r\n  }\r\n\r\n  private setRowWithState$() {\r\n    return combineLatest([\r\n      this.setRows$(),\r\n      this.tableState$.asObservable(),\r\n    ]).pipe(map((pair) => this.setRowState(pair[0], pair[1])));\r\n  }\r\n\r\n  private setColumns$(filters: ColumnDef<T>[]) {\r\n    return this.data$.pipe(\r\n      map(() => {\r\n        const { columns, columnsDefs } = this.tableService.setColumns({\r\n          tableColumns: this.columns,\r\n          model: this.model,\r\n          filters: [...filters],\r\n          selectable: this.selectable,\r\n          accordion: this.accordion,\r\n          hasActions: this.hasActions,\r\n        });\r\n\r\n        this.columnDefs = columnsDefs;\r\n        this.columns = columns;\r\n        return columns;\r\n      })\r\n    );\r\n  }\r\n\r\n  // method to handle key of expand table template (expandSlots) - key need to be the same as the object field\r\n  // ex { name : string } columnDef : name\r\n  private setExpandKey$(): Observable<ColumnDef<T>> {\r\n    return this.tableState$.pipe(\r\n      map((state) => {\r\n        const { mode, column } = state;\r\n\r\n        if (mode === 'expand') {\r\n          return column?.columnDef || 'accordion';\r\n        }\r\n\r\n        return '';\r\n      })\r\n    );\r\n  }\r\n\r\n  // method which handle expand row state\r\n  public onExpandRow(row: RowModel<T>) {\r\n    if (this.accordion) {\r\n      this.tableState$.next({ mode: 'expand', ids: [row.item['id']] });\r\n    }\r\n  }\r\n\r\n  // EMIT EVENTS\r\n\r\n  public onPageChange(event) {\r\n    this.pageChange.emit(event);\r\n  }\r\n\r\n  public onSort(sort: Sort): void {\r\n    this.sort.emit(sort);\r\n  }\r\n  public onFilter(filterOption: FilterOption<T>): void {\r\n    this.filter.emit(filterOption);\r\n  }\r\n\r\n  // method which emit  selection items : []T\r\n  public onSelect(): void {\r\n    const select$ = this.selection.changed.pipe(\r\n      map((selection: SelectionChange<RowModel<T>>) => {\r\n        const { source } = selection;\r\n        return source.selected.map((row) => row.item);\r\n      })\r\n    );\r\n\r\n    this.selected.emit(select$);\r\n  }\r\n\r\n  // SELECT LOGIC SECTION\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  public isAllSelected(): boolean {\r\n    const numSelected = this.selection.selected?.length;\r\n    const numRows = this.rows.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  public masterToggle(): void {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.rows.map((row) => this.selection.select(row));\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "editable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "id[]",
                    "optional": true,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "filters",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ColumnDef<T>[]",
                    "optional": true,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "pagination",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PaginationInstance",
                    "optional": true,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "pending",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "id[]",
                    "optional": true,
                    "description": "",
                    "line": 45
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "TableState",
            "id": "interface-TableState-6fb629ab5359e7883fb10e1c7a52b6fa",
            "file": "projects/lib-kakal-ui/src/lib/app/components/table/table.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  OnChanges,\r\n} from '@angular/core';\r\n\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { PaginationInstance } from 'ngx-pagination';\r\n\r\nimport { TableService } from './table.service';\r\nimport { RowModel } from './models/row.model';\r\n\r\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { Sort } from '@angular/material/sort';\r\nimport {\r\n  trigger,\r\n  state,\r\n  style,\r\n  transition,\r\n  animate,\r\n} from '@angular/animations';\r\nimport { ColumnDef, ColumnModel } from '../columns/column.model';\r\n\r\nimport { SelectionChange, SelectionModel } from '@angular/cdk/collections';\r\nimport { v4 as uuid4 } from 'uuid';\r\nimport { FilterOption } from '../columns/column-filter/column-filter.component';\r\n\r\ndeclare type id = string | number;\r\n\r\n// interface for table options : {\r\n// filters - keys to remove unwanted fields form object (ex - id)\r\n// pagination - a PaginationInstance\r\n// editable - tag rows to start in edit mode\r\n// pending - tag rows for specific start style\r\n// }\r\nexport interface TableOptions<T> {\r\n  filters?: ColumnDef<T>[];\r\n  pagination?: PaginationInstance;\r\n  editable?: id[];\r\n  pending?: id[];\r\n}\r\n\r\n// interface for every comp which handle kkl-table states :\r\n// mode : edit/add/form/expand/close/remove/delete\r\n// options : additional data\r\n\r\ntype state =\r\n  | 'add'\r\n  | 'save'\r\n  | 'edit'\r\n  | 'expand'\r\n  | 'cancel'\r\n  | 'delete'\r\n  | 'form'\r\n  | '';\r\n\r\nexport interface TableState<T> {\r\n  mode?: state;\r\n  ids?: id[];\r\n  row?: RowModel<T>;\r\n  column?: ColumnModel<T>;\r\n  options?: any;\r\n}\r\n\r\n// interface for every comp which want to use kkl-table = {\r\n// data : array of objects to render in table\r\n//  columns : array of ColumnsModel\r\n// options : see TableOptions interface\r\n// model : new instance of the data object\r\n// }\r\nexport interface Table<T> {\r\n  data$: Observable<T[]>;\r\n  columns: ColumnModel<T>[];\r\n  options: TableOptions<T>;\r\n  model: T;\r\n}\r\n\r\n@Component({\r\n  selector: 'kkl-table',\r\n  templateUrl: './table.component.html',\r\n  styleUrls: ['./table.component.scss'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({ height: '0rem', minHeight: '0' })),\r\n      state('expanded', style({ height: '*' })),\r\n      transition(\r\n        'expanded <=> collapsed',\r\n        animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')\r\n      ),\r\n    ]),\r\n  ],\r\n  providers: [TableService, TableService],\r\n})\r\nexport class TableComponent<T> implements OnInit, Table<T> {\r\n  // color for hedaer : primary or accent\r\n  @Input() public theme: ThemePalette;\r\n\r\n  // data[]\r\n  @Input() public data$: Observable<T[]>;\r\n\r\n  // array of columns model\r\n\r\n  @Input() public columns: ColumnModel<T>[];\r\n\r\n  // table data instance for column keys\r\n  @Input() public model: T;\r\n\r\n  @Input() public options: TableOptions<T>;\r\n\r\n  // if table have state modes\r\n  @Input() public paginator: boolean;\r\n  @Input() public expendable: boolean;\r\n  @Input() public accordion: boolean;\r\n  @Input() public selectable: boolean;\r\n  @Input() public hasState: boolean;\r\n  @Input() public hasFooter: boolean;\r\n  @Input() public hasActions: boolean;\r\n\r\n  // ng template for column header\r\n  @Input() public headerSlots: {} = {};\r\n\r\n  // ng template for cell\r\n  @Input() public rowSlots: {};\r\n\r\n  // ng template for filter\r\n  @Input() public filterSlots: {};\r\n\r\n  // ng template for footer cell\r\n  @Input() public footerSlots: {};\r\n\r\n  // ng template for select cell\r\n  @Input() public selectSlot: {};\r\n\r\n  // ng template for expand cell\r\n  @Input() public expandSlots: {};\r\n\r\n  // -----------------------------------------------------------------------/\r\n\r\n  public rows$: Observable<RowModel<T>[]>;\r\n  public columns$: Observable<ColumnModel<T>[]>;\r\n  public expandKey$: Observable<ColumnDef<T>>;\r\n  public columnDefs: ColumnDef<T>[];\r\n  public pagination: PaginationInstance;\r\n\r\n  // Subject which control table state mode : edit/expand/save\r\n  public tableState$: BehaviorSubject<TableState<T>>;\r\n\r\n  // cdk object that handle selection\r\n  public selection: SelectionModel<RowModel<T>> = new SelectionModel<\r\n    RowModel<T>\r\n  >(true, [], true);\r\n\r\n  private rows: RowModel<T>[];\r\n\r\n  // -----------------------------------------------------------------------/\r\n\r\n  // emit sort event : Sort\r\n  @Output() sort: EventEmitter<Sort> = new EventEmitter();\r\n\r\n  // emit pagination event : {next : number, prev : number}\r\n  @Output() pageChange: EventEmitter<{\r\n    next: number;\r\n    prev: number;\r\n  }> = new EventEmitter();\r\n\r\n  // emit filter event : ColumnModel<T>\r\n  @Output() filter: EventEmitter<FilterOption<T>> = new EventEmitter();\r\n\r\n  // emit state instance event\r\n  @Output() register: EventEmitter<\r\n    BehaviorSubject<TableState<T>>\r\n  > = new EventEmitter();\r\n\r\n  // emit select event : Observable<T[]>\r\n  @Output() selected: EventEmitter<Observable<T[]>> = new EventEmitter();\r\n\r\n  constructor(private tableService: TableService<T>) {}\r\n\r\n  private setExpandState() {\r\n    this.expendable = this.expendable || this.accordion;\r\n    console.log(this.expendable);\r\n    if (this.expendable) {\r\n      this.expandKey$ = this.setExpandKey$();\r\n    }\r\n  }\r\n\r\n  private setTableProps() {\r\n    const { pagination, filters } = this.options;\r\n    this.rows$ = this.setRowWithState$();\r\n    this.columns$ = this.setColumns$(filters);\r\n    this.pagination = { ...pagination, id: uuid4() };\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.theme = this.theme || 'accent';\r\n    this.tableState$ = new BehaviorSubject<TableState<T>>({\r\n      mode: '',\r\n    });\r\n\r\n    this.setTableProps();\r\n    this.setExpandState();\r\n\r\n    this.register.emit(this.tableState$);\r\n  }\r\n\r\n  private setRowState(\r\n    rows: RowModel<T>[],\r\n    state: TableState<T>\r\n  ): RowModel<T>[] {\r\n    const { mode, ids, row, options } = state;\r\n\r\n    switch (mode) {\r\n      case 'expand':\r\n        return rows.map((rowItem) => {\r\n          if (ids.indexOf(rowItem.item['id']) >= 0) {\r\n            rowItem.expanded = !rowItem.expanded;\r\n          }\r\n          return rowItem;\r\n        });\r\n      case 'form':\r\n        const { columns } = this.tableService.setColumns({\r\n          tableColumns: this.columns,\r\n          model: this.model,\r\n          filters: this.options.filters,\r\n        });\r\n\r\n        rows = this.tableService.onFormMode(rows, columns, options);\r\n        return [...rows];\r\n\r\n      case 'add':\r\n        rows = this.tableService.onAddFormRow(rows, this.columns);\r\n        return [...rows];\r\n\r\n      case 'edit':\r\n        rows = this.tableService.onEditMode(rows, row, this.columns, options);\r\n        return [...rows];\r\n      case 'save':\r\n        return this.tableService.onSaveMode(rows, 'id', row.item);\r\n      case 'cancel':\r\n        rows.shift();\r\n        return [...rows];\r\n      default:\r\n        return [...rows];\r\n    }\r\n  }\r\n\r\n  private setRows$(): Observable<RowModel<T>[]> {\r\n    return this.data$.pipe(\r\n      map((data) => {\r\n        return this.tableService.setRows(data, this.options);\r\n      })\r\n    );\r\n  }\r\n\r\n  private setRowWithState$() {\r\n    return combineLatest([\r\n      this.setRows$(),\r\n      this.tableState$.asObservable(),\r\n    ]).pipe(map((pair) => this.setRowState(pair[0], pair[1])));\r\n  }\r\n\r\n  private setColumns$(filters: ColumnDef<T>[]) {\r\n    return this.data$.pipe(\r\n      map(() => {\r\n        const { columns, columnsDefs } = this.tableService.setColumns({\r\n          tableColumns: this.columns,\r\n          model: this.model,\r\n          filters: [...filters],\r\n          selectable: this.selectable,\r\n          accordion: this.accordion,\r\n          hasActions: this.hasActions,\r\n        });\r\n\r\n        this.columnDefs = columnsDefs;\r\n        this.columns = columns;\r\n        return columns;\r\n      })\r\n    );\r\n  }\r\n\r\n  // method to handle key of expand table template (expandSlots) - key need to be the same as the object field\r\n  // ex { name : string } columnDef : name\r\n  private setExpandKey$(): Observable<ColumnDef<T>> {\r\n    return this.tableState$.pipe(\r\n      map((state) => {\r\n        const { mode, column } = state;\r\n\r\n        if (mode === 'expand') {\r\n          return column?.columnDef || 'accordion';\r\n        }\r\n\r\n        return '';\r\n      })\r\n    );\r\n  }\r\n\r\n  // method which handle expand row state\r\n  public onExpandRow(row: RowModel<T>) {\r\n    if (this.accordion) {\r\n      this.tableState$.next({ mode: 'expand', ids: [row.item['id']] });\r\n    }\r\n  }\r\n\r\n  // EMIT EVENTS\r\n\r\n  public onPageChange(event) {\r\n    this.pageChange.emit(event);\r\n  }\r\n\r\n  public onSort(sort: Sort): void {\r\n    this.sort.emit(sort);\r\n  }\r\n  public onFilter(filterOption: FilterOption<T>): void {\r\n    this.filter.emit(filterOption);\r\n  }\r\n\r\n  // method which emit  selection items : []T\r\n  public onSelect(): void {\r\n    const select$ = this.selection.changed.pipe(\r\n      map((selection: SelectionChange<RowModel<T>>) => {\r\n        const { source } = selection;\r\n        return source.selected.map((row) => row.item);\r\n      })\r\n    );\r\n\r\n    this.selected.emit(select$);\r\n  }\r\n\r\n  // SELECT LOGIC SECTION\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  public isAllSelected(): boolean {\r\n    const numSelected = this.selection.selected?.length;\r\n    const numRows = this.rows.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  public masterToggle(): void {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.rows.map((row) => this.selection.select(row));\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "column",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ColumnModel<T>",
                    "optional": true,
                    "description": "",
                    "line": 66
                },
                {
                    "name": "ids",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "id[]",
                    "optional": true,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "state",
                    "optional": true,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 67
                },
                {
                    "name": "row",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RowModel<T>",
                    "optional": true,
                    "description": "",
                    "line": 65
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "BreakpointService",
            "id": "injectable-BreakpointService-ac6d97224afbe7b8b0ca0e4899e94316",
            "file": "projects/lib-kakal-ui/src/lib/app/utilities/services/breakpoint.service.ts",
            "properties": [
                {
                    "name": "currentScreenSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "destroyed",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "displayNameMap",
                    "defaultValue": "new Map([\r\n    [Breakpoints.XSmall, 'xs'],\r\n    [Breakpoints.Small, 'sm'],\r\n    [Breakpoints.Medium, 'md'],\r\n    [Breakpoints.Large, 'lg'],\r\n    [Breakpoints.XLarge, 'xl'],\r\n  ])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "methods": [
                {
                    "name": "isTablet",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport { Injectable, OnDestroy } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { map, shareReplay, takeUntil } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BreakpointService implements OnDestroy {\r\n\r\n  public destroyed = new Subject<void>();\r\n\r\n  public currentScreenSize: string;\r\n\r\n  private displayNameMap = new Map([\r\n    [Breakpoints.XSmall, 'xs'],\r\n    [Breakpoints.Small, 'sm'],\r\n    [Breakpoints.Medium, 'md'],\r\n    [Breakpoints.Large, 'lg'],\r\n    [Breakpoints.XLarge, 'xl'],\r\n  ]);\r\n\r\n  constructor(private breakpointObserver: BreakpointObserver) {\r\n    this.breakpointObserver\r\n      .observe([\r\n        Breakpoints.XSmall,\r\n        Breakpoints.Small,\r\n        Breakpoints.Medium,\r\n        Breakpoints.Large,\r\n        Breakpoints.XLarge,\r\n      ])\r\n      .pipe(takeUntil(this.destroyed))\r\n      .subscribe((result) => {\r\n        for (const query of Object.keys(result.breakpoints)) {\r\n          if (result.breakpoints[query]) {\r\n            this.currentScreenSize =\r\n              this.displayNameMap.get(query) ?? 'Unknown';\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n    public isTablet(): Observable<boolean> {\r\n      return this.breakpointObserver.observe(Breakpoints.Medium)\r\n        .pipe(\r\n          map(result => result.matches),\r\n          shareReplay()\r\n        );\r\n    }\r\n\r\n\r\n  ngOnDestroy() {}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ColumnsService",
            "id": "injectable-ColumnsService-812b97030780f087c6cd4b4f09cb86d2",
            "file": "projects/lib-kakal-ui/src/lib/app/components/columns/columns.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "addAccordionColumn",
                    "args": [
                        {
                            "name": "columns",
                            "type": "ColumnModel<T>[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ColumnModel[]",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "columns",
                            "type": "ColumnModel<T>[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "addActionsColumn",
                    "args": [
                        {
                            "name": "columns",
                            "type": "ColumnModel<T>[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ColumnModel[]",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "columns",
                            "type": "ColumnModel<T>[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "addSelectColumn",
                    "args": [
                        {
                            "name": "columns",
                            "type": "ColumnModel<T>[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ColumnModel[]",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "columns",
                            "type": "ColumnModel<T>[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "filterColumnDefs",
                    "args": [
                        {
                            "name": "columnDefs",
                            "type": "ColumnDef<T>[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "filters",
                            "type": "ColumnDef<T>[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ColumnDef[]",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "columnDefs",
                            "type": "ColumnDef<T>[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "filters",
                            "type": "ColumnDef<T>[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getColumns",
                    "args": [
                        {
                            "name": "options",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ColumnsData<T>",
                    "typeParameters": [],
                    "line": 151,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "options",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getColumnsDefs",
                    "args": [
                        {
                            "name": "columns",
                            "type": "ColumnModel<T>[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "columnDefs",
                            "type": "ColumnDef<T>[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "columns",
                            "type": "ColumnModel<T>[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "columnDefs",
                            "type": "ColumnDef<T>[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initColumnsDefs",
                    "args": [
                        {
                            "name": "model",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "filters",
                            "type": "ColumnDef<T>[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ColumnDef[]",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "model",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "filters",
                            "type": "ColumnDef<T>[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setColumnDefs",
                    "args": [
                        {
                            "name": "model",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "filters",
                            "type": "ColumnDef<T>[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ColumnDef[]",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "model",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "filters",
                            "type": "ColumnDef<T>[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setColumnDefsFromColumns",
                    "args": [
                        {
                            "name": "columns",
                            "type": "ColumnModel<T>[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "columnDefs",
                            "type": "ColumnDef<T>[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ColumnDef[]",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "columns",
                            "type": "ColumnModel<T>[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "columnDefs",
                            "type": "ColumnDef<T>[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setColumnDefsFromType",
                    "args": [
                        {
                            "name": "model",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ColumnDef[]",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "model",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setColumnsWithState",
                    "args": [
                        {
                            "name": "selectable",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "hasActions",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "accordion",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ColumnModel<T>[]",
                    "typeParameters": [],
                    "line": 128,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "selectable",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "hasActions",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "accordion",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setColumnWithColumnDefs",
                    "args": [
                        {
                            "name": "columns",
                            "type": "ColumnModel<T>[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "columnDefs",
                            "type": "ColumnDef<T>[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ColumnModel[]",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "columns",
                            "type": "ColumnModel<T>[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "columnDefs",
                            "type": "ColumnDef<T>[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSelect",
                    "args": [
                        {
                            "name": "columns",
                            "type": "ColumnDef<T>[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ColumnDef[]",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "columns",
                            "type": "ColumnDef<T>[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { ColumnDef, ColumnModel } from './column.model';\r\nimport { keys } from 'ts-transformer-keys';\r\n\r\nexport interface ColumnsData<T> {\r\n  columns: ColumnModel<T>[];\r\n  columnsDefs: ColumnDef<T>[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ColumnsService<T> {\r\n  constructor() {}\r\n\r\n  private setColumnDefsFromType(model: T): ColumnDef<T>[] {\r\n    return Object.keys(model);\r\n  }\r\n\r\n  private filterColumnDefs(\r\n    columnDefs: ColumnDef<T>[],\r\n    filters: ColumnDef<T>[]\r\n  ): ColumnDef<T>[] {\r\n    if (filters.length > 0) {\r\n      const filteredColumnsDefs = columnDefs.filter(\r\n        (item) => !filters.includes(item)\r\n      );\r\n      return filteredColumnsDefs;\r\n    } else {\r\n      return columnDefs;\r\n    }\r\n  }\r\n\r\n  private setColumnDefs(model: T, filters: ColumnDef<T>[]): ColumnDef<T>[] {\r\n    return this.filterColumnDefs(this.setColumnDefsFromType(model), filters);\r\n  }\r\n\r\n  private setColumnWithColumnDefs(\r\n    columns: ColumnModel<T>[],\r\n    columnDefs: ColumnDef<T>[]\r\n  ): ColumnModel<T>[] {\r\n    return columns.map((column, i) => {\r\n      if (column.columnDef === 'select') {\r\n        i++;\r\n      }\r\n\r\n      return new ColumnModel<T>({\r\n        ...column,\r\n        columnDef: column.columnDef || columnDefs[i],\r\n      });\r\n    });\r\n  }\r\n\r\n  private setColumnDefsFromColumns(\r\n    columns: ColumnModel<T>[],\r\n    columnDefs: ColumnDef<T>[]\r\n  ): ColumnDef<T>[] {\r\n    if (columns.length > columnDefs.length) {\r\n      columnDefs = columns.map((column) => column.columnDef);\r\n    }\r\n    return columnDefs;\r\n  }\r\n\r\n  private initColumnsDefs(model: T, filters: ColumnDef<T>[]): ColumnDef<T>[] {\r\n    return this.setColumnDefs(model, filters);\r\n  }\r\n\r\n  private getColumnsDefs(\r\n    columns: ColumnModel<T>[],\r\n    columnDefs: ColumnDef<T>[]\r\n  ) {\r\n    return this.setSelect(this.setColumnDefsFromColumns(columns, columnDefs));\r\n  }\r\n\r\n  private setSelect(columns: ColumnDef<T>[]): ColumnDef<T>[] {\r\n    const newColumns = [...columns];\r\n    const index = newColumns.findIndex((columnDef) => columnDef === 'select');\r\n\r\n    if (index < 0 || index === 0) {\r\n      return newColumns;\r\n    }\r\n\r\n    const selectColumn: ColumnDef<T> = newColumns.find(\r\n      (columnDef) => columnDef === 'select'\r\n    );\r\n    newColumns.splice(index, 1);\r\n\r\n    const updateColumns = [selectColumn, ...newColumns];\r\n\r\n    return updateColumns;\r\n  }\r\n\r\n  private addSelectColumn(columns: ColumnModel<T>[]): ColumnModel<T>[] {\r\n    const columnsWithSelect = [...columns];\r\n\r\n    const column = new ColumnModel<T>({\r\n      columnDef: 'select',\r\n      type: 'select',\r\n      selectable: true,\r\n    });\r\n\r\n    columnsWithSelect.push(column);\r\n\r\n    return columnsWithSelect;\r\n  }\r\n  private addActionsColumn(columns: ColumnModel<T>[]): ColumnModel<T>[] {\r\n    const columnsWithActions = [...columns];\r\n    const column = new ColumnModel<T>({\r\n      columnDef: 'actions',\r\n      type: 'actions',\r\n    });\r\n\r\n    columnsWithActions.push(column);\r\n    return columnsWithActions;\r\n  }\r\n\r\n  private addAccordionColumn(columns: ColumnModel<T>[]): ColumnModel<T>[] {\r\n    const columnsWithAccordion = [...columns];\r\n    const column = new ColumnModel<T>({\r\n      columnDef: 'accordion',\r\n      type: 'custom',\r\n    });\r\n\r\n    columnsWithAccordion.push(column);\r\n    return columnsWithAccordion;\r\n  }\r\n\r\n  private setColumnsWithState(\r\n    selectable,\r\n    hasActions,\r\n    accordion\r\n  ): (columns: ColumnModel<T>[]) => ColumnModel<T>[] {\r\n    return (columns: ColumnModel<T>[]) => {\r\n      let newColumns = [...columns];\r\n\r\n      if (selectable) {\r\n        newColumns = this.addSelectColumn(newColumns);\r\n      }\r\n\r\n      if (accordion) {\r\n        newColumns = this.addAccordionColumn(newColumns);\r\n      }\r\n      if (hasActions) {\r\n        newColumns = this.addActionsColumn(newColumns);\r\n      }\r\n\r\n      return newColumns;\r\n    };\r\n  }\r\n\r\n  public getColumns(options: {\r\n    model: T;\r\n    tableColumns: ColumnModel<T>[];\r\n    filters: ColumnDef<T>[];\r\n    selectable?: boolean;\r\n    accordion?: boolean;\r\n    hasActions?: boolean;\r\n  }): ColumnsData<T> {\r\n    const {\r\n      model,\r\n      tableColumns,\r\n      selectable,\r\n      hasActions,\r\n      accordion,\r\n      filters,\r\n    } = options;\r\n\r\n    const columnWithState = this.setColumnsWithState(\r\n      selectable,\r\n      hasActions,\r\n      accordion\r\n    )(tableColumns);\r\n    const columnsDefs = this.initColumnsDefs(model, filters);\r\n    const columns = this.setColumnWithColumnDefs(columnWithState, columnsDefs);\r\n    return { columns, columnsDefs: this.getColumnsDefs(columns, columnsDefs) };\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "type": "injectable"
        },
        {
            "name": "FormService",
            "id": "injectable-FormService-f6265c22d90b810ec5a1bf240c1c2ebb",
            "file": "projects/lib-kakal-ui/src/lib/app/components/form/services/form.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "createQuestionGroup",
                    "args": [
                        {
                            "name": "config",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "QuestionGroupModel",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getFieldControl",
                    "args": [
                        {
                            "name": "question",
                            "type": "Question",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "question",
                            "type": "Question",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setFieldControl",
                    "args": [
                        {
                            "name": "question",
                            "type": "QuestionBase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ControlTemplate",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "question",
                            "type": "QuestionBase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setForm",
                    "args": [
                        {
                            "name": "form",
                            "type": "QuestionGroupModel[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "QuestionGroupModel[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setFormGroup",
                    "args": [
                        {
                            "name": "questions",
                            "type": "Question[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "questions",
                            "type": "Question[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setGroup",
                    "args": [
                        {
                            "name": "questions",
                            "type": "Question[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "literal type",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "questions",
                            "type": "Question[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setGroupControl",
                    "args": [
                        {
                            "name": "control",
                            "type": "QuestionGroupModel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "QuestionGroupModel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setQuestion",
                    "args": [
                        {
                            "name": "question",
                            "type": "Question",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 127,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "question",
                            "type": "Question",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setQuestionGroup",
                    "args": [
                        {
                            "name": "questions",
                            "type": "Question[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "literal type",
                    "typeParameters": [],
                    "line": 149,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "questions",
                            "type": "Question[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setQuestionList",
                    "args": [
                        {
                            "name": "questions",
                            "type": "Question[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Question[]",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "questions",
                            "type": "Question[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { QuestionTextareaModel } from '../models/question-textarea.model';\r\nimport { QuestionCalendar } from '../models/question-calendar';\r\nimport { QuestionTextModel } from '../models/question-text.model';\r\nimport {\r\n  AbstractControlOptions,\r\n  AsyncValidatorFn,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  ValidatorFn,\r\n} from '@angular/forms';\r\nimport {\r\n  GroupOptions,\r\n  QuestionGroupModel,\r\n} from '../models/question-group.model';\r\nimport { QuestionBaseModel } from '../models/question.model';\r\nimport { QuestionNumberModel } from '../models/question-number.model';\r\nimport { QuestionAutocompleteModel } from '../models/question-autocomplete';\r\nimport { QuestionSelectModel } from '../models/question-select.model';\r\n\r\nexport type ControlTemplate = [\r\n  state: any,\r\n  validatorOrOpts?: ValidatorFn | AbstractControlOptions | ValidatorFn[],\r\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[]\r\n];\r\n\r\nexport type QuestionBase = QuestionBaseModel<string | number | Date>;\r\n\r\nexport type Question =\r\n  | QuestionSelectModel\r\n  | QuestionTextModel\r\n  | QuestionCalendar\r\n  | QuestionTextareaModel\r\n  | QuestionNumberModel\r\n  | QuestionAutocompleteModel\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FormService {\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  private setFieldControl(question: QuestionBase): ControlTemplate {\r\n    const { value, validations } = question;\r\n    return [value || '', validations];\r\n  }\r\n\r\n  public getFieldControl(question: Question): FormControl {\r\n    const template = this.setFieldControl(question);\r\n    return this.fb.control(template[0], template[1]);\r\n  }\r\n\r\n  private setGroupControl(control: QuestionGroupModel): FormGroup {\r\n    const { questions } = control;\r\n    return this.fb.group(this.setGroup(questions));\r\n  }\r\n\r\n  private setGroup(questions: Question[]): { [x: string]: ControlTemplate } {\r\n    return questions\r\n      .map((question: Question) => question)\r\n      .reduce((acc, control: Question) => {\r\n        let template;\r\n        const { key } = control;\r\n\r\n        if (control instanceof QuestionBaseModel) {\r\n          template = this.setFieldControl(control);\r\n        }\r\n\r\n        if (control instanceof QuestionGroupModel) {\r\n          template = this.setGroupControl(control);\r\n        }\r\n\r\n        return {\r\n          ...acc,\r\n          [key]: template,\r\n        };\r\n      }, {});\r\n  }\r\n\r\n  // method which return QuestionGroupModel instance\r\n  public createQuestionGroup(config: {\r\n    key: string;\r\n    questions: Question[];\r\n    options?: GroupOptions;\r\n  }): QuestionGroupModel {\r\n    const { key, questions, options } = config;\r\n    return new QuestionGroupModel({\r\n      ...options,\r\n      key,\r\n      label: '' || options?.label,\r\n      questions: this.setQuestionList(questions),\r\n      formGroup: this.setFormGroup(questions),\r\n    });\r\n  }\r\n\r\n  // method which return FormGroup instance\r\n  public setFormGroup(questions: Question[]): FormGroup {\r\n    const template = this.setGroup(this.setQuestionList(questions));\r\n    return this.fb.group(template);\r\n  }\r\n\r\n  // method which return FormGroup instance with multiple FormGroup\r\n  public setForm(form: QuestionGroupModel[]): FormGroup {\r\n    const template = form\r\n      .map((group: QuestionGroupModel) => group)\r\n      .reduce((acc, group) => {\r\n        const { key } = group;\r\n\r\n        return {\r\n          ...acc,\r\n          [key]: this.setFormGroup(group.questions),\r\n        };\r\n      }, {});\r\n\r\n    return this.fb.group(template);\r\n  }\r\n\r\n  // method which return array of Question instance\r\n  public setQuestionList(questions: Question[]): Question[] {\r\n    return questions.map((question: Question) => {\r\n      return this.setQuestion(question);\r\n    });\r\n  }\r\n\r\n  // method which return class Question instance\r\n  public setQuestion(question: Question) {\r\n    switch (question.controlType) {\r\n      case 'number':\r\n        return new QuestionNumberModel(question);\r\n\r\n      case 'select':\r\n        return new QuestionSelectModel(question);\r\n\r\n      case 'textarea':\r\n        return new QuestionTextareaModel(question);\r\n\r\n      case 'calendar':\r\n        return new QuestionCalendar(question);\r\n\r\n      case 'autocomplete':\r\n        return new QuestionAutocompleteModel(question);\r\n      default:\r\n        return new QuestionTextModel(question);\r\n    }\r\n  }\r\n\r\n  // method which return object of key : question\r\n  public setQuestionGroup(questions: Question[]): { [x: string]: Question } {\r\n    return questions\r\n      .map((question: Question) => question)\r\n      .reduce((acc, control: Question) => {\r\n        const { key } = control;\r\n        return {\r\n          ...acc,\r\n          [key]: this.setQuestion(control),\r\n        };\r\n      }, {});\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 41,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "GlobalErrorHandler",
            "id": "injectable-GlobalErrorHandler-eaee9346997537219289bec55d3310c3",
            "file": "projects/lib-kakal-ui/src/lib/app/utilities/interceptors/error.ts",
            "properties": [],
            "methods": [
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "error",
                            "type": "Error",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "Error",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { ErrorHandler, Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class GlobalErrorHandler implements ErrorHandler {\r\n\r\n  public handleError(error: Error) {\r\n    console.error(error.message)\r\n  }\r\n}\r\n",
            "type": "injectable"
        },
        {
            "name": "IconsService",
            "id": "injectable-IconsService-fd41bcf23f1d0b91c8c977b6167c03ea",
            "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.service.ts",
            "properties": [
                {
                    "name": "icons",
                    "defaultValue": "{\r\n\r\n    like: THUMBUP_ICON,\r\n    button: BUTTON_ICON,\r\n    select: SELECT_ICON,\r\n\r\n    list: LIST_ICON,\r\n    add: ADD_ICON,\r\n\r\n    print: PRINT_ICON,\r\n    save: SAVE_ICON,\r\n\r\n    home: HOME_ICON,\r\n    location: LOCATION_ICON,\r\n    building: BUILDING_ICON,\r\n    measurements: MEASUREMENTS_ICON,\r\n    supervision: SUPERVISION_ICON,\r\n    evaluation: EVALUATION_ICON,\r\n    planing: PLANING_ICON,\r\n    transactions: TRANSACTION_ICON,\r\n    tree: TREE_ICON,\r\n    treegradientlands: TREE_GRADIENT_LANDS_ICON,\r\n    bottomtreelands: BOTTOM_TREE_LOGO_LANDS_ICON,\r\n    assets: ASSETS_ICON,\r\n    loyer: LOYER_ICON,\r\n    mail: MAIL_ICON,\r\n    logo: LOGO_ICON,\r\n    calendar: CALENDAR_ICON,\r\n    openPlus: OPEN_PLUS,\r\n\r\n    destination: DESTINATION_ICON,\r\n    vSign: V_SIGN,\r\n    edit: EDIT_ICON,\r\n\r\n    gender: GENDER_ICON,\r\n\r\n    report: REPORTS_ICON,\r\n    reload: RELOAD_ICON,\r\n    flag: FLAG_ICON,\r\n    shield: SHIELD_ICON,\r\n    restaurant: RESTAURANT_ICON,\r\n\r\n    bus: BUS_ICON,\r\n    site: SITE_ICON,\r\n    bed: BED_ICON,\r\n    tent: TENT_ICON,\r\n    guide: GUIDE_ICON,\r\n    dinner: DINNER_ICON,\r\n    music: MUSIC_ICON,\r\n    playground: PLAYGROUND_ICON,\r\n\r\n    bell: BELL_ICON,\r\n    bottomTreeLogo: BOTTOM_TREE_LOGO,\r\n    group: GROUP_ICON,\r\n    treeLogo: TREE_LOGO,\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methods": [
                {
                    "name": "findIcon",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 118,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerIcon",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "icon",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 123,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "icon",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setIcon",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 130,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setIconsList",
                    "args": [
                        {
                            "name": "items",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 141,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "items",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { MatIconRegistry } from '@angular/material/icon';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  ADD_ICON,\r\n  LIST_ICON,\r\n  CALENDAR_ICON,\r\n  LOGO_ICON,\r\n  TREE_ICON,\r\n  BOTTOM_TREE_LOGO_LANDS_ICON,\r\n  ASSETS_ICON,\r\n  MAIL_ICON,\r\n  LOYER_ICON,\r\n  TREE_GRADIENT_LANDS_ICON,\r\n  TRANSACTION_ICON,\r\n  PLANING_ICON,\r\n  EVALUATION_ICON,\r\n  SUPERVISION_ICON,\r\n  MEASUREMENTS_ICON,\r\n  LOCATION_ICON,\r\n  BUILDING_ICON,\r\n  HOME_ICON,\r\n  SAVE_ICON,\r\n  PRINT_ICON,\r\n  SELECT_ICON,\r\n  BED_ICON,\r\n  BELL_ICON,\r\n  BOTTOM_TREE_LOGO,\r\n  BUS_ICON,\r\n  BUTTON_ICON,\r\n  DESTINATION_ICON,\r\n  DINNER_ICON,\r\n  EDIT_ICON,\r\n  FLAG_ICON,\r\n  GENDER_ICON,\r\n  GROUP_ICON,\r\n  GUIDE_ICON,\r\n  MUSIC_ICON,\r\n  OPEN_PLUS,\r\n  PLAYGROUND_ICON,\r\n  RELOAD_ICON,\r\n  REPORTS_ICON,\r\n  RESTAURANT_ICON,\r\n  SHIELD_ICON,\r\n  SITE_ICON,\r\n  TENT_ICON,\r\n  THUMBUP_ICON,\r\n  TREE_LOGO,\r\n  V_SIGN,\r\n} from './icons.list';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IconsService {\r\n  constructor(\r\n    private iconRegistry: MatIconRegistry,\r\n    private sanitizer: DomSanitizer\r\n  ) {}\r\n\r\n  public icons = {\r\n\r\n    like: THUMBUP_ICON,\r\n    button: BUTTON_ICON,\r\n    select: SELECT_ICON,\r\n\r\n    list: LIST_ICON,\r\n    add: ADD_ICON,\r\n\r\n    print: PRINT_ICON,\r\n    save: SAVE_ICON,\r\n\r\n    home: HOME_ICON,\r\n    location: LOCATION_ICON,\r\n    building: BUILDING_ICON,\r\n    measurements: MEASUREMENTS_ICON,\r\n    supervision: SUPERVISION_ICON,\r\n    evaluation: EVALUATION_ICON,\r\n    planing: PLANING_ICON,\r\n    transactions: TRANSACTION_ICON,\r\n    tree: TREE_ICON,\r\n    treegradientlands: TREE_GRADIENT_LANDS_ICON,\r\n    bottomtreelands: BOTTOM_TREE_LOGO_LANDS_ICON,\r\n    assets: ASSETS_ICON,\r\n    loyer: LOYER_ICON,\r\n    mail: MAIL_ICON,\r\n    logo: LOGO_ICON,\r\n    calendar: CALENDAR_ICON,\r\n    openPlus: OPEN_PLUS,\r\n\r\n    destination: DESTINATION_ICON,\r\n    vSign: V_SIGN,\r\n    edit: EDIT_ICON,\r\n\r\n    gender: GENDER_ICON,\r\n\r\n    report: REPORTS_ICON,\r\n    reload: RELOAD_ICON,\r\n    flag: FLAG_ICON,\r\n    shield: SHIELD_ICON,\r\n    restaurant: RESTAURANT_ICON,\r\n\r\n    bus: BUS_ICON,\r\n    site: SITE_ICON,\r\n    bed: BED_ICON,\r\n    tent: TENT_ICON,\r\n    guide: GUIDE_ICON,\r\n    dinner: DINNER_ICON,\r\n    music: MUSIC_ICON,\r\n    playground: PLAYGROUND_ICON,\r\n\r\n    bell: BELL_ICON,\r\n    bottomTreeLogo: BOTTOM_TREE_LOGO,\r\n    group: GROUP_ICON,\r\n    treeLogo: TREE_LOGO,\r\n  };\r\n\r\n  private findIcon(key: string): string {\r\n    const icon = this.icons[key.toLocaleLowerCase()];\r\n    return icon ? icon : null;\r\n  }\r\n\r\n  private registerIcon(key: string, icon: string) {\r\n    this.iconRegistry.addSvgIconLiteral(\r\n      key,\r\n      this.sanitizer.bypassSecurityTrustHtml(icon)\r\n    );\r\n  }\r\n\r\n  public setIcon(key: string): boolean {\r\n    const icon = this.findIcon(key);\r\n\r\n    if (icon) {\r\n      this.registerIcon(key, icon);\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  public setIconsList(items: any[]) {\r\n    items.map((item) => {\r\n      this.setIcon(item.svgUrl);\r\n    });\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "iconRegistry",
                        "type": "MatIconRegistry",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "sanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 55,
                "jsdoctags": [
                    {
                        "name": "iconRegistry",
                        "type": "MatIconRegistry",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "sanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "LayoutService",
            "id": "injectable-LayoutService-cace6e7a2862d99aace0894eb315f230",
            "file": "projects/lib-kakal-ui/src/lib/app/screens/layout/layout.service.ts",
            "properties": [
                {
                    "name": "currentPath$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<string>",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "hideWizard$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "methods": [
                {
                    "name": "emitCurrentPath",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCurrentPathObs",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<string>",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "getWizardObs",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "toggleWizard",
                    "args": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LayoutService {\r\n  private hideWizard$: BehaviorSubject<boolean>;\r\n  private currentPath$: BehaviorSubject<string>;\r\n\r\n  constructor() {\r\n    this.hideWizard$ = new BehaviorSubject<boolean>(false);\r\n    this.currentPath$ = new BehaviorSubject<string>('');\r\n  }\r\n\r\n  public getWizardObs(): Observable<boolean> {\r\n    return this.hideWizard$.asObservable();\r\n  }\r\n\r\n  public toggleWizard(value: boolean) {\r\n    return this.hideWizard$.next(value);\r\n  }\r\n\r\n  public getCurrentPathObs(): Observable<string> {\r\n    return this.currentPath$.asObservable();\r\n  }\r\n\r\n  public emitCurrentPath(value: string) {\r\n    return this.currentPath$.next(value);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "type": "injectable"
        },
        {
            "name": "MenuItemService",
            "id": "injectable-MenuItemService-a51ef2c1a9263cc9eb7d2bff7bb0b84d",
            "file": "projects/lib-kakal-ui/src/lib/app/components/menu-item/menu-item.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "active",
                    "args": [
                        {
                            "name": "item",
                            "type": "MenuItemModel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "MenuItemModel",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "MenuItemModel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getActiveObs",
                    "args": [
                        {
                            "name": "$active",
                            "type": "BehaviorSubject<boolean>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "$active",
                            "type": "BehaviorSubject<boolean>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "unactive",
                    "args": [
                        {
                            "name": "item",
                            "type": "MenuItemModel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "MenuItemModel",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "MenuItemModel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { MenuItemModel } from './menu-item.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MenuItemService {\r\n  constructor() {}\r\n\r\n  public getActiveObs($active: BehaviorSubject<boolean>): Observable<boolean> {\r\n    return $active.asObservable();\r\n  }\r\n\r\n  public active(item: MenuItemModel): MenuItemModel {\r\n    return new MenuItemModel({ ...item, isActive: true });\r\n  }\r\n  public unactive(item: MenuItemModel): MenuItemModel {\r\n    return new MenuItemModel({ ...item, isActive: false });\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "type": "injectable"
        },
        {
            "name": "MenuService",
            "id": "injectable-MenuService-879ce46df08a516cce547285875977d7",
            "file": "projects/lib-kakal-ui/src/lib/app/components/menu/menu.service.ts",
            "properties": [
                {
                    "name": "modulePrefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "methods": [
                {
                    "name": "activeStep",
                    "args": [
                        {
                            "name": "items",
                            "type": "MenuItemModel[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "key",
                            "type": "ListItemKeys",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "items",
                            "type": "MenuItemModel[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "key",
                            "type": "ListItemKeys",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "findList",
                    "args": [
                        {
                            "name": "menu",
                            "type": "MenuModel[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "MenuModel",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "menu",
                            "type": "MenuModel[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPrefix",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "setList",
                    "args": [
                        {
                            "name": "menu",
                            "type": "MenuModel[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "key",
                            "type": "ListItemKeys",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "MenuModel[]",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "menu",
                            "type": "MenuModel[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "key",
                            "type": "ListItemKeys",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setMenu",
                    "args": [
                        {
                            "name": "menu",
                            "type": "MenuModel[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "modulePrefix",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "key",
                            "type": "ListItemKeys",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "MenuModel[]",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "menu",
                            "type": "MenuModel[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "modulePrefix",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "key",
                            "type": "ListItemKeys",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setPrefix",
                    "args": [
                        {
                            "name": "modulePrefix",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "modulePrefix",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSteps",
                    "args": [
                        {
                            "name": "items",
                            "type": "MenuItemModel[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "key",
                            "type": "ListItemKeys",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "MenuItemModel[]",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "items",
                            "type": "MenuItemModel[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "key",
                            "type": "ListItemKeys",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "unactiveStep",
                    "args": [
                        {
                            "name": "items",
                            "type": "MenuItemModel[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "items",
                            "type": "MenuItemModel[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { MenuModel } from './menu.model';\r\nimport { MenuItemModel } from '../menu-item/menu-item.model';\r\nimport { ListItemKeys } from '../list-item/list-item.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MenuService {\r\n\r\n  private modulePrefix: string;\r\n\r\n  constructor() { }\r\n\r\n  public getPrefix(): string {\r\n    return this.modulePrefix;\r\n  }\r\n\r\n  public setPrefix(modulePrefix: string) {\r\n    this.modulePrefix = modulePrefix;\r\n  }\r\n\r\n  // METHODS TO HANDLE ACTIVE STEP STATUS\r\n  private activeStep(items: MenuItemModel[], key: ListItemKeys, value: any) {\r\n    items.find((item) => {\r\n      if (item[key] === value) {\r\n        item.active();\r\n      }\r\n    });\r\n  }\r\n\r\n  private unactiveStep(items: MenuItemModel[]) {\r\n    items.find((item) => {\r\n      if (item.isActive) {\r\n        item.unactive();\r\n      }\r\n    });\r\n  }\r\n\r\n  public setSteps(\r\n    items: MenuItemModel[],\r\n    key: ListItemKeys,\r\n    value: string\r\n  ): MenuItemModel[] {\r\n    this.unactiveStep(items);\r\n    this.activeStep(items, key, value);\r\n    return [...items];\r\n  }\r\n\r\n  public setList(\r\n    menu: MenuModel[],\r\n    key: ListItemKeys,\r\n    value: string\r\n  ): MenuModel[] {\r\n    const updateMenu = [...menu];\r\n    updateMenu.find((list) => {\r\n      console.log(this.modulePrefix)\r\n      if (list.prefix === this.modulePrefix) {\r\n        list.links = this.setSteps(list.links, key, value);\r\n      }\r\n    });\r\n    return updateMenu;\r\n  }\r\n  public setMenu(\r\n    menu: MenuModel[],\r\n    modulePrefix: string,\r\n    key: ListItemKeys,\r\n    value: string,\r\n  ): MenuModel[] {\r\n    const updateMenu = [...menu];\r\n    updateMenu.find((list) => {\r\n      if (list.prefix === modulePrefix) {\r\n        list.links = this.setSteps(list.links, key, value);\r\n      }\r\n    });\r\n    return updateMenu;\r\n  }\r\n\r\n  public findList(menu : MenuModel[], key: string, value: string): MenuModel {\r\n    return menu.find((list: MenuModel) => list[key] === value);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "type": "injectable"
        },
        {
            "name": "MessageService",
            "id": "injectable-MessageService-2b0bcfecf108c870c2a42a6da9e5da6d",
            "file": "projects/lib-kakal-ui/src/lib/app/components/form/services/message.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getErrorMessage",
                    "args": [
                        {
                            "name": "control",
                            "type": "FormControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "placeHolder",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "FormControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "placeHolder",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { FormControl } from '@angular/forms';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MessageService {\r\n\r\n  constructor() { }\r\n\r\n  // handle input error messages\r\n  public getErrorMessage(control: FormControl, placeHolder: string): string {\r\n    if (control.hasError('required')) {\r\n      return 'שדה חובה ';\r\n    }\r\n    if (control.hasError('minlength')) {\r\n      return 'ערך קצר מידי ';\r\n    }\r\n    \r\n    if (control.hasError('pattern')) {\r\n      return `invalid ${placeHolder} format`;\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 7
            },
            "type": "injectable"
        },
        {
            "name": "NavbarService",
            "id": "injectable-NavbarService-5e0b79874c942c723fddf9df86c8654e",
            "file": "projects/lib-kakal-ui/src/lib/app/components/navbar/navbar.service.ts",
            "properties": [
                {
                    "name": "headers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "headers$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<Observable<string>>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "openIcon$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<string>",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "showStatus$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "status$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<CardStepModel[]>",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "title$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<string>",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "methods": [
                {
                    "name": "emitShowStatus",
                    "args": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emitStatus",
                    "args": [
                        {
                            "name": "value",
                            "type": "CardStepModel[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "CardStepModel[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emitTitle",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getHeadersObs",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<string>",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "getShowStatusObs",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "getStatusObs",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<CardStepModel[]>",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "getTitleObs",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<string>",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "setHeaders",
                    "args": [
                        {
                            "name": "headers",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "headers",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setHeadersObs",
                    "args": [
                        {
                            "name": "headers",
                            "type": "Observable<string>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "headers",
                            "type": "Observable<string>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleStatus",
                    "args": [
                        {
                            "name": "show",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "status",
                            "type": "CardStepModel[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "show",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "status",
                            "type": "CardStepModel[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { CardStepModel } from '../cards/card-step/card-step.model';\r\nimport { mergeAll } from 'rxjs/operators';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NavbarService {\r\n\r\n\r\n  private headers: { [key: string]: string }\r\n\r\n  private title$: BehaviorSubject<string>;\r\n  private headers$: BehaviorSubject<Observable<string>>;\r\n  private openIcon$: BehaviorSubject<string>;\r\n  private status$: BehaviorSubject<CardStepModel[]>;\r\n  private showStatus$: BehaviorSubject<boolean>;\r\n\r\n  constructor() {\r\n    this.title$ = new BehaviorSubject<string>('');\r\n    this.status$ = new BehaviorSubject<CardStepModel[]>([]);\r\n    this.showStatus$ = new BehaviorSubject<boolean>(false)\r\n  }\r\n\r\n\r\n  public setHeaders(headers: { [key: string]: string }): void {\r\n    this.headers = headers;\r\n  }\r\n\r\n  public setHeadersObs(headers:Observable<string>): void {\r\n    this.headers$ = new BehaviorSubject<Observable<string>>(headers);\r\n  }\r\n\r\n  public getHeadersObs(): Observable<string> {\r\n    return this.headers$.asObservable().pipe(mergeAll())\r\n  }\r\n\r\n  public getTitleObs(): Observable<string> {\r\n    return this.title$.asObservable();\r\n  }\r\n\r\n  public emitTitle(key: string): void {\r\n    this.title$.next(this.headers[key])\r\n  }\r\n\r\n  public getStatusObs(): Observable<CardStepModel[]> {\r\n    return this.status$.asObservable();\r\n  }\r\n\r\n  public emitStatus(value: CardStepModel[]): void {\r\n    console.log(value)\r\n    this.status$.next(value);\r\n  }\r\n\r\n  public getShowStatusObs(): Observable<boolean> {\r\n    return this.showStatus$.asObservable();\r\n  }\r\n\r\n  public emitShowStatus(value: boolean): void {\r\n    this.showStatus$.next(value);\r\n  }\r\n\r\n  public toggleStatus(show: boolean, status: CardStepModel[]): void {\r\n    show ? this.emitStatus(status) : this.emitStatus([]);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 18
            },
            "type": "injectable"
        },
        {
            "name": "RouterService",
            "id": "injectable-RouterService-f95fe92a1ceb5e0faef12750694da784",
            "file": "projects/lib-kakal-ui/src/lib/app/utilities/services/route.service.ts",
            "properties": [
                {
                    "name": "history",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "modulePrefix$",
                    "defaultValue": "new BehaviorSubject('lands')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<string>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "methods": [
                {
                    "name": "emitModulePrefix",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCurrentPath",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "getLastPathObs",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<string>",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "getModulePrefixObs",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<string>",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "goBack",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "ListenToRoute",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<string>",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "navigate",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122,
                        129
                    ],
                    "jsdoctags": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setLastPath",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Location } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n\r\nexport class RouterService {\r\n\r\n  private modulePrefix$: BehaviorSubject<string> = new BehaviorSubject('lands');\r\n\r\n  public history: string[] = [];\r\n\r\n  constructor(private router: Router, private location: Location) {\r\n    this.ListenToRoute()\r\n  }\r\n\r\n  public goBack() {\r\n    this.history.pop();\r\n    if (this.history.length > 0) {\r\n      this.location.back();\r\n    } else {\r\n      this.router.navigateByUrl('/');\r\n    }\r\n  }\r\n\r\n  public getCurrentPath(): string {\r\n    return this.setLastPath(this.router.url);\r\n  }\r\n\r\n  public ListenToRoute(): Observable<string> {\r\n    return this.router.events.pipe(\r\n      filter((event) => event instanceof NavigationEnd),\r\n      map((event: any) => {\r\n        this.history.push(event.urlAfterRedirects);\r\n        return event.url;\r\n      })\r\n    );\r\n  }\r\n\r\n  public getLastPathObs(): Observable<string> {\r\n    return this.ListenToRoute().pipe(\r\n      map((path: string) => this.setLastPath(path))\r\n    );\r\n  }\r\n\r\n  public async navigate(path: string) {\r\n    try {\r\n      await this.router.navigateByUrl(path);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  public setLastPath(url: string) {\r\n    const path = url.split('/');\r\n    return path[path.length - 1];\r\n  }\r\n\r\n  public getModulePrefixObs(): Observable<string> {\r\n    return this.modulePrefix$.asObservable();\r\n  }\r\n\r\n  public emitModulePrefix(path: string): void {\r\n    this.modulePrefix$.next(path);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "location",
                        "type": "Location",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "location",
                        "type": "Location",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "StepperService",
            "id": "injectable-StepperService-02d7a9b3a4e670d0a440d5aa1388576c",
            "file": "projects/lib-kakal-ui/src/lib/app/components/stepper/stepper.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "activeStep",
                    "args": [
                        {
                            "name": "items",
                            "type": "CardStepModel[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "key",
                            "type": "ListItemKeys",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "items",
                            "type": "CardStepModel[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "key",
                            "type": "ListItemKeys",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSteps",
                    "args": [
                        {
                            "name": "steps",
                            "type": "CardStepModel[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "key",
                            "type": "ListItemKeys",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "CardStepModel[]",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "steps",
                            "type": "CardStepModel[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "key",
                            "type": "ListItemKeys",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setStepsStatus",
                    "args": [
                        {
                            "name": "items",
                            "type": "CardStepModel[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "key",
                            "type": "ListItemKeys",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "CardStepModel[]",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "items",
                            "type": "CardStepModel[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "key",
                            "type": "ListItemKeys",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "unactiveStep",
                    "args": [
                        {
                            "name": "items",
                            "type": "CardStepModel[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "items",
                            "type": "CardStepModel[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { ListItemKeys } from '../list-item/list-item.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { CardStepModel } from '../cards/card-step/card-step.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class StepperService {\r\n  constructor() {}\r\n\r\n  private unactiveStep(items: CardStepModel[]) {\r\n    items.find((item) => {\r\n      if (item.isActive) {\r\n        item.unactive();\r\n      }\r\n    });\r\n  }\r\n\r\n  private activeStep(items: CardStepModel[], key: ListItemKeys, value: any) {\r\n    items.find((item) => {\r\n      if (item[key] === value) {\r\n        item.active();\r\n      }\r\n    });\r\n  }\r\n  \r\n  \r\n  public setStepsStatus(\r\n    items: CardStepModel[],\r\n    key: ListItemKeys,\r\n    value: string\r\n  ): CardStepModel[] {\r\n    this.unactiveStep(items);\r\n    this.activeStep(items, key, value);\r\n    return [...items];\r\n  }\r\n\r\n  public setSteps(\r\n    steps: CardStepModel[],\r\n    key: ListItemKeys,\r\n    path: string,\r\n  ): CardStepModel[] {\r\n    return this.setStepsStatus(steps, key, path);\r\n  }\r\n\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "type": "injectable"
        },
        {
            "name": "TableService",
            "id": "injectable-TableService-a26074b4dfaa38f2539548091de27229",
            "file": "projects/lib-kakal-ui/src/lib/app/components/table/table.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "findRowIndex",
                    "args": [
                        {
                            "name": "rows",
                            "type": "RowModel<T>[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "rows",
                            "type": "RowModel<T>[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getProperty",
                    "args": [
                        {
                            "name": "obj",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "key",
                            "type": "K",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "T[K]",
                    "typeParameters": [
                        "T",
                        "K"
                    ],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "key",
                            "type": "K",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onAddFormRow",
                    "args": [
                        {
                            "name": "rows",
                            "type": "RowModel<T>[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "columns",
                            "type": "ColumnModel<T>[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "RowModel[]",
                    "typeParameters": [],
                    "line": 138,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "rows",
                            "type": "RowModel<T>[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "columns",
                            "type": "ColumnModel<T>[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onDelete",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 167,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "onEditMode",
                    "args": [
                        {
                            "name": "rows",
                            "type": "RowModel<T>[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "cell",
                            "type": "RowModel<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "columns",
                            "type": "ColumnModel<T>[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "options",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "rows",
                            "type": "RowModel<T>[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "cell",
                            "type": "RowModel<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "columns",
                            "type": "ColumnModel<T>[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "options",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onEditRow",
                    "args": [
                        {
                            "name": "row",
                            "type": "RowModel<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "columns",
                            "type": "ColumnModel<T>[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "editOptions",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "RowModel<T>",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "RowModel<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "columns",
                            "type": "ColumnModel<T>[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "editOptions",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onFormMode",
                    "args": [
                        {
                            "name": "rows",
                            "type": "RowModel<T>[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "columns",
                            "type": "ColumnModel<T>[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "options",
                            "type": "TableOptions<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "RowModel[]",
                    "typeParameters": [],
                    "line": 115,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "rows",
                            "type": "RowModel<T>[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "columns",
                            "type": "ColumnModel<T>[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "options",
                            "type": "TableOptions<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSaveMode",
                    "args": [
                        {
                            "name": "tableRows",
                            "type": "RowModel<T>[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "RowModel[]",
                    "typeParameters": [],
                    "line": 149,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "tableRows",
                            "type": "RowModel<T>[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setColumns",
                    "args": [
                        {
                            "name": "options",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ColumnsData<T>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "options",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setEdit",
                    "args": [
                        {
                            "name": "row",
                            "type": "RowModel<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "columns",
                            "type": "ColumnModel<T>[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "RowModel<T>",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "RowModel<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "columns",
                            "type": "ColumnModel<T>[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setQuestions",
                    "args": [
                        {
                            "name": "tableColumns",
                            "type": "ColumnModel<T>[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Question[]",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "tableColumns",
                            "type": "ColumnModel<T>[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setRows",
                    "args": [
                        {
                            "name": "data",
                            "type": "T[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "options",
                            "type": "TableOptions<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "RowModel[]",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "T[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "options",
                            "type": "TableOptions<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateRow",
                    "args": [
                        {
                            "name": "row",
                            "type": "RowModel<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "questions",
                            "type": "Question[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "RowModel<T>",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "RowModel<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "questions",
                            "type": "Question[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { RowModel } from './models/row.model';\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { ColumnsData, ColumnsService } from '../columns/columns.service';\r\nimport { TableOptions } from './table.component';\r\nimport { ColumnDef, ColumnModel } from '../columns/column.model';\r\nimport { FormService, Question } from '../form/services/form.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TableService<T> {\r\n  constructor(\r\n    private columnsService: ColumnsService<T>,\r\n    private formService: FormService\r\n  ) {}\r\n\r\n  public setRows(data: T[], options?: TableOptions<T>): RowModel<T>[] {\r\n    return data\r\n      .map((item: T) => new RowModel({ item }))\r\n      .map((row: RowModel<T>) => {\r\n        if (options?.pending && options?.pending.indexOf(row.item['id']) > -1) {\r\n          row.pending = true;\r\n        }\r\n\r\n        return row;\r\n      });\r\n  }\r\n\r\n  public setColumns(options: {\r\n    tableColumns: ColumnModel<T>[];\r\n    model: T;\r\n    filters: ColumnDef<T>[];\r\n    selectable?: boolean;\r\n    accordion?: boolean;\r\n    hasActions?: boolean;\r\n  }): ColumnsData<T> {\r\n    return this.columnsService.getColumns({ ...options });\r\n  }\r\n\r\n  public findRowIndex(rows: RowModel<T>[], key: string, item?: T): number {\r\n    return rows.findIndex((row) => row.item[key] === item[key]);\r\n  }\r\n\r\n  private getProperty<T, K extends keyof T>(obj: T, key: K) {\r\n    return obj[key];\r\n  }\r\n\r\n  private updateRow(row: RowModel<T>, questions: Question[]): RowModel<T> {\r\n    const editRow = new RowModel({ ...row });\r\n    editRow.editable = true;\r\n    editRow.formGroup = this.formService.setFormGroup(questions);\r\n    editRow.questionsGroup = this.formService.setQuestionGroup(questions);\r\n    return editRow;\r\n  }\r\n\r\n  // take columns array and return Question array for formGroup\r\n  public setQuestions(tableColumns: ColumnModel<T>[]): Question[] {\r\n    const columns = tableColumns;\r\n\r\n    if (columns) {\r\n      return columns\r\n        .filter(\r\n          (column) =>\r\n            column.type !== 'actions' &&\r\n            column.type !== 'select' &&\r\n            column.control !== undefined\r\n        )\r\n        .map((column: ColumnModel<T>) => {\r\n          const question = this.formService.setQuestion({\r\n            key: column.columnDef,\r\n            controlType: column.control,\r\n            label: column.label,\r\n            icon: column.icon,\r\n          });\r\n          return question;\r\n        });\r\n    }\r\n\r\n    return [];\r\n  }\r\n\r\n  private setEdit(row: RowModel<T>, columns: ColumnModel<T>[]): RowModel<T> {\r\n    const questions = this.setQuestions(columns);\r\n    const editRow = this.updateRow(row, questions);\r\n    return editRow;\r\n  }\r\n\r\n  private onEditRow(\r\n    row: RowModel<T>,\r\n    columns: ColumnModel<T>[],\r\n    editOptions?: any\r\n  ): RowModel<T> {\r\n    const editRow = this.setEdit(row, columns);\r\n    editRow.formGroup.patchValue({ ...editRow.item, ...editOptions });\r\n    return editRow;\r\n  }\r\n\r\n  // method for edit row\r\n  public onEditMode(\r\n    rows: RowModel<T>[],\r\n    cell: RowModel<T>,\r\n    columns: ColumnModel<T>[],\r\n    options: any\r\n  ) {\r\n    return rows.map((row: RowModel<T>) => {\r\n      if (row.item['id'] === cell.item['id']) {\r\n        return this.onEditRow(row, columns, options);\r\n      }\r\n      return row;\r\n    });\r\n  }\r\n\r\n  // method for form row\r\n  public onFormMode(\r\n    rows: RowModel<T>[],\r\n    columns: ColumnModel<T>[],\r\n    options?: TableOptions<T>\r\n  ): RowModel<T>[] {\r\n    if (options?.editable) {\r\n      const { editable } = options;\r\n      return rows.map((row) => {\r\n        const editRow =\r\n          editable.indexOf(row.item['id']) > -1\r\n            ? this.setEdit(row, columns)\r\n            : row;\r\n        return editRow;\r\n      });\r\n    } else {\r\n      return rows.map((row) => {\r\n        const editRow = this.setEdit(row, columns);\r\n        return editRow;\r\n      });\r\n    }\r\n  }\r\n\r\n  // method for first form row\r\n  public onAddFormRow(\r\n    rows: RowModel<T>[],\r\n    columns: ColumnModel<T>[]\r\n  ): RowModel<T>[] {\r\n    const row: RowModel<T> = new RowModel<T>();\r\n    const editRow = this.setEdit(row, columns);\r\n    rows.unshift(editRow);\r\n    return rows;\r\n  }\r\n\r\n  // method to update form  data to table\r\n  public onSaveMode(\r\n    tableRows: RowModel<T>[],\r\n    key: string,\r\n    item?: T\r\n  ): RowModel<T>[] {\r\n    const rows = [...tableRows];\r\n    const index = this.findRowIndex(rows, key, item);\r\n    rows[index].editable = false;\r\n\r\n    if (rows[index].formGroup) {\r\n      rows[index].item = {\r\n        ...rows[index].item,\r\n        ...rows[index].formGroup.value,\r\n      };\r\n    }\r\n    return rows;\r\n  }\r\n\r\n  public onDelete() {}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "columnsService",
                        "type": "ColumnsService<T>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formService",
                        "type": "FormService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "columnsService",
                        "type": "ColumnsService<T>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formService",
                        "type": "FormService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "ActionState",
            "id": "class-ActionState-e92e7a7c58c36313ff670eced9a365d8",
            "file": "projects/lib-kakal-ui/src/lib/app/components/table/models/action-state.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { BehaviorSubject, concat, Observable } from 'rxjs';\r\n\r\nexport class ActionState<T> {\r\n  private add$: BehaviorSubject<T>;\r\n  private edit$: BehaviorSubject<T>;\r\n  private expand$: BehaviorSubject<T>;\r\n  private select$: BehaviorSubject<T>;\r\n  private close$: BehaviorSubject<T>;\r\n  private remove$: BehaviorSubject<T>;\r\n  public state$: Observable<T>\r\n  constructor(\r\n  ) {\r\n    this.add$ = new BehaviorSubject<T>(null);\r\n    this.edit$ = new BehaviorSubject<T>(null);\r\n    this.expand$ = new BehaviorSubject<T>(null);\r\n    this.select$ = new BehaviorSubject<T>(null);\r\n    this.close$ = new BehaviorSubject<T>(null);\r\n    this.remove$ = new BehaviorSubject<T>(null);\r\n    this.state$ = concat(this.add$, this.edit$, this.remove$, this.select$, this.remove$);\r\n  }\r\n\r\n  public expand(value: T) {\r\n    this.expand$.next(value);\r\n  }\r\n  public close(value: T) {\r\n    this.close$.next(value);\r\n  }\r\n  public add(value: T) {\r\n    this.add$.next(value);\r\n  }\r\n  public edit(value: T) {\r\n    this.edit$.next(value);\r\n  }\r\n  public select(value: T) {\r\n    this.select$.next(value);\r\n  }\r\n  public remove(value: T) {\r\n    this.remove$.next(value);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "properties": [
                {
                    "name": "add$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<T>",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "close$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<T>",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "edit$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<T>",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "expand$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<T>",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "remove$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<T>",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "select$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<T>",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "state$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<T>",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methods": [
                {
                    "name": "add",
                    "args": [
                        {
                            "name": "value",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "close",
                    "args": [
                        {
                            "name": "value",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "edit",
                    "args": [
                        {
                            "name": "value",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "expand",
                    "args": [
                        {
                            "name": "value",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "remove",
                    "args": [
                        {
                            "name": "value",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "select",
                    "args": [
                        {
                            "name": "value",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "AssetsModel",
            "id": "class-AssetsModel-083d8cf0efbdebf2bdf09995c81890e9",
            "file": "projects/lib-kakal-ui/src/lib/app/utilities/models/assets.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export interface AssetStatus {\r\n  label : string,\r\n  value : number\r\n}\r\n\r\nexport class AssetsModel {\r\n\r\n  constructor(\r\n    public id?: number,\r\n    public block?: number,\r\n    public division?: number,\r\n    public subdivision?: number,\r\n    public area?: number,\r\n    public areaOwn?: number,\r\n    public property?: string,\r\n    public status?: AssetStatus,\r\n    public description?: string,\r\n    public location?: string,\r\n  ) {\r\n\r\n  }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    },
                    {
                        "name": "block",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    },
                    {
                        "name": "division",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    },
                    {
                        "name": "subdivision",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    },
                    {
                        "name": "area",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    },
                    {
                        "name": "areaOwn",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    },
                    {
                        "name": "property",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    },
                    {
                        "name": "status",
                        "type": "AssetStatus",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    },
                    {
                        "name": "description",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    },
                    {
                        "name": "location",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "block",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "division",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "subdivision",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "area",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "areaOwn",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "property",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "status",
                        "type": "AssetStatus",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "description",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "location",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "area",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "areaOwn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "block",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "division",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "location",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "property",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AssetStatus",
                    "optional": true,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "subdivision",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CardDashboardModel",
            "id": "class-CardDashboardModel-9709954d527c7bea7c712dbebc595407",
            "file": "projects/lib-kakal-ui/src/lib/app/components/cards/card-dashboard/card-dashboard.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { ListItem } from \"../../list-item/list-item.model\";\r\n\r\nexport class CardDashboardModel implements ListItem {\r\n  public label?: string;\r\n  public path?: string;\r\n  public svgUrl?: string;\r\n  public size?: number;\r\n\r\n  constructor(options: {\r\n    label?: string;\r\n    path?: string;\r\n    svgUrl?: string;\r\n    size?: number;\r\n  }) {\r\n    this.label = options?.label;\r\n    this.path = options?.path;\r\n    this.svgUrl = options?.svgUrl;\r\n    this.size = options?.size;\r\n\r\n  }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "options",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "options",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "svgUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "ListItem"
            ]
        },
        {
            "name": "CardStepModel",
            "id": "class-CardStepModel-2e9ea19577b1d27db702a40236119541",
            "file": "projects/lib-kakal-ui/src/lib/app/components/cards/card-step/card-step.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { MenuItemModel } from \"../../menu-item/menu-item.model\";\r\n\r\nexport type StepVariant = 'circle' | 'square'\r\n\r\n\r\nexport type StepType = 'wizard' | 'status' | 'step' | 'info' | 'card'\r\n\r\n\r\nexport type StepperDirection = 'column' | 'row'\r\n\r\n\r\nexport class CardStepModel extends MenuItemModel {\r\n\r\n  public variant?: StepVariant;\r\n  public type?: StepType;\r\n  public size?: number;\r\n  public divider?: number;\r\n  public spacer?: boolean;\r\n  public value?: number;\r\n\r\n  constructor(options?: {\r\n    label?: string;\r\n    path?: string;\r\n    svgUrl?: string;\r\n    isActive?: boolean;\r\n    variant?: StepVariant;\r\n    type?: StepType;\r\n    size?: number;\r\n    divider?: number;\r\n    spacer?: boolean;\r\n    value?: number;\r\n  }) {\r\n    super(options)\r\n    this.label = options?.label || '';\r\n    this.path = options?.path || '';\r\n    this.isActive = options?.isActive || false;\r\n    this.svgUrl = options?.svgUrl || '';\r\n    this.variant = options?.variant || 'circle';\r\n    this.type = options?.type || 'step';\r\n    this.size = options?.size || 6;\r\n    this.value = options?.value || null;\r\n    this.divider = options?.divider || 0;\r\n    this.spacer = options?.spacer || false;\r\n  }\r\n\r\n\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "options",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "options",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "divider",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "MenuItemModel"
                    }
                },
                {
                    "name": "spacer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StepType",
                    "optional": true,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "variant",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StepVariant",
                    "optional": true,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "active$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        120
                    ],
                    "inheritance": {
                        "file": "MenuItemModel"
                    }
                },
                {
                    "name": "isActive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "MenuItemModel"
                    }
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "MenuItemModel"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "MenuItemModel"
                    }
                },
                {
                    "name": "path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "MenuItemModel"
                    }
                },
                {
                    "name": "scale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "MenuItemModel"
                    }
                },
                {
                    "name": "svgUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "MenuItemModel"
                    }
                }
            ],
            "methods": [
                {
                    "name": "active",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "MenuItemModel"
                    }
                },
                {
                    "name": "emitActive",
                    "args": [
                        {
                            "name": "state",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "MenuItemModel"
                    }
                },
                {
                    "name": "getActiveObs",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "MenuItemModel"
                    }
                },
                {
                    "name": "unactive",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "MenuItemModel"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "MenuItemModel",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ColumnModel",
            "id": "class-ColumnModel-069aefea2edd14ee08c4208af9f3a4f3",
            "file": "projects/lib-kakal-ui/src/lib/app/components/columns/column.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { SelectOption } from '../form/models/question-select.model';\r\nimport { ElementRef } from '@angular/core';\r\nimport { Question } from '../form/services/form.service';\r\nimport { ControlType } from '../form/models/question.model';\r\n\r\nexport interface ColumnState {\r\n  expendable?: boolean;\r\n  selectable?: boolean;\r\n  sortable?: boolean;\r\n  filterable?: boolean;\r\n  data : any\r\n}\r\n\r\nexport declare type ColumnDef<T> = keyof T | 'select' | 'actions' | 'accordion' | string;\r\n\r\nexport declare type SortDir = 'desc' | 'asc';\r\n\r\nexport declare type ColumnType =\r\n  | 'number'\r\n  | 'date'\r\n  | 'text'\r\n  | 'custom'\r\n  | 'actions'\r\n  | 'select'\r\n  | 'expend';\r\n\r\nexport class ColumnModel<T> {\r\n  public rowId?: string | number;\r\n  public columnDef?: ColumnDef<T>;\r\n  public label?: string;\r\n  public type?: ColumnType;\r\n  public control?: ControlType;\r\n  public question?: Question;\r\n  public slotRef?: ElementRef;\r\n  public center?: boolean;\r\n  public expendable?: boolean;\r\n  public selectable?: boolean;\r\n  public sortable?: boolean;\r\n  public sortDir?: SortDir;\r\n  public filterable?: boolean;\r\n  public filterOptions?: SelectOption[];\r\n  public footer?: boolean;\r\n  public icon?: string;\r\n\r\n  constructor(options?: {\r\n    rowId?: string | number;\r\n    columnDef?: ColumnDef<T>;\r\n    label?: string;\r\n    type?: ColumnType;\r\n    control?: ControlType;\r\n    question?: Question;\r\n    slotRef?: ElementRef;\r\n    expendable?: boolean;\r\n    selectable?: boolean;\r\n    center?: boolean;\r\n    sortable?: boolean;\r\n    sortDir?: SortDir;\r\n    filterable?: boolean;\r\n    filterOptions?: SelectOption[];\r\n    footer?: boolean;\r\n    icon?: string;\r\n  }) {\r\n    this.rowId = options.rowId;\r\n    this.columnDef = options?.columnDef || '';\r\n    this.label = options?.label || '';\r\n    this.type = options?.type || 'text';\r\n    this.control = options?.control;\r\n    this.question = options?.question;\r\n    this.slotRef = options?.slotRef || null;\r\n    this.center = options?.center || false;\r\n    this.expendable = options?.expendable || false;\r\n    this.selectable = options?.selectable || false;\r\n    this.sortable = options?.sortable || false;\r\n    this.sortDir = options?.sortDir || 'asc';\r\n    this.filterable = options?.filterable || false;\r\n    this.filterOptions = options?.filterOptions || [];\r\n    this.footer = options?.footer || false;\r\n    this.icon = options?.icon || '';\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "options",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 43,
                "jsdoctags": [
                    {
                        "name": "options",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "center",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "columnDef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ColumnDef<T>",
                    "optional": true,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ControlType",
                    "optional": true,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "expendable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "filterable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "filterOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectOption[]",
                    "optional": true,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "footer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "question",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Question",
                    "optional": true,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "rowId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | number",
                    "optional": true,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "selectable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "slotRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": true,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "sortable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "sortDir",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SortDir",
                    "optional": true,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ColumnType",
                    "optional": true,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "FilterModel",
            "id": "class-FilterModel-f673d7bd0055734f78622459889085c3",
            "file": "projects/lib-kakal-ui/src/lib/app/components/cards/card-filter/card-filter.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { MenuItemModel } from \"../../menu-item/menu-item.model\";\r\n\r\n\r\n\r\nexport class FilterModel extends MenuItemModel {\r\n\r\n  public size?: number;\r\n  public scale?: number;\r\n  public divider?: boolean;\r\n  public spacer?: boolean;\r\n  public value?: number;\r\n\r\n  constructor(options?: {\r\n    label?: string;\r\n    path?: string;\r\n    svgUrl?: string;\r\n    isActive?: boolean;\r\n    size?: number;\r\n    scale?: number;\r\n    divider?: boolean;\r\n    spacer?: boolean;\r\n    value?: number;\r\n  }) {\r\n    super(options)\r\n    this.label = options?.label || '';\r\n    this.path = options?.path || '';\r\n    this.isActive = options?.isActive || false;\r\n    this.svgUrl = options?.svgUrl || '';\r\n    this.size = options?.size || 80;\r\n    this.scale = options?.scale || 1;\r\n    this.value = options?.value || null;\r\n    this.divider = options?.divider || false;\r\n    this.spacer = options?.spacer || false;\r\n  }\r\n\r\n\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "options",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "options",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "divider",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "scale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "MenuItemModel"
                    }
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "MenuItemModel"
                    }
                },
                {
                    "name": "spacer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "active$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        120
                    ],
                    "inheritance": {
                        "file": "MenuItemModel"
                    }
                },
                {
                    "name": "isActive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "MenuItemModel"
                    }
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "MenuItemModel"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "MenuItemModel"
                    }
                },
                {
                    "name": "path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "MenuItemModel"
                    }
                },
                {
                    "name": "svgUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "MenuItemModel"
                    }
                }
            ],
            "methods": [
                {
                    "name": "active",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "MenuItemModel"
                    }
                },
                {
                    "name": "emitActive",
                    "args": [
                        {
                            "name": "state",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "MenuItemModel"
                    }
                },
                {
                    "name": "getActiveObs",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "MenuItemModel"
                    }
                },
                {
                    "name": "unactive",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "MenuItemModel"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "MenuItemModel",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "IconModel",
            "id": "class-IconModel-ceb05e14a3c07c8f6905249839426a0a",
            "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icon.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Palette } from \"../../../styles/theme\";\r\n\r\nexport declare type IconType = 'mat' | 'svg'\r\n\r\nexport class IconModel {\r\n\r\n  constructor(\r\n    public key : string,\r\n    public size : number,\r\n    public type? : IconType,\r\n    public color? : Palette,\r\n  ) {}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "key",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "size",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "type",
                        "type": "IconType",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    },
                    {
                        "name": "color",
                        "type": "Palette",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "key",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "size",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "type",
                        "type": "IconType",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "color",
                        "type": "Palette",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Palette",
                    "optional": true,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconType",
                    "optional": true,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ListItemModel",
            "id": "class-ListItemModel-b9eb261fd6398f329fa426561278ebef",
            "file": "projects/lib-kakal-ui/src/lib/app/components/list-item/list-item.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export declare type ListItemKeys = 'path' | 'label' | 'svgUrl';\r\n\r\nexport interface ListItem {\r\n  type?: string,\r\n  key?: string,\r\n  selector? : string[],\r\n  label?: string,\r\n  size?: number,\r\n  value?: any,\r\n  svgUrl?: string,\r\n} \r\n\r\nexport abstract class ListItemModel implements ListItem {\r\n\r\n  constructor(\r\n    public key?: string,\r\n    public type?: string,\r\n    public label?: string,\r\n    public svgUrl?: string,\r\n    public size?: number,\r\n  ) {\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "key",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    },
                    {
                        "name": "type",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    },
                    {
                        "name": "label",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    },
                    {
                        "name": "svgUrl",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    },
                    {
                        "name": "size",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "key",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "type",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "label",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "svgUrl",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "size",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "svgUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "ListItem"
            ]
        },
        {
            "name": "MenuItemModel",
            "id": "class-MenuItemModel-ec1af62429a571bf081e1e80f6022df3",
            "file": "projects/lib-kakal-ui/src/lib/app/components/menu-item/menu-item.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { BehaviorSubject, Observable } from 'rxjs';\r\nimport { ListItem } from '../list-item/list-item.model';\r\n\r\n\r\nexport class MenuItemModel implements ListItem {\r\n\r\n  public key?: string;\r\n  public label?: string;\r\n  public path?: string;\r\n  public svgUrl?: string;\r\n  public scale?: number;\r\n  public size?: number;\r\n  public isActive?: boolean;\r\n\r\n  private active$: BehaviorSubject<boolean>;\r\n\r\n  constructor(options: {\r\n    label?: string;\r\n    path?: string;\r\n    svgUrl?: string;\r\n    isActive?: boolean;\r\n  }) {\r\n    this.label = options?.label;\r\n    this.path = options?.path;\r\n    this.isActive = options?.isActive || false;\r\n    this.svgUrl = options?.svgUrl || 'arrow_right_alt';\r\n    this.active$ = new BehaviorSubject(this.isActive || false);\r\n  }\r\n\r\n  public getActiveObs(): Observable<boolean> {\r\n    return this.active$.asObservable();\r\n  }\r\n\r\n  public emitActive(state: boolean) {\r\n    this.active$.next(state);\r\n  }\r\n\r\n  public active(): void {\r\n    this.isActive = true;\r\n    this.emitActive(this.isActive);\r\n  }\r\n  public unactive(): void {\r\n    this.isActive = false;\r\n    this.emitActive(this.isActive);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "options",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "options",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "active$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "isActive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "scale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "svgUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methods": [
                {
                    "name": "active",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "emitActive",
                    "args": [
                        {
                            "name": "state",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getActiveObs",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "unactive",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "ListItem"
            ]
        },
        {
            "name": "MenuModel",
            "id": "class-MenuModel-7186db4170916829fd2755e83aaee070",
            "file": "projects/lib-kakal-ui/src/lib/app/components/menu/menu.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { MenuItemModel } from \"../menu-item/menu-item.model\";\r\n\r\nexport class MenuModel {\r\n  public label?: string;\r\n  public prefix?: string;\r\n  public links?: MenuItemModel[];\r\n\r\n  constructor(options: {\r\n    label?: string;\r\n    prefix?: string;\r\n    links?: MenuItemModel[];\r\n  }) {\r\n    this.label = options?.label || '';\r\n    this.prefix = options?.prefix || '';\r\n    this.links = options?.links || [];\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "options",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "options",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "links",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItemModel[]",
                    "optional": true,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "prefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "QuestionAutocompleteModel",
            "id": "class-QuestionAutocompleteModel-76334cbd8a61202758ddee6865230688",
            "file": "projects/lib-kakal-ui/src/lib/app/components/form/models/question-autocomplete.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { ValidatorFn } from '@angular/forms';\r\nimport { GridProps } from \"./question.model\";\r\nimport { QuestionSelectModel, SelectOption } from './question-select.model';\r\n\r\n\r\nexport class QuestionAutocompleteModel extends QuestionSelectModel{\r\n\r\n  public onOptionSelect?: Function\r\n\r\n  constructor(options?: {\r\n\r\n    key: string,\r\n    label: string,\r\n    validations?: ValidatorFn[],\r\n    gridProps?: GridProps\r\n    icon?: string;\r\n    options?: SelectOption[]\r\n    onOptionSelect?: Function\r\n  }) {\r\n    super(options)\r\n    this.controlType = 'autocomplete',\r\n    this.options = options.options || []\r\n    this.onOptionSelect = options.onOptionSelect || (() => console.log('select'))\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "options",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "options",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "onOptionSelect",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Function",
                    "optional": true,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "multi",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionSelectModel"
                    }
                },
                {
                    "name": "onSelectChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Function",
                    "optional": true,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionSelectModel"
                    }
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectOption[]",
                    "optional": true,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionSelectModel"
                    }
                },
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatFormFieldAppearance",
                    "optional": true,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "controlType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ControlType",
                    "optional": true,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "customRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "gridProps",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GridProps",
                    "optional": true,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QuestionType",
                    "optional": true,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "validations",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidatorFn[]",
                    "optional": true,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T | undefined",
                    "optional": true,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": "QuestionSelectModel",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "QuestionBaseModel",
            "id": "class-QuestionBaseModel-ce3694cf5fc5e0c994c868def65b5149",
            "file": "projects/lib-kakal-ui/src/lib/app/components/form/models/question.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { ValidatorFn } from '@angular/forms';\r\nimport { MatFormFieldAppearance } from '@angular/material/form-field';\r\n\r\nexport interface GridProps {\r\n  cols?: number;\r\n  rows?: number;\r\n  offset?: number;\r\n  gutter?: number;\r\n  fullWidth?: boolean;\r\n  buttonCols? : number\r\n}\r\n\r\nexport type ControlType =\r\n  | 'text'\r\n  | 'password'\r\n  | 'number'\r\n  | 'textarea'\r\n  | 'select'\r\n  | 'calendar'\r\n  | 'radio'\r\n  | 'date'\r\n  | 'time'\r\n  | 'group'\r\n  | 'custom'\r\n  | 'autocomplete';\r\n\r\nexport type QuestionType = 'default' | 'group' | 'custom';\r\n\r\nexport abstract class QuestionBaseModel<T> {\r\n  public key: any;\r\n  public label: string;\r\n  public value?: T | undefined;\r\n  public appearance?: MatFormFieldAppearance\r\n  public type?: QuestionType;\r\n  public controlType?: ControlType;\r\n  public gridProps?: GridProps;\r\n  public icon?: string;\r\n  public customRef?: string;\r\n  public validations?: ValidatorFn[];\r\n  public disabled?: boolean;\r\n  constructor(options: {\r\n    value?: T;\r\n    key?: string;\r\n    label?: string;\r\n    appearance?: MatFormFieldAppearance;\r\n    type?: QuestionType;\r\n    controlType?: ControlType;\r\n    disabled?: boolean;\r\n    gridProps?: GridProps;\r\n    icon?: string;\r\n    customRef?: string;\r\n    validations?: ValidatorFn[];\r\n  }) {\r\n    this.key = options.key || '';\r\n    this.value = options.value;\r\n    this.label = options.label || '';\r\n    this.appearance = options.appearance || 'outline';\r\n    this.type = options.type || 'default';\r\n    this.controlType = options.controlType || 'text';\r\n    this.disabled = this.disabled || false;\r\n    this.validations = options.validations || [];\r\n    this.gridProps = options.gridProps || {\r\n      cols: 1,\r\n      rows: 1,\r\n      gutter: 0,\r\n      offset: 0,\r\n      fullWidth: false,\r\n    };\r\n    this.icon = options.icon || '';\r\n    this.customRef = options.customRef || '';\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "options",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 40,
                "jsdoctags": [
                    {
                        "name": "options",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatFormFieldAppearance",
                    "optional": true,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "controlType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ControlType",
                    "optional": true,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "customRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "gridProps",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GridProps",
                    "optional": true,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QuestionType",
                    "optional": true,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "validations",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidatorFn[]",
                    "optional": true,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T | undefined",
                    "optional": true,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "QuestionCalendar",
            "id": "class-QuestionCalendar-68c9afa7d8e17fa47e9158141c33c64e",
            "file": "projects/lib-kakal-ui/src/lib/app/components/form/models/question-calendar.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { ValidatorFn } from '@angular/forms';\r\nimport { QuestionBaseModel, GridProps } from './question.model';\r\n\r\nexport class QuestionCalendar extends QuestionBaseModel<Date> {\r\n  public options?: any[];\r\n  constructor(options: {\r\n    key: string;\r\n    label: string;\r\n    gridProps?: GridProps;\r\n    icon?: string;\r\n    validations?: ValidatorFn[];\r\n    options?: any[];\r\n  }) {\r\n    super(options);\r\n    this.key = options.key;\r\n    this.label = options.label;\r\n    this.controlType = 'calendar';\r\n    this.gridProps = options.gridProps;\r\n    this.icon = 'calendar';\r\n    this.validations = options.validations;\r\n    this.options = options.options;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "options",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "options",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": true,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatFormFieldAppearance",
                    "optional": true,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "controlType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ControlType",
                    "optional": true,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "customRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "gridProps",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GridProps",
                    "optional": true,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QuestionType",
                    "optional": true,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "validations",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidatorFn[]",
                    "optional": true,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T | undefined",
                    "optional": true,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": "QuestionBaseModel",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "QuestionDate",
            "id": "class-QuestionDate-45948706e66762f00f42bea916daea32",
            "file": "projects/lib-kakal-ui/src/lib/app/components/form/models/question-date.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { ValidatorFn } from '@angular/forms';\r\nimport { QuestionBaseModel, GridProps } from './question.model';\r\n\r\nexport class QuestionDate extends QuestionBaseModel<Date> {\r\n\r\n\r\n  constructor(options: {\r\n    key: string;\r\n    label: string;\r\n    gridProps?: GridProps\r\n    icon?: string;\r\n    validations?: ValidatorFn[]\r\n  }\r\n  ) {\r\n    super(options)\r\n    this.key = options.key\r\n    this.label = options.label\r\n    this.controlType = 'date';\r\n    this.gridProps = options.gridProps\r\n    this.icon = this.icon\r\n    this.validations = options.validations\r\n  }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "options",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 4,
                "jsdoctags": [
                    {
                        "name": "options",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatFormFieldAppearance",
                    "optional": true,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "controlType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ControlType",
                    "optional": true,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "customRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "gridProps",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GridProps",
                    "optional": true,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QuestionType",
                    "optional": true,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "validations",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidatorFn[]",
                    "optional": true,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T | undefined",
                    "optional": true,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": "QuestionBaseModel",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "QuestionGroupModel",
            "id": "class-QuestionGroupModel-7d7cbcb4cd80b81c3d3d1da48b29c176",
            "file": "projects/lib-kakal-ui/src/lib/app/components/form/models/question-group.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { FormGroup } from '@angular/forms';\r\nimport { Question } from '../services/form.service';\r\nimport { ControlType, GridProps } from './question.model';\r\n\r\nexport type GroupType = 'default' | 'group' | 'custom';\r\n\r\nexport interface GroupOptions {\r\n  label?: string;\r\n  type?: GroupType;\r\n  controlType?: ControlType;\r\n  formGroup?: FormGroup;\r\n  gridProps?: GridProps;\r\n  hasButton?: boolean;\r\n}\r\n\r\nexport class QuestionGroupModel {\r\n  public key: string;\r\n  public questions: Question[];\r\n  public label?: string;\r\n  public type?: GroupType;\r\n  public controlType?: ControlType;\r\n  public formGroup?: FormGroup;\r\n  public gridProps?: GridProps;\r\n  public hasButton?: boolean;\r\n\r\n  constructor(options?: {\r\n    key: string;\r\n    questions: Question[];\r\n    label?: string;\r\n    type?: GroupType;\r\n    formGroup?: FormGroup;\r\n    gridProps?: GridProps;\r\n    hasButton?: boolean;\r\n  }) {\r\n    this.key = options.key;\r\n    this.label = options.label;\r\n    this.type = options.type || 'default';\r\n    this.controlType = 'group';\r\n    this.questions = options.questions;\r\n    this.formGroup = options.formGroup;\r\n    this.gridProps = options.gridProps || { cols: 1 };\r\n    this.hasButton = options.hasButton || false;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "options",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "options",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "controlType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ControlType",
                    "optional": true,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": true,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "gridProps",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GridProps",
                    "optional": true,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "hasButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "questions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Question[]",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GroupType",
                    "optional": true,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "QuestionNumberModel",
            "id": "class-QuestionNumberModel-d6dee3dfc7333f9748932cc1bfeea459",
            "file": "projects/lib-kakal-ui/src/lib/app/components/form/models/question-number.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { ValidatorFn } from \"@angular/forms\";\r\nimport { GridProps, QuestionBaseModel } from \"./question.model\";\r\n\r\nexport class QuestionNumberModel extends QuestionBaseModel<number>{\r\n  constructor(options?: {\r\n    key: string;\r\n    label: string;\r\n    gridProps?: GridProps\r\n    icon?: string;\r\n    validations?: ValidatorFn[]\r\n  }\r\n  ) {\r\n    super(options)\r\n    this.key = options.key\r\n    this.label = options.label\r\n    this.controlType = 'number'\r\n    this.gridProps = options.gridProps\r\n    this.validations = options.validations\r\n  }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "options",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 4,
                "jsdoctags": [
                    {
                        "name": "options",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatFormFieldAppearance",
                    "optional": true,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "controlType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ControlType",
                    "optional": true,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "customRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "gridProps",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GridProps",
                    "optional": true,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QuestionType",
                    "optional": true,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "validations",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidatorFn[]",
                    "optional": true,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T | undefined",
                    "optional": true,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": "QuestionBaseModel",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "QuestionRadio",
            "id": "class-QuestionRadio-f0681bb7a23a36b3cc633248f0ed4ae3",
            "file": "projects/lib-kakal-ui/src/lib/app/components/form/models/question-radio.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { ValidatorFn } from '@angular/forms';\r\nimport { GridProps, QuestionBaseModel } from './question.model';\r\n\r\nexport interface RadioOption {\r\n  label: string;\r\n  value: any;\r\n  checked?: boolean;\r\n}\r\n\r\nexport class QuestionRadio extends QuestionBaseModel<string> {\r\n  public options?: RadioOption[];\r\n\r\n  constructor(options?: {\r\n    key: string;\r\n    label: string;\r\n    gridProps?: GridProps;\r\n    icon?: string;\r\n    validations?: ValidatorFn[];\r\n    options?: RadioOption[];\r\n  }) {\r\n    super(options);\r\n    this.key = options.key;\r\n    this.label = options.label;\r\n    this.controlType = 'radio';\r\n    this.gridProps = options.gridProps;\r\n    this.validations = options.validations;\r\n    this.options = options.options;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "options",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "options",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RadioOption[]",
                    "optional": true,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatFormFieldAppearance",
                    "optional": true,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "controlType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ControlType",
                    "optional": true,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "customRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "gridProps",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GridProps",
                    "optional": true,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QuestionType",
                    "optional": true,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "validations",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidatorFn[]",
                    "optional": true,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T | undefined",
                    "optional": true,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": "QuestionBaseModel",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "QuestionSelectModel",
            "id": "class-QuestionSelectModel-cf867120e60f112cb8601a6926e023ca",
            "file": "projects/lib-kakal-ui/src/lib/app/components/form/models/question-select.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { ValidatorFn } from '@angular/forms';\r\nimport { GridProps, QuestionBaseModel } from \"./question.model\";\r\n\r\nexport interface SelectOption {\r\n  label: string;\r\n  value: any;\r\n  disabled?: boolean;\r\n}\r\n\r\nexport class QuestionSelectModel extends QuestionBaseModel<string>{\r\n\r\n  public options?: SelectOption[];\r\n  public onSelectChange?: Function;\r\n  public multi?: boolean;\r\n\r\n  constructor(options?: {\r\n    key: string,\r\n    label: string,\r\n    validations?: ValidatorFn[],\r\n    gridProps?: GridProps\r\n    options?: SelectOption[];\r\n    icon?: string;\r\n    multi?: boolean;\r\n    onSelectChange?: Function;\r\n  }) {\r\n    super(options)\r\n    this.controlType = 'select'\r\n    this.options = options.options || []\r\n    this.icon = options.icon || 'keyboard_arrow_down'\r\n    this.multi = options.multi || false\r\n    this.onSelectChange = options.onSelectChange || (() => console.log('select'))\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "options",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "options",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "multi",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "onSelectChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Function",
                    "optional": true,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectOption[]",
                    "optional": true,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatFormFieldAppearance",
                    "optional": true,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "controlType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ControlType",
                    "optional": true,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "customRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "gridProps",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GridProps",
                    "optional": true,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QuestionType",
                    "optional": true,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "validations",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidatorFn[]",
                    "optional": true,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T | undefined",
                    "optional": true,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": "QuestionBaseModel",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "QuestionTextareaModel",
            "id": "class-QuestionTextareaModel-aa6df535c779e255c06b63444c4962cd",
            "file": "projects/lib-kakal-ui/src/lib/app/components/form/models/question-textarea.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { ValidatorFn } from \"@angular/forms\";\r\nimport { GridProps, QuestionBaseModel } from \"./question.model\";\r\n\r\nexport class QuestionTextareaModel extends QuestionBaseModel<string>{\r\n\r\n\r\n  constructor(options: {\r\n    key: string;\r\n    label: string;\r\n    gridProps?: GridProps\r\n    icon?: string;\r\n    validations?: ValidatorFn[]\r\n  }\r\n  ) {\r\n    super(options)\r\n    this.key = options.key\r\n    this.controlType = 'textarea'\r\n    this.label = options.label\r\n    this.gridProps = options.gridProps\r\n    this.icon = options.icon\r\n    this.validations = options.validations\r\n  }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "options",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 4,
                "jsdoctags": [
                    {
                        "name": "options",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatFormFieldAppearance",
                    "optional": true,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "controlType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ControlType",
                    "optional": true,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "customRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "gridProps",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GridProps",
                    "optional": true,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QuestionType",
                    "optional": true,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "validations",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidatorFn[]",
                    "optional": true,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T | undefined",
                    "optional": true,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": "QuestionBaseModel",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "QuestionTextModel",
            "id": "class-QuestionTextModel-1769cbc524af4c3a4f2f2795ea5c0241",
            "file": "projects/lib-kakal-ui/src/lib/app/components/form/models/question-text.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { ValidatorFn } from '@angular/forms';\r\nimport { ControlType, GridProps, QuestionBaseModel, QuestionType } from './question.model';\r\n\r\nexport class QuestionTextModel extends QuestionBaseModel<string> {\r\n  constructor(options?: {\r\n    key: string;\r\n    label: string;\r\n    type?: QuestionType;\r\n    controlType? : ControlType\r\n    gridProps?: GridProps;\r\n    icon?: string;\r\n    validations?: ValidatorFn[];\r\n  }) {\r\n    super(options);\r\n    this.key = options.key;\r\n    this.label = options.label;\r\n    this.controlType = options.controlType;\r\n    this.gridProps = options.gridProps || super.gridProps;\r\n    this.icon = options.icon;\r\n    this.validations = options.validations;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "options",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 4,
                "jsdoctags": [
                    {
                        "name": "options",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatFormFieldAppearance",
                    "optional": true,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "controlType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ControlType",
                    "optional": true,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "customRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "gridProps",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GridProps",
                    "optional": true,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QuestionType",
                    "optional": true,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "validations",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidatorFn[]",
                    "optional": true,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T | undefined",
                    "optional": true,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "QuestionBaseModel"
                    }
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": "QuestionBaseModel",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "RowModel",
            "id": "class-RowModel-5288e56a12016cf1495acbbba7b9629a",
            "file": "projects/lib-kakal-ui/src/lib/app/components/table/models/row.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { FormGroup } from '@angular/forms';\r\nimport { Question } from '../../form/services/form.service';\r\nimport { ActionState } from './action-state.model';\r\n\r\nexport interface RowState {\r\n  pending: boolean;\r\n  editable: boolean;\r\n  expanded: boolean;\r\n  data : any\r\n}\r\n\r\nexport class RowModel<T> {\r\n  public item: T;\r\n  public formGroup: FormGroup;\r\n  public pending: boolean;\r\n  public editable: boolean;\r\n  public expanded: boolean;\r\n  public questionsGroup: { [x: string]: Question };\r\n  public state?: ActionState<RowState>;\r\n\r\n  constructor(options?: {\r\n    item?: T;\r\n    pending?: boolean;\r\n    editable?: boolean;\r\n    expanded?: boolean;\r\n    questionsGroup?: {};\r\n    state?: {};\r\n  }) {\r\n    this.item = options?.item;\r\n    this.pending = options?.pending || false;\r\n    this.editable = options?.editable || false;\r\n    this.expanded = options?.expanded || false;\r\n    this.questionsGroup = options?.questionsGroup || {};\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "options",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "options",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "editable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "expanded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "item",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "pending",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "questionsGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActionState<RowState>",
                    "optional": true,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "TableDataSource",
            "id": "class-TableDataSource-0b9a327b710ecff4bce574a59c31c2c6",
            "file": "projects/lib-kakal-ui/src/lib/app/components/table/table-datasource.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\n\r\nexport class TableDataSource<T> implements DataSource<T> {\r\n  private data$: BehaviorSubject<T[]>;\r\n\r\n  constructor(data?: T[]) {\r\n    this.data$ = new BehaviorSubject<T[]>(data || []);\r\n  }\r\n\r\n  disconnect(): void {}\r\n\r\n  public load(data?: T[]): void {\r\n    this.data$.next(data);\r\n  }\r\n\r\n  public connect(): Observable<T[]> {\r\n    return this.data$.asObservable();\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "data",
                        "type": "T[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "data",
                        "type": "T[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "data$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<T[]>",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "methods": [
                {
                    "name": "connect",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<T[]>",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "disconnect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "load",
                    "args": [
                        {
                            "name": "data",
                            "type": "T[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "T[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "DataSource"
            ]
        }
    ],
    "directives": [
        {
            "name": "BorderDirective",
            "id": "directive-BorderDirective-e3d4674126633274fc48e4acad410664",
            "file": "projects/lib-kakal-ui/src/lib/app/utilities/directives/border.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding, Input } from '@angular/core';\r\nimport { palette, Palette } from '../../../styles/theme';\r\n\r\n@Directive({\r\n  selector: '[appBorder]'\r\n})\r\nexport class BorderDirective {\r\n\r\n  private palette = palette;\r\n\r\n  @Input() color: Palette;\r\n  @Input() size: number;\r\n\r\n  @HostBinding('style.border') private border: string;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.border = `${this.size || 1}px solid ${this.palette[this.color || 'primary']}`;\r\n  }\r\n}\r\n",
            "selector": "[appBorder]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "Palette"
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "style.border",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                }
            ],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "border",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'style.border'"
                        }
                    ],
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "palette",
                    "defaultValue": "palette",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            }
        },
        {
            "name": "ButtonDirective",
            "id": "directive-ButtonDirective-2e2f0a52e1936ced4a972df4ed042736",
            "file": "projects/lib-kakal-ui/src/lib/app/utilities/directives/button.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appButton]'\r\n})\r\nexport class ButtonDirective {\r\n\r\n\r\n  @HostBinding('style.cursor') private cursor: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.cursor = 'pointer'\r\n  }\r\n\r\n}\r\n",
            "selector": "[appButton]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "style.cursor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string"
                }
            ],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "cursor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'style.cursor'"
                        }
                    ],
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            }
        },
        {
            "name": "ColorDirective",
            "id": "directive-ColorDirective-22265ed7db9339741c1b7d4dddfc3f18",
            "file": "projects/lib-kakal-ui/src/lib/app/utilities/directives/color.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\r\n  Directive,\r\n  HostBinding,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { palette, Palette } from '../../../styles/theme';\r\n\r\n@Directive({\r\n  selector: '[appColor]',\r\n})\r\nexport class ColorDirective implements OnInit, OnDestroy {\r\n  private palette = palette;\r\n  private subscription: Subscription\r\n\r\n  @Input() public color: Palette;\r\n  @Input() public color$: Observable<Palette>;\r\n\r\n  @HostBinding('style.color') private iconColor: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.iconColor = this.palette[this.color];\r\n    this.subscribeToColor()\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe()\r\n    }\r\n  }\r\n\r\n  private subscribeToColor() {\r\n    if (this.color$) {\r\n      this.subscription = this.color$.subscribe(\r\n        (color) => {\r\n          this.iconColor = this.palette[color]\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n}\r\n",
            "selector": "[appColor]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "Palette"
                },
                {
                    "name": "color$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "Observable<Palette>"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "style.color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string"
                }
            ],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "iconColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'style.color'"
                        }
                    ],
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "palette",
                    "defaultValue": "palette",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "subscribeToColor",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 21
            }
        },
        {
            "name": "SizeDirective",
            "id": "directive-SizeDirective-71bdab49806bd2e967d68a5a51afcf1c",
            "file": "projects/lib-kakal-ui/src/lib/app/utilities/directives/size.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { StepType } from '../../components/cards/card-step/card-step.model';\r\nimport { BreakpointService } from '../services/breakpoint.service';\r\n\r\n@Directive({\r\n  selector: '[appSize]',\r\n})\r\nexport class SizeDirective implements OnInit, OnDestroy {\r\n\r\n  @Input() size: number;\r\n  @Input() type: StepType;\r\n  @Input() divider: number;\r\n  @Input() space: number;\r\n\r\n  private tablet$: Observable<boolean>;\r\n\r\n  private subscription: Subscription;\r\n\r\n  @HostBinding('style.height') public height: string;\r\n  @HostBinding('style.width') public width: string;\r\n\r\n  constructor(private breakpointService: BreakpointService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.setSize();\r\n    this.tablet$ = this.breakpointService.isTablet();\r\n    this.subscribeToBreakpoint();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  private setSize() {\r\n\r\n    switch (this.type) {\r\n      case 'wizard':\r\n        this.width = '6rem';\r\n        this.height = '7.5rem';\r\n        break;\r\n      case 'status':\r\n        this.width = `${6 * (this.space || 1)}rem`;;\r\n        this.height = `6rem`;\r\n        break;\r\n      case 'step':\r\n        this.width = `8rem`;\r\n        this.height = `12rem`;\r\n        break;\r\n      default:\r\n        this.width = `${this.size * (this.divider || 1)}rem`;\r\n        this.height = `${this.size}rem`;\r\n    }\r\n  }\r\n\r\n  private subscribeToBreakpoint() {\r\n    this.subscription = this.tablet$.subscribe((tablet: boolean) => {\r\n      this.setSize();\r\n    });\r\n  }\r\n}\r\n",
            "selector": "[appSize]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "divider",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "number"
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "number"
                },
                {
                    "name": "space",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number"
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "StepType"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "style.height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string"
                },
                {
                    "name": "style.width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string"
                }
            ],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'style.height'"
                        }
                    ],
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "tablet$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'style.width'"
                        }
                    ],
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setSize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "subscribeToBreakpoint",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "breakpointService",
                        "type": "BreakpointService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "breakpointService",
                        "type": "BreakpointService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "UnderlineDirective",
            "id": "directive-UnderlineDirective-cb4af1695983843ec497a3226e1260c3",
            "file": "projects/lib-kakal-ui/src/lib/app/utilities/directives/underline.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding, Input } from '@angular/core';\r\nimport { palette, Palette } from '../../../styles/theme';\r\n\r\n@Directive({\r\n  selector: '[appUnderline]',\r\n})\r\nexport class UnderlineDirective {\r\n  private palette = palette;\r\n\r\n  @Input() color: Palette;\r\n\r\n  @HostBinding('style.border-bottom') private underline: string;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.underline = `3px solid ${this.palette[this.color || 'primary']}`;\r\n  }\r\n}\r\n",
            "selector": "[appUnderline]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "Palette"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "style.border-bottom",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string"
                }
            ],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "palette",
                    "defaultValue": "palette",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "underline",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'style.border-bottom'"
                        }
                    ],
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            }
        },
        {
            "name": "VariantDirective",
            "id": "directive-VariantDirective-a6156e56977ea04826ceb0aa155854fc",
            "file": "projects/lib-kakal-ui/src/lib/app/utilities/directives/variant.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input, HostBinding } from '@angular/core';\r\nimport { StepVariant, StepType } from '../../components/cards/card-step/card-step.model';\r\n\r\n@Directive({\r\n  selector: '[appVariant]',\r\n})\r\nexport class VariantDirective {\r\n  @Input() variant: StepVariant = 'circle';\r\n  @Input() type: StepType;\r\n\r\n  @HostBinding('style.border') private border: string;\r\n  @HostBinding('style.border-radius') private radius: string;\r\n  @HostBinding('style.box-shadow') private boxShadow: string;\r\n  @HostBinding('style.background') private background: string;\r\n  @HostBinding('style.background-color') private backgroundColor: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n\r\n    switch (this.variant) {\r\n      case 'circle':\r\n\r\n        this.radius = `${5}rem`;\r\n\r\n        switch (this.type) {\r\n\r\n          case 'step':\r\n            this.boxShadow =\r\n              '0px 3px 3px 1px #dadada, 0px 0px 0px 9px #ececec';\r\n            this.background = `linear-gradient(\r\n          0deg, #eeeeee 0%, #fefefe 100%`;\r\n\r\n            break;\r\n\r\n          case 'status':\r\n            this.boxShadow = '0px 0px 0px 6px #ffffff';\r\n            this.backgroundColor = '#ffffff !important';\r\n            this.border = `1px solid #00000029`;\r\n            break;\r\n        }\r\n\r\n        break\r\n\r\n      case 'square':\r\n\r\n        switch (this.type) {\r\n\r\n          case 'step':\r\n            this.boxShadow =\r\n              '0px 3px 3px 1px #dadada, 0px 0px 0px 9px #ececec !important';\r\n            this.background = `linear-gradient(\r\n          0deg, #eeeeee 0%, #fefefe 100%`;\r\n            break\r\n        }\r\n\r\n    }\r\n\r\n  }\r\n}\r\n",
            "selector": "[appVariant]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "StepType"
                },
                {
                    "name": "variant",
                    "defaultValue": "'circle'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "StepVariant"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "style.background",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "style.background-color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "style.border",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "style.border-radius",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "style.box-shadow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string"
                }
            ],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "background",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'style.background'"
                        }
                    ],
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'style.background-color'"
                        }
                    ],
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "border",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'style.border'"
                        }
                    ],
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "boxShadow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'style.box-shadow'"
                        }
                    ],
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "radius",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'style.border-radius'"
                        }
                    ],
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15
            }
        }
    ],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-c75346be4c3a8e691c1dd3884a0359e6",
            "file": "projects/lib-kakal-ui/src/lib/app/components/root/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'קק\"ל חינוך - הזמנות טיולים'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\n\r\nexport class AppComponent {\r\n\r\n  public title : string ='קק\"ל חינוך - הזמנות טיולים'\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host, div,\r\nkkl-icon{\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<router-outlet></router-outlet>\r\n"
        },
        {
            "name": "CardDashboardComponent",
            "id": "component-CardDashboardComponent-982408251f5e29e4b11f11d55c0ffc79",
            "file": "projects/lib-kakal-ui/src/lib/app/components/cards/card-dashboard/card-dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "kkl-card-dashboard",
            "styleUrls": [
                "./card-dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card-dashboard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "card",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "CardDashboardModel"
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<CardDashboardModel>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onCardClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "subscribeToTablet",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { BreakpointService } from '../../../utilities/services/breakpoint.service';\r\nimport { CardDashboardModel } from './card-dashboard.model';\r\n\r\n@Component({\r\n  selector: 'kkl-card-dashboard',\r\n  templateUrl: './card-dashboard.component.html',\r\n  styleUrls: ['./card-dashboard.component.scss']\r\n})\r\nexport class CardDashboardComponent implements OnInit {\r\n\r\n\r\n  @Input() card: CardDashboardModel;\r\n  @Output() onClick = new EventEmitter<CardDashboardModel>();\r\n\r\n  private subscription: Subscription;\r\n  constructor(private breakpointService: BreakpointService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.subscribeToTablet();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  public onCardClick() {\r\n    this.onClick.emit(this.card);\r\n  }\r\n\r\n  private subscribeToTablet() {\r\n    this.subscription = this.breakpointService\r\n      .isTablet()\r\n      .subscribe((table: boolean) => {\r\n        this.card.size = table ? 6 : 8;\r\n      });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../styles/styles\";\r\n\r\n:host {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\ndiv {\r\n  height: calc(100% - 10vh);\r\n}\r\n\r\n.card {\r\n  cursor: pointer;\r\n  background-color: rgba($color: #ffffff, $alpha: 0.82);\r\n  border-radius: 10px;\r\n  height: 100%;\r\n}\r\n\r\n",
                    "styleUrl": "./card-dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "breakpointService",
                        "type": "BreakpointService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "breakpointService",
                        "type": "BreakpointService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"card\" fxLayout=\"column\" fxLayoutAlign=\"center center\" (click)=\"onCardClick()\">\r\n  <div fxFlex=\"80\">\r\n    <kkl-icon [size]=\"card.size\" type=\"svg\" [color]=\"'primary'\" [key]=\"card.svgUrl\"></kkl-icon>\r\n  </div>\r\n  <div fxLayout=\"column\" fxLayoutAlign=\"start center\" fxFlex=\"30\">\r\n    <kkl-typography [size]=\"1.8\">\r\n      {{ card.label }}\r\n    </kkl-typography>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "CardFilterComponent",
            "id": "component-CardFilterComponent-7cf7a827fdc675fdbb974e5e550d2e42",
            "file": "projects/lib-kakal-ui/src/lib/app/components/cards/card-filter/card-filter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "kkl-card-filter",
            "styleUrls": [
                "./card-filter.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card-filter.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "filter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "FilterModel"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "active$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { FilterModel } from './card-filter.model';\r\n\r\n@Component({\r\n  selector: 'kkl-card-filter',\r\n  templateUrl: './card-filter.component.html',\r\n  styleUrls: ['./card-filter.component.scss'],\r\n})\r\nexport class CardFilterComponent implements OnInit {\r\n  @Input() filter!: FilterModel;\r\n\r\n  public active$: Observable<boolean>;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".filter{\r\n    text-align: center;\r\n      background-color: #f5f5f5;\r\n      flex: 1;\r\n      box-sizing: border-box;\r\n      padding: 1.5rem 2rem;\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      justify-content: center;\r\n      border-radius: 5px;\r\n      box-shadow: 0px 3px 10px 2px rgba($color: #000, $alpha: 0.2);\r\n      position: relative;\r\n      border: 1px solid black;\r\n    &-svg{\r\n        position: absolute;\r\n        border: 1px solid #ededed;\r\n        padding: 3px;\r\n        border-radius: 100px;\r\n        right: -10px;\r\n        top: -14px;\r\n        z-index: 100;\r\n        background-color: #ffffff;\r\n        box-shadow: 0px 0px 1px 3px #ffffff;\r\n        display: flex;\r\n        height: 2.5em;\r\n        width: 2.5em;\r\n    }\r\n}",
                    "styleUrl": "./card-filter.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"filter\" fxLayout=\"column\" fxLayoutAlign=\"space-evenly center\">\r\n  <kkl-icon\r\n    [color]=\"'primary'\"\r\n    [key]=\"filter.svgUrl\"\r\n    class=\"filter-svg\"\r\n  ></kkl-icon>\r\n  <kkl-typography [active$]=\"active$\" size=\"1.8\">\r\n    {{ filter.label }}\r\n  </kkl-typography>\r\n  <kkl-typography [active$]=\"active$\" size=\"1.8\">\r\n    {{ filter.value }}\r\n  </kkl-typography>\r\n</div>\r\n"
        },
        {
            "name": "CardStatusComponent",
            "id": "component-CardStatusComponent-aaabe07a45e7a02553432bee6f896c93",
            "file": "projects/lib-kakal-ui/src/lib/app/components/cards/card-status/card-status.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "kkl-card-status",
            "styleUrls": [
                "./card-status.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card-status.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "CardStepModel"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CardStepModel } from '../card-step/card-step.model';\r\n\r\n@Component({\r\n  selector: 'kkl-card-status',\r\n  templateUrl: './card-status.component.html',\r\n  styleUrls: ['./card-status.component.scss'],\r\n})\r\nexport class CardStatusComponent  {\r\n\r\n  @Input() public status: CardStepModel;\r\n\r\n  constructor() {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../styles/styles\";\r\ndiv {\r\n  height: 100%;\r\n}\r\n\r\n.kkl-card-status {\r\n  transform: translateY(2.5rem);\r\n  box-sizing: border-box;\r\n}\r\n\r\n.mat-badge-content {\r\n  color: color(paper) !important;\r\n}\r\n\r\n\r\n.text-container {\r\n  width: fit-content;\r\n  height: 5rem;\r\n}\r\n",
                    "styleUrl": "./card-status.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "templateData": "<div class=\"card-status\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n  <div appSize [size]=\"6\" [matBadge]=\"status.value\" matBadgeColor=\"accent\" matBadgeSize=\"medium\">\r\n    <div class=\"status\" appVariant [type]=\"status.type\">\r\n      <div class=\"icon-container\">\r\n        <kkl-icon [key]=\"status.svgUrl\" [size]=\"3.5\"></kkl-icon>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"text-container\" fxLayout=\"column\" fxLayoutAlign=\"end start\" [fxFlexOffset]=\"5\">\r\n    <kkl-typography [size]=\"1.2\" [bold]=\"600\">\r\n      {{ status.label }}\r\n    </kkl-typography>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "CardStepComponent",
            "id": "component-CardStepComponent-ed3e0792347451e7dfc3e9ba0a28fd6c",
            "file": "projects/lib-kakal-ui/src/lib/app/components/cards/card-step/card-step.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "kkl-card-step",
            "styleUrls": [
                "./card-step.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card-step.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "step",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "CardStepModel"
                }
            ],
            "outputsClass": [
                {
                    "name": "onStepChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter<CardStepModel>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "active$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StepType",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onStepClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { CardStepModel, StepType } from './card-step.model';\r\n\r\n@Component({\r\n  selector: 'kkl-card-step',\r\n  templateUrl: './card-step.component.html',\r\n  styleUrls: ['./card-step.component.scss']\r\n})\r\nexport class CardStepComponent implements OnInit {\r\n\r\n  @Input() public step: CardStepModel;\r\n\r\n  public type: StepType;\r\n  public active$: Observable<boolean>;\r\n\r\n  @Output() onStepChange: EventEmitter<CardStepModel> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.type = this.step.type;\r\n    this.active$ = this.step.getActiveObs();\r\n  }\r\n\r\n  public onStepClick(): void {\r\n    if (!this.step.isActive) {\r\n      this.onStepChange.emit(this.step);\r\n    }\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../styles/styles\";\r\n\r\n:host {\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n\r\ndiv {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\nmat-card,\r\nmat-card-content {\r\n  width: 100%;\r\n  height: 100% !important;\r\n  padding: 0px !important;\r\n\r\n  &.active {\r\n    background: color(primary) !important;\r\n  }\r\n}\r\n\r\nkkl-typography.active {\r\n  border-bottom: 3px solid color(primary);\r\n  width: inherit;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n",
                    "styleUrl": "./card-step.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 17
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div [ngClass]=\"step.type\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxFill>\r\n  <div appSize [size]=\"6\" (click)=\"onStepClick()\" [matBadge]=\"step.value\" matBadgeColor=\"accent\" matBadgeSize=\"medium\">\r\n    <mat-card appVariant [type]=\"step.type\" [variant]=\"step.variant\" [ngClass]=\"{\r\n        'mat-elevation-z0': true,\r\n        active: (active$ | async)\r\n      }\">\r\n      <mat-card-content appButton>\r\n        <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n          <div fxFlex=\"80\">\r\n            <kkl-icon [color]=\"(active$ | async) ? 'paper' : 'default'\" [key]=\"step.svgUrl\" [size]=\"step.size\">\r\n            </kkl-icon>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n  <div class=\"label-container\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxFlex=\"40\">\r\n    <kkl-typography [ngClass]=\"{ active: (active$ | async) }\" [bold]=\"(active$ | async) ? 600 : 500\" [size]=\"1.2\">\r\n      {{ step.label }}\r\n    </kkl-typography>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "CardUserComponent",
            "id": "component-CardUserComponent-82bbfc86dce8af7b4f0fff038cc87a0f",
            "file": "projects/lib-kakal-ui/src/lib/app/components/cards/card-user/card-user.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "kkl-card-user",
            "styleUrls": [
                "./card-user.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card-user.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "action",
                    "defaultValue": "'החלף משתמש'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "userInfo",
                    "defaultValue": "{\r\n    imgSrc: 'assets/images/userImage.jpg',\r\n    name: 'יוסי יוספוב',\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'kkl-card-user',\r\n  templateUrl: './card-user.component.html',\r\n  styleUrls: ['./card-user.component.scss']\r\n})\r\nexport class CardUserComponent implements OnInit {\r\n\r\n  public userInfo = {\r\n    imgSrc: 'assets/images/userImage.jpg',\r\n    name: 'יוסי יוספוב',\r\n  };\r\n\r\n  public action: string = 'החלף משתמש';\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../styles/styles\";\r\n\r\n.example-header-image {\r\n    background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\r\n    background-size: cover;\r\n  }\r\n\r\n  div.divider-container {\r\n    height: 100%;\r\n    width: 80%;\r\n  }\r\n\r\n  mat-card-title {\r\n    font-size: 16px !important;\r\n  }\r\n\r\n  mat-card-subtitle {\r\n    color: color(primary) !important;\r\n    font-size: 14px !important;\r\n  }\r\n",
                    "styleUrl": "./card-user.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-card class=\"mat-elevation-z0\" [dir]=\"'rtl'\">\r\n    <mat-card-header>\r\n      <div mat-card-avatar class=\"example-header-image\"></div>\r\n      <mat-card-title>\r\n        {{userInfo.name}}\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        {{action}}\r\n      </mat-card-subtitle>\r\n    </mat-card-header>\r\n    <div class=\"divider-container\">\r\n      <mat-divider></mat-divider>\r\n    </div>\r\n  </mat-card>\r\n  "
        },
        {
            "name": "CardWizardComponent",
            "id": "component-CardWizardComponent-b4d7172bdbf26801f2da1e8d604b81ae",
            "file": "projects/lib-kakal-ui/src/lib/app/components/cards/card-wizard/card-wizard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "kkl-card-wizard",
            "styleUrls": [
                "./card-wizard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card-wizard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "step",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "CardStepModel"
                }
            ],
            "outputsClass": [
                {
                    "name": "onStepChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter<CardStepModel>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "active$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StepType",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onStepClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { CardStepModel, StepType } from '../card-step/card-step.model';\r\n\r\n@Component({\r\n  selector: 'kkl-card-wizard',\r\n  templateUrl: './card-wizard.component.html',\r\n  styleUrls: ['./card-wizard.component.scss']\r\n})\r\nexport class CardWizardComponent implements OnInit {\r\n\r\n  @Input() public step: CardStepModel;\r\n\r\n  public type: StepType;\r\n  public active$: Observable<boolean>;\r\n\r\n  @Output() onStepChange: EventEmitter<CardStepModel> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.type = this.step.type;\r\n    this.active$ = this.step.getActiveObs();\r\n  }\r\n\r\n  public onStepClick(): void {\r\n    if (!this.step.isActive) {\r\n      this.onStepChange.emit(this.step);\r\n    }\r\n  }\r\n\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../styles/styles\";\r\n\r\n:host {\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n\r\n  div {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  mat-card,\r\n  mat-card-content {\r\n    width: 100% !important;\r\n    height: 100% !important;\r\n    padding: 0px !important;\r\n\r\n\r\n    &.active {\r\n      background: color(primary) !important;\r\n\r\n    }\r\n  }\r\n\r\n  div.label-container {\r\n    padding-top: spacing(3);\r\n\r\n  }\r\n",
                    "styleUrl": "./card-wizard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 17
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div [ngClass]=\"type\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxFill>\r\n  <div class=\"card-svg-container\" (click)=\"onStepClick()\" [matBadge]=\"step.value\" matBadgeColor=\"accent\"\r\n    matBadgeSize=\"medium\" fxFill>\r\n    <mat-card appVariant [type]=\"step.type\" [variant]=\"step.variant\" [ngClass]=\"{\r\n          'mat-elevation-z0': true,\r\n          active: (active$ | async)\r\n        }\">\r\n      <mat-card-content appButton>\r\n        <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n          <div fxFlex=\"80\">\r\n            <kkl-icon [color]=\"(active$ | async) ? 'paper' : 'primary'\" [key]=\"step.svgUrl\" [size]=\"step.size\">\r\n            </kkl-icon>\r\n          </div>\r\n          <div fxFlex=\"15\" [ngClass]=\"{ active: (active$ | async) }\" fxLayout=\"column\" fxLayoutAlign=\"end center\">\r\n            <kkl-typography [color]=\"(active$ | async) ? 'paper' : 'text'\" [size]=\"1.2\" [bold]=\"(active$ | async) ? 600 : 500\">\r\n              {{ step.label }}\r\n            </kkl-typography>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ColumnFilterComponent",
            "id": "component-ColumnFilterComponent-a12034af3fa46cffaf069ee140f6c766",
            "file": "projects/lib-kakal-ui/src/lib/app/components/columns/column-filter/column-filter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "kkl-column-filter",
            "styleUrls": [
                "./column-filter.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./column-filter.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "column",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "ColumnModel<T>"
                },
                {
                    "name": "filterSlots",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "TemplateRef<any>"
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string"
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "SelectOption[]"
                }
            ],
            "outputsClass": [
                {
                    "name": "optionSelect",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "EventEmitter<FilterOption<T>>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onOptionSelect",
                    "args": [
                        {
                            "name": "option",
                            "type": "SelectOption",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "option",
                            "type": "SelectOption",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport { SelectOption } from '../../form/models/question-select.model';\r\nimport { ColumnModel } from '../column.model';\r\n\r\nexport interface FilterOption<T> {\r\n  column: ColumnModel<T>;\r\n  option: SelectOption;\r\n}\r\n\r\n@Component({\r\n  selector: 'kkl-column-filter',\r\n  templateUrl: './column-filter.component.html',\r\n  styleUrls: ['./column-filter.component.scss'],\r\n})\r\nexport class ColumnFilterComponent<T> implements OnInit {\r\n  @Input() column: ColumnModel<T>;\r\n  @Input() label: string;\r\n  @Input() options: SelectOption[];\r\n  @Input() filterSlots: TemplateRef<any>;\r\n  @Output() optionSelect: EventEmitter<FilterOption<T>> = new EventEmitter();\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.label = this.column.label;\r\n  }\r\n\r\n  public onOptionSelect(option: SelectOption): void {\r\n    this.optionSelect.emit({ column: this.column, option });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../styles/styles.scss\";\r\n\r\n.column-filter-inputs {\r\n  text-align: center;\r\n\r\n  ::ng-deep mat-form-field {\r\n      width: 90%;\r\n  }\r\n  ::ng-deep .search-input mat-form-field {\r\n      font-size: 0.8rem!important;\r\n      width: 90%;\r\n\r\n}\r\n  ::ng-deep mat-icon {\r\n      height: 15px;\r\n  }\r\n\r\n}\r\n\r\n::ng-deep .column-filter-button{\r\n      width: 0!important;\r\n      height: 0!important;\r\n\r\n}\r\n\r\n",
                    "styleUrl": "./column-filter.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 27
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-container>\r\n    <div [matMenuTriggerFor]=\"menu\" class=\"column-filter-div\">\r\n    <kkl-typography [bold]=\"600\" [size]=\"1.4\" class=\"first-flex\">\r\n      {{ label }}\r\n    </kkl-typography>\r\n    <button mat-icon-button color=\"primary\"  class=\"column-filter-button second-flex\">\r\n      <mat-icon> arrow_drop_down </mat-icon>\r\n    </button>\r\n  </div>\r\n    <mat-menu #menu=\"matMenu\" xPosition=\"after\">\r\n      <div class=\"column-filter-inputs\">\r\n        <ng-container *ngFor=\"let template of filterSlots | keyvalue\">\r\n          <ng-container *ngIf=\"template.key === this.column.key\">\r\n            <ng-container\r\n              *ngTemplateOutlet=\"filterSlots[template.key]\"\r\n            ></ng-container>\r\n          </ng-container>\r\n        </ng-container>\r\n      </div>\r\n\r\n      <ng-container *ngIf=\"column.filterOptions.length !== 0\">\r\n        <button\r\n          mat-menu-item\r\n          *ngFor=\"let option of column.filterOptions\"\r\n          (click)=\"onOptionSelect(option)\"\r\n        >\r\n          <kkl-typography> {{ option.label }}</kkl-typography>\r\n        </button>\r\n      </ng-container>\r\n    </mat-menu>\r\n  </ng-container>\r\n"
        },
        {
            "name": "ColumnFormComponent",
            "id": "component-ColumnFormComponent-7c9b8f8c98a3c30880ccf30fd4afd123",
            "file": "projects/lib-kakal-ui/src/lib/app/components/columns/column-form/column-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "kkl-column-form",
            "styleUrls": [
                "./column-form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./column-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "FormControl"
                },
                {
                    "name": "question",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "QuestionBase"
                }
            ],
            "outputsClass": [
                {
                    "name": "register",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "selected",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "EventEmitter<QuestionSelectModel>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "error",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "iconRotate",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "iconType",
                    "defaultValue": "'svg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectOption[]",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSelectChange",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "subscribeToControl",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "validate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { QuestionSelectModel, SelectOption } from '../../form/models/question-select.model';\r\nimport { QuestionBase } from '../../form/services/form.service';\r\nimport { MessageService } from '../../form/services/message.service';\r\n\r\n@Component({\r\n  selector: 'kkl-column-form',\r\n  templateUrl: './column-form.component.html',\r\n  styleUrls: ['./column-form.component.scss']\r\n})\r\nexport class ColumnFormComponent implements OnInit {\r\n\r\n  @Input() public question: QuestionBase;\r\n  @Input() public control: FormControl;\r\n\r\n  public type: string;\r\n  public label: string;\r\n  public icon: string;\r\n  public options: SelectOption[]\r\n  public error: string = ''\r\n\r\n  public color: string;\r\n  public iconType: string = 'svg';\r\n  public iconRotate: number = 0;\r\n\r\n  @Output() public selected: EventEmitter<QuestionSelectModel> = new EventEmitter();\r\n  @Output() public register: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(\r\n    private messageService: MessageService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n    this.type = this.question?.type\r\n    this.label = this.question?.label || ''\r\n    this.icon = this.question?.icon || ''\r\n\r\n    if (this.question instanceof QuestionSelectModel) {\r\n      this.options = this.question.options;\r\n    }\r\n\r\n    this.subscribeToControl()\r\n  }\r\n\r\n  // subscription section\r\n  private subscribeToControl() {\r\n\r\n    if (this.control.disabled) {\r\n      this.color = 'disable';\r\n    }\r\n\r\n\r\n    this.control.valueChanges.subscribe((value) => {\r\n      if (this.control.disabled) {\r\n        this.color = 'disable';\r\n      } else if (this.control.errors) {\r\n        this.color = 'danger';\r\n      } else {\r\n        this.color = '';\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  public validate() {\r\n    this.error = this.messageService.getErrorMessage(this.control, this.label);\r\n\r\n    if (this.error) {\r\n      this.color = 'danger';\r\n    }\r\n\r\n    this.control.valueChanges.subscribe(() => {\r\n      this.error = this.messageService.getErrorMessage(this.control, this.label);\r\n    });\r\n  }\r\n\r\n  public onSelectChange() {\r\n    if (this.question instanceof QuestionSelectModel) {\r\n      this.selected.emit(this.question)\r\n      this.question.onSelectChange()\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../styles/styles.scss\";\r\n\r\n.column-input {\r\n  width: inherit;\r\n\r\n  input {\r\n    width: inherit;\r\n    border-radius: 5px;\r\n    border: 1px solid color(text);\r\n\r\n\r\n    &.error {\r\n      border: 2px solid color(warn);\r\n\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./column-form.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"column-input\">\r\n  <input\r\n    [ngClass]=\"{ error: error }\"\r\n    matInput\r\n    autocomplete=\"off\"\r\n    required\r\n    [formControl]=\"control\"\r\n    [name]=\"question.key\"\r\n    (focusout)=\"validate()\"\r\n    #input\r\n  />\r\n</div>\r\n"
        },
        {
            "name": "DashboardComponent",
            "id": "component-DashboardComponent-1941ac2624e8941d762f2b5b2fd3ab99",
            "file": "projects/lib-kakal-ui/src/lib/app/screens/dashboard/dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "kkl-dashboard",
            "styleUrls": [
                "./dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dashboard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "cards",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "CardDashboardModel[]"
                },
                {
                    "name": "cols",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number"
                },
                {
                    "name": "moduleTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "prefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "rows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "number"
                }
            ],
            "outputsClass": [
                {
                    "name": "cardClick",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "EventEmitter<string>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "md$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onCardClick",
                    "args": [
                        {
                            "name": "card",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "card",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { CardDashboardModel } from '../../components/cards/card-dashboard/card-dashboard.model';\r\nimport { BreakpointService } from '../../utilities/services/breakpoint.service';\r\n\r\n@Component({\r\n  selector: 'kkl-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent {\r\n\r\n  @Input() public prefix: string;\r\n  @Input() public cols: number;\r\n  @Input() public rows: number;\r\n  @Input() public moduleTitle: string;\r\n  @Input() public cards: CardDashboardModel[];\r\n\r\n  public md$: Observable<boolean>;\r\n\r\n  @Output() cardClick: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  constructor(\r\n    private breakpointService: BreakpointService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.md$ = this.breakpointService.isTablet();\r\n    this.cols = this.cols ||  this.cards.length /2\r\n    this.rows = this.rows || 2\r\n  }\r\n\r\n  public onCardClick(card) {\r\n    this.cardClick.emit(card.path)\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles/styles\";\r\n\r\n:host {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\ndiv {\r\n  height: $content-height;\r\n}\r\n\r\ndiv.container {\r\n  height: inherit;\r\n  width: 40%;\r\n}\r\n\r\nkkl-dashboard-card {\r\n  width: 100;\r\n  height: 100%;\r\n}\r\n\r\n.card {\r\n  padding: 1rem;\r\n  box-sizing: border-box;\r\n}\r\n",
                    "styleUrl": "./dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "breakpointService",
                        "type": "BreakpointService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "breakpointService",
                        "type": "BreakpointService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div fxLayout=\"column\" fxLayoutAlign=\"center center\" dir=\"rtl\">\r\n  <div fxLayout=\"row\">\r\n    <div class=\"container\" fxLayout=\"column\" fxLayoutAlign=\"center center\"\r\n      [fxFlex]=\"(((md$ | async) ? 16 : 24) * cols) + 'rem'\">\r\n      <div [fxFlex]=\"'8rem'\">\r\n        <kkl-typography [bold]=\"600\" [size]=\"3\">{{ moduleTitle }}</kkl-typography>\r\n      </div>\r\n      <div fxLayout=\"row wrap\" [fxFlex]=\"(((md$ | async) ? 16 : 24) * rows) + 'rem'\">\r\n        <div class=\"card\" *ngFor=\"let card of cards; let i = index\" appSize [size]=\"((md$ | async) ? 16 : 24)\"\r\n          (click)=\"onCardClick(card)\">\r\n          <kkl-card-dashboard [card]=\"card\"> </kkl-card-dashboard>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "DashboardExComponent",
            "id": "component-DashboardExComponent-dc8b6e83e1ac1c703b88b766198262d7",
            "file": "projects/lib-kakal-ui/src/lib/app/examples/dashboard-ex/dashboard-ex.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "kkl-dashboard-ex",
            "styleUrls": [
                "./dashboard-ex.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dashboard-ex.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "cards",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "CardDashboardModel[]"
                },
                {
                    "name": "moduleTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\nimport { CardDashboardModel } from '../../components/cards/card-dashboard/card-dashboard.model';\r\n\r\n@Component({\r\n  selector: 'kkl-dashboard-ex',\r\n  templateUrl: './dashboard-ex.component.html',\r\n  styleUrls: ['./dashboard-ex.component.scss']\r\n})\r\nexport class DashboardExComponent implements OnInit {\r\n\r\n  @Input() public cards: CardDashboardModel[];\r\n  @Input() public moduleTitle: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "div {\r\n  background-color: lightgray;\r\n  height: 100%;\r\n}\r\n",
                    "styleUrl": "./dashboard-ex.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div>\r\n  <kkl-dashboard [cards]=\"cards\" [moduleTitle]=\"moduleTitle\" ></kkl-dashboard>\r\n</div>\r\n"
        },
        {
            "name": "ExpandPanelComponent",
            "id": "component-ExpandPanelComponent-bdb9084244df74c8c6c05d7cbf697ff3",
            "file": "projects/lib-kakal-ui/src/lib/app/components/expand-panel/expand-panel.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "kkl-expand-panel",
            "styleUrls": [
                "./expand-panel.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./expand-panel.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean"
                },
                {
                    "name": "expanded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean"
                },
                {
                    "name": "hideHeader",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean"
                },
                {
                    "name": "hideToggle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean"
                },
                {
                    "name": "variant",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "closed",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "expand",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "opened",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "panelOpenState",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onPanelClosed",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "onPanelExpend",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "onPanelOpen",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'kkl-expand-panel',\r\n  templateUrl: './expand-panel.component.html',\r\n  styleUrls: ['./expand-panel.component.scss']\r\n})\r\nexport class ExpandPanelComponent implements OnInit {\r\n\r\n  // prop for custom class\r\n  @Input() public variant: string;\r\n  @Input() public hideToggle: boolean;\r\n  @Input() public hideHeader: boolean;\r\n  @Input() public disabled: boolean;\r\n\r\n  @Input() public expanded: boolean;\r\n\r\n  public panelOpenState = false;\r\n\r\n  @Output() expand: EventEmitter<void> = new EventEmitter();\r\n  @Output() closed: EventEmitter<void> = new EventEmitter();\r\n  @Output() opened: EventEmitter<void> = new EventEmitter();\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.variant = this.variant || '';\r\n    this.expanded = this.expanded || false;\r\n    this.hideToggle = this.hideToggle || false;\r\n    this.hideHeader = this.hideHeader || false;\r\n  }\r\n\r\n  public onPanelExpend() {\r\n    this.expand.emit();\r\n  }\r\n\r\n  public onPanelClosed() {\r\n    this.panelOpenState = false\r\n    this.closed.emit();\r\n  }\r\n\r\n  public onPanelOpen() {\r\n    this.panelOpenState = true\r\n    this.opened.emit();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles/styles\";\r\n\r\n::ng-deep mat-expansion-panel {\r\n  margin-bottom: spacing(2) !important;\r\n\r\n  &.table {\r\n    .mat-expansion-panel-content,\r\n    .mat-expansion-panel-body {\r\n      background-color: color(table);\r\n      padding: 0px !important;\r\n    }\r\n  }\r\n\r\n  &.tour {\r\n    border-bottom: 1px solid color(primary);\r\n  }\r\n\r\n  &.form {\r\n    border-radius: 0px !important;\r\n    border-bottom-left-radius: 1rem !important;\r\n    border-bottom-right-radius: 1rem !important;\r\n  }\r\n\r\n  &.search {\r\n    border-radius: 0px !important;\r\n    border-bottom-left-radius: 1rem !important;\r\n    border-bottom-right-radius: 1rem !important;\r\n  }\r\n}\r\n\r\n::ng-deep mat-expansion-panel.search .mat-expansion-panel-body{\r\n  background-color: rgba($color: #fff, $alpha: 0.7) !important\r\n}\r\n\r\n::ng-deep mat-expansion-panel-header {\r\n  &.table {\r\n    padding-right: 0px !important;\r\n  }\r\n\r\n  &.form {\r\n    background-color: color(warn) !important;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: color(paper) !important;\r\n  }\r\n\r\n  background-color: inherit !important;\r\n}\r\n\r\n.content {\r\n  font-size: 16px !important;\r\n}\r\n\r\n// override indicator color\r\n::ng-deep span.mat-expansion-indicator::after {\r\n  color: color(primary) !important;\r\n}\r\n",
                    "styleUrl": "./expand-panel.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 22
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-expansion-panel\r\n  dir=\"rtl\"\r\n  [hideToggle]=\"hideToggle\"\r\n  [expanded]=\"expanded\"\r\n  [disabled]=\"disabled\"\r\n  [ngClass]=\"[variant, 'default', 'mat-elevation-z0']\"\r\n  (closed)=\"onPanelClosed()\"\r\n  (opened)=\"onPanelOpen()\"\r\n>\r\n  <mat-expansion-panel-header\r\n    *ngIf=\"!hideHeader\"\r\n    [ngClass]=\"[variant]\"\r\n    (click)=\"onPanelExpend()\"\r\n  >\r\n    <mat-panel-title [ngClass]=\"[variant, 'default']\">\r\n      <ng-content select=\"[title]\"></ng-content>\r\n    </mat-panel-title>\r\n    <mat-panel-description>\r\n      <ng-content select=\"[description]\"></ng-content>\r\n    </mat-panel-description>\r\n  </mat-expansion-panel-header>\r\n\r\n  <div class=\"content\">\r\n    <ng-content select=\"[content]\"></ng-content>\r\n  </div>\r\n</mat-expansion-panel>\r\n"
        },
        {
            "name": "FiltersExComponent",
            "id": "component-FiltersExComponent-d479af3d75a0a9d93802fe714a76820d",
            "file": "projects/lib-kakal-ui/src/lib/app/examples/filters-ex/filters-ex.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "kkl-filters-ex",
            "styleUrls": [
                "./filters-ex.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./filters-ex.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "filters",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "FilterModel[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\nimport { FilterModel } from '../../components/cards/card-filter/card-filter.model';\r\n\r\n@Component({\r\n  selector: 'kkl-filters-ex',\r\n  templateUrl: './filters-ex.component.html',\r\n  styleUrls: ['./filters-ex.component.scss']\r\n})\r\nexport class FiltersExComponent implements OnInit {\r\n\r\n  @Input() filters: FilterModel[];\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container {\r\n    display: flex;\r\n    width: calc(100%);\r\n    flex-direction: row-reverse;\r\n    font-size: inherit;\r\n    gap: 2rem;\r\n    margin: 3rem 0;\r\n}\r\n\r\n.kkl-filter-card{\r\n    flex: 1;\r\n}\r\n",
                    "styleUrl": "./filters-ex.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div fxFill fxLayout=\"row\" fxLayoutAlign=\"center\">\r\n    <div\r\n      class=\"container\"\r\n      fxLayout=\"row\"\r\n      fxLayoutAlign=\"space-evenly start\"\r\n      dir=\"rtl\"\r\n      fxFlex=\"80\"\r\n    >\r\n      <kkl-card-filter\r\n        class=\"kkl-filter-card\"\r\n        *ngFor=\"let filter of filters\"\r\n        [filter]=\"filter\"\r\n      ></kkl-card-filter>\r\n    </div>\r\n  </div>\r\n"
        },
        {
            "name": "FormAutocompleteComponent",
            "id": "component-FormAutocompleteComponent-cd05d33aa1573695331f0e25856ffecf",
            "file": "projects/lib-kakal-ui/src/lib/app/components/form/form-autocomplete/form-autocomplete.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "kkl-form-autocomplete",
            "styleUrls": [
                "./form-autocomplete.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-autocomplete.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "FormControl"
                },
                {
                    "name": "options$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "Observable<SelectOption[]>"
                },
                {
                    "name": "optionsSlot",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "literal type"
                },
                {
                    "name": "question",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "QuestionAutocompleteModel"
                }
            ],
            "outputsClass": [
                {
                    "name": "autocomplete",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "EventEmitter<FormControl>"
                },
                {
                    "name": "optionSelected",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "EventEmitter<MatAutocompleteSelectedEvent>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "error",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectOption[]",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onOptionSelected",
                    "args": [
                        {
                            "name": "event",
                            "type": "MatAutocompleteSelectedEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MatAutocompleteSelectedEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\r\nimport { Observable } from 'rxjs';\r\nimport { QuestionAutocompleteModel } from '../models/question-autocomplete';\r\nimport { SelectOption } from '../models/question-select.model';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'kkl-form-autocomplete',\r\n  templateUrl: './form-autocomplete.component.html',\r\n  styleUrls: ['./form-autocomplete.component.scss']\r\n})\r\n\r\nexport class FormAutocompleteComponent implements OnInit {\r\n\r\n  @Input() public question: QuestionAutocompleteModel;\r\n  @Input() public control: FormControl;\r\n  @Input() public options$: Observable<SelectOption[]>;\r\n  @Input() public optionsSlot: {};\r\n\r\n  public type: string;\r\n  public label: string;\r\n  public icon: string;\r\n  public options: SelectOption[];\r\n  public error: string = '';\r\n  public disabled: boolean;\r\n\r\n  @Output() autocomplete: EventEmitter<FormControl> = new EventEmitter();\r\n  @Output() optionSelected: EventEmitter<MatAutocompleteSelectedEvent> =\r\n    new EventEmitter();\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.label = this.question?.label || '';\r\n    this.icon = this.question?.icon || '';\r\n    this.options = this.question.options;\r\n  }\r\n\r\n  public onOptionSelected(event: MatAutocompleteSelectedEvent) {\r\n    this.optionSelected.emit(event);\r\n  }\r\n\r\n\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../styles/styles\";\r\n\r\nmat-form-field {\r\n  width: 100%;\r\n  font-size: 12px !important;\r\n}\r\n\r\n::ng-deep .mat-select-arrow {\r\n  opacity: 0;\r\n}\r\n\r\n@media screen and (max-width: 1024px) {\r\n  mat-form-field {\r\n    font-size: 9px !important;\r\n  }\r\n}\r\n\r\n",
                    "styleUrl": "./form-autocomplete.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 32
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-form-field [appearance]=\"disabled ? 'fill' : 'outline'\">\r\n  <mat-label>{{ label }}</mat-label>\r\n\r\n  <input\r\n    color=\"primary\"\r\n    type=\"text\"\r\n    matInput\r\n    [formControl]=\"control\"\r\n    [matAutocomplete]=\"auto\"\r\n  />\r\n  <mat-autocomplete\r\n    autoActiveFirstOption\r\n    #auto=\"matAutocomplete\"\r\n    (optionSelected)=\"onOptionSelected($event)\"\r\n  >\r\n    <mat-option\r\n      [disabled]=\"option.disabled\"\r\n      *ngFor=\"let option of options$ | async\"\r\n      [value]=\"option.value\"\r\n    >\r\n      <ng-container *ngIf=\"!optionsSlot\">\r\n        {{ option.label }}\r\n      </ng-container>\r\n      <ng-container *ngIf=\"optionsSlot\">\r\n        <ng-container\r\n          *ngTemplateOutlet=\"\r\n            optionsSlot[question.key];\r\n            context: { option }\r\n          \"\r\n        ></ng-container>\r\n      </ng-container>\r\n    </mat-option>\r\n  </mat-autocomplete>\r\n\r\n  <kkl-icon\r\n    *ngIf=\"icon\"\r\n    matSuffix\r\n    [color]=\"color || 'primary'\"\r\n    [key]=\"icon\"\r\n    [size]=\"1.8\"\r\n  ></kkl-icon>\r\n</mat-form-field>\r\n"
        },
        {
            "name": "FormautocompleteExComponent",
            "id": "component-FormautocompleteExComponent-fd02d069ad01c9dc3285eef03934e075",
            "file": "projects/lib-kakal-ui/src/lib/app/examples/formautocomplete-ex/formautocomplete-ex.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "kkl-formautocomplete-ex",
            "styleUrls": [
                "./formautocomplete-ex.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./formautocomplete-ex.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "SelectOption[]"
                },
                {
                    "name": "question",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "Question"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "options$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<SelectOption[]>",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "questionControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Question",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable, of } from 'rxjs';\r\nimport { SelectOption } from '../../components/form/models/question-select.model';\r\nimport {\r\n  FormService,\r\n  Question,\r\n} from '../../components/form/services/form.service';\r\n\r\n@Component({\r\n  selector: 'kkl-formautocomplete-ex',\r\n  templateUrl: './formautocomplete-ex.component.html',\r\n  styleUrls: ['./formautocomplete-ex.component.scss'],\r\n})\r\nexport class FormautocompleteExComponent implements OnInit {\r\n  @Input() public question: Question;\r\n  @Input() public options: SelectOption[];\r\n\r\n  public control: FormControl;\r\n  public questionControl: Question;\r\n  public options$: Observable<SelectOption[]>;\r\n\r\n  constructor(private formService: FormService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.questionControl = this.formService.setQuestion(this.question);\r\n    this.control = this.formService.getFieldControl(this.questionControl);\r\n    this.options$ = of(this.options);\r\n\r\n    \r\n\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "div.container {\r\n    height: 100%;\r\n  }\r\n  .form {\r\n    width: 25%;\r\n  }\r\n  ",
                    "styleUrl": "./formautocomplete-ex.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formService",
                        "type": "FormService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "formService",
                        "type": "FormService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n  <div class=\"form\" dir=\"rtl\">\r\n    <kkl-form-autocomplete\r\n      [question]=\"question\"\r\n      [control]=\"control\"\r\n      [options$]=\"options$\"\r\n    ></kkl-form-autocomplete>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "FormComponent",
            "id": "component-FormComponent-88ea18e6bf71d5678d8c365666031e09",
            "file": "projects/lib-kakal-ui/src/lib/app/components/form/form/form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "kkl-form",
            "styleUrls": [
                "./form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "editMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "boolean"
                },
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "QuestionGroupModel"
                },
                {
                    "name": "questions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "Question[]"
                },
                {
                    "name": "rowHeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "number"
                },
                {
                    "name": "slots",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "literal type"
                }
            ],
            "outputsClass": [
                {
                    "name": "register",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "EventEmitter<Register>"
                },
                {
                    "name": "submit",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "buttonCols",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | number",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "cols",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | number",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "grid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GridProps",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "gutter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "hasButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "questions$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<Question[]>",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "setGrid",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "setQuestions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { QuestionSelectModel } from '../models/question-select.model';\r\nimport { GridProps } from '../models/question.model';\r\nimport { QuestionGroupModel } from '../models/question-group.model';\r\nimport { FormGroup } from '@angular/forms';\r\nimport {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\nimport { Question } from '../services/form.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nexport interface Register {\r\n  form: FormGroup;\r\n  questions$?: BehaviorSubject<Question[]>;\r\n}\r\n\r\n@Component({\r\n  selector: 'kkl-form',\r\n  templateUrl: './form.component.html',\r\n  styleUrls: ['./form.component.scss'],\r\n})\r\nexport class FormComponent implements OnInit {\r\n  @Input() public group: QuestionGroupModel;\r\n  @Input() public questions: Question[];\r\n  @Input() public editMode: boolean;\r\n  @Input() public rowHeight: number;\r\n\r\n  @Input() public slots: {\r\n    button?: ElementRef;\r\n    group?: ElementRef;\r\n  };\r\n\r\n  @Output() register: EventEmitter<Register> = new EventEmitter();\r\n  @Output() submit: EventEmitter<any> = new EventEmitter();\r\n\r\n  public questions$: BehaviorSubject<Question[]>;\r\n  public formGroup: FormGroup;\r\n  public grid: GridProps;\r\n  public hasButton: boolean;\r\n  public cols: string | number;\r\n  public buttonCols: string | number;\r\n  public gutter: number;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    this.formGroup = this.group.formGroup;\r\n    this.setQuestions();\r\n    this.setGrid();\r\n\r\n    if (this.group.formGroup) {\r\n      this.register.emit({ form: this.formGroup, questions$: this.questions$ });\r\n    }\r\n\r\n    if (this.editMode) {\r\n      this.formGroup.disable();\r\n    }\r\n  }\r\n\r\n  private setQuestions() {\r\n    this.questions = this.questions || this.group.questions;\r\n    this.questions$ = new BehaviorSubject<Question[]>(this.questions);\r\n  }\r\n\r\n  private setGrid(): void {\r\n    this.grid = this.group.gridProps;\r\n    this.cols = this.group.gridProps?.cols || 1;\r\n    this.gutter = this.group.gridProps?.gutter || 1;\r\n    this.buttonCols = this.group.gridProps?.buttonCols || 1;\r\n    this.hasButton = this.group.hasButton || false;\r\n  }\r\n\r\n  public onSubmit() {\r\n    this.submit.emit(this.formGroup.value);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../styles/styles\";\r\n\r\n\r\nform,\r\nkkl-form-input {\r\n  width: 100%;\r\n  font-size: spacing(2);\r\n}\r\n\r\nmat-grid-tile.button-tile {\r\n  ::ng-deep div.mat-grid-tile-content {\r\n    align-items: start !important;\r\n    justify-content: start !important;\r\n  }\r\n}\r\n\r\n",
                    "styleUrl": "./form.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 46
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div fxLayout=\"column\" fxLayoutAlign=\"center center\" fxFill>\r\n  <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"formGroup\">\r\n    <mat-grid-list\r\n      [cols]=\"cols\"\r\n      [rowHeight]=\"(rowHeight || 9) + 'rem'\"\r\n      [gutterSize]=\"gutter + 'rem'\"\r\n      [dir]=\"'rtl'\"\r\n    >\r\n      <ng-container *ngFor=\"let question of questions$ | async\">\r\n        <ng-container [ngSwitch]=\"question.type\">\r\n          <!-- GROUP INPUT SECTION -->\r\n          <ng-container *ngSwitchCase=\"'group'\">\r\n            <kkl-form [group]=\"question.group\"></kkl-form>\r\n          </ng-container>\r\n\r\n          <!-- GROUP INPUT SECTION -->\r\n          <ng-container *ngSwitchCase=\"'custom'\">\r\n            <ng-container\r\n              *ngTemplateOutlet=\"\r\n                slots[question.key];\r\n                context: { question: this.question }\r\n              \"\r\n            >\r\n            </ng-container>\r\n          </ng-container>\r\n\r\n          <!-- DEFAULT INPUT -->\r\n          <ng-container *ngSwitchDefault>\r\n            <mat-grid-tile [colspan]=\"question?.gridProps?.fullWidth ? cols : question?.gridProps?.cols || 1\">\r\n              <kkl-form-input\r\n                [control]=\"formGroup.controls[question.key]\"\r\n                [question]=\"question\"\r\n              ></kkl-form-input>\r\n            </mat-grid-tile>\r\n\r\n            <mat-grid-tile\r\n              *ngIf=\"question?.gridProps?.offset\"\r\n              [colspan]=\"question?.gridProps?.offset\"\r\n            >\r\n            </mat-grid-tile>\r\n          </ng-container>\r\n        </ng-container>\r\n      </ng-container>\r\n\r\n      <mat-grid-tile *ngIf=\"hasButton\" [colspan]=\"buttonCols\">\r\n        <ng-container\r\n          *ngTemplateOutlet=\"\r\n            slots['button'];\r\n            context: { question: this.question }\r\n          \"\r\n        >\r\n        </ng-container>\r\n      </mat-grid-tile>\r\n    </mat-grid-list>\r\n  </form>\r\n</div>\r\n"
        },
        {
            "name": "FormExComponent",
            "id": "component-FormExComponent-05354122e8cc3eb75d230fa12bcffce3",
            "file": "projects/lib-kakal-ui/src/lib/app/examples/form-ex/form-ex.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "kkl-form-ex",
            "styleUrls": [
                "./form-ex.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-ex.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "multi",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean"
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "GroupOptions"
                },
                {
                    "name": "questions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "Question[]"
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QuestionGroupModel",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\nimport { GroupOptions, QuestionGroupModel } from '../../components/form/models/question-group.model';\r\nimport {\r\n  FormService,\r\n  Question,\r\n} from '../../components/form/services/form.service';\r\n\r\n@Component({\r\n  selector: 'kkl-form-ex',\r\n  templateUrl: './form-ex.component.html',\r\n  styleUrls: ['./form-ex.component.scss'],\r\n})\r\nexport class FormExComponent implements OnInit {\r\n  @Input() public questions: Question[];\r\n  @Input() public options: GroupOptions;\r\n  @Input() public width: string;\r\n  @Input() public multi: boolean;\r\n\r\n  public group: QuestionGroupModel;\r\n\r\n  constructor(private formService: FormService) {}\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.group = this.formService.createQuestionGroup({\r\n      key: '',\r\n      questions: this.questions,\r\n      options : this.options\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "div.container {\r\n  height: 100%;\r\n}\r\n.form {\r\n  // width: 30%;\r\n}\r\n\r\n",
                    "styleUrl": "./form-ex.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formService",
                        "type": "FormService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "formService",
                        "type": "FormService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div fxFill fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n  <div\r\n    [fxFlex]=\"multi ? '80' : '33'\"\r\n    fxLayout=\"column\"\r\n    fxLayoutAlign=\"center center\"\r\n  >\r\n    <div fxFill>\r\n      <kkl-form [group]=\"group\" [slots]=\"{button}\"> </kkl-form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #button>\r\n  <div fxFlex=\"100\">\r\n    <button fxFill mat-raised-button color=\"primary\">\r\n      <kkl-typography>לחץ</kkl-typography>\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n"
        },
        {
            "name": "FormGroupComponent",
            "id": "component-FormGroupComponent-183471cecf3b6eb66544a6887cd93fe6",
            "file": "projects/lib-kakal-ui/src/lib/app/components/form/form-group/form-group.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "kkl-form-group",
            "styleUrls": [
                "./form-group.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-group.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'kkl-form-group',\r\n  templateUrl: './form-group.component.html',\r\n  styleUrls: ['./form-group.component.scss']\r\n})\r\nexport class FormGroupComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./form-group.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>form-group works!</p>\r\n"
        },
        {
            "name": "FormInputComponent",
            "id": "component-FormInputComponent-e05cce32c74e036e59602adaee75c57d",
            "file": "projects/lib-kakal-ui/src/lib/app/components/form/form-input/form-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "kkl-form-input",
            "styleUrls": [
                "./form-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "apprence",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "MatFormFieldAppearance"
                },
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "FormControl"
                },
                {
                    "name": "question",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "QuestionBase"
                }
            ],
            "outputsClass": [
                {
                    "name": "autocomplete",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "EventEmitter<FormControl>"
                },
                {
                    "name": "optionSelected",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "EventEmitter<MatAutocompleteSelectedEvent>"
                },
                {
                    "name": "selected",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "EventEmitter<FormControl>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Palette",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "color$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<Palette>",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "controlType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ControlType",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "error",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "error$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<string>",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "gridProps",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GridProps",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "iconRotate",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "iconType",
                    "defaultValue": "'svg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectOption[]",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onAutocomplete",
                    "args": [
                        {
                            "name": "control",
                            "type": "FormControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "FormControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onOptionSelected",
                    "args": [
                        {
                            "name": "event",
                            "type": "MatAutocompleteSelectedEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MatAutocompleteSelectedEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSelectChange",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "setErrorMessage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "setIconColor",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "validate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { MessageService } from './../services/message.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { QuestionBase } from '../services/form.service';\r\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport {\r\n  QuestionSelectModel,\r\n  SelectOption,\r\n} from './../models/question-select.model';\r\nimport { ControlType, GridProps } from '../models/question.model';\r\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\r\nimport { MatFormFieldAppearance } from '@angular/material/form-field';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Palette } from 'projects/lib-kakal-ui/src/lib/styles/theme';\r\n\r\n@Component({\r\n  selector: 'kkl-form-input',\r\n  templateUrl: './form-input.component.html',\r\n  styleUrls: ['./form-input.component.scss'],\r\n})\r\nexport class FormInputComponent implements OnInit {\r\n  @Input() public question: QuestionBase;\r\n  @Input() public control: FormControl;\r\n  @Input() public apprence: MatFormFieldAppearance;\r\n\r\n  public controlType: ControlType;\r\n  public label: string;\r\n  public icon: string;\r\n  public options: SelectOption[];\r\n  public error: string = '';\r\n\r\n  public error$: BehaviorSubject<string>;\r\n  public color$: BehaviorSubject<Palette>;\r\n\r\n  public gridProps: GridProps;\r\n  public color: Palette;\r\n  public iconType: string = 'svg';\r\n  public iconRotate: number = 0;\r\n\r\n  @Output() public selected: EventEmitter<FormControl> = new EventEmitter();\r\n  @Output()\r\n  public optionSelected: EventEmitter<MatAutocompleteSelectedEvent> = new EventEmitter();\r\n  @Output() public autocomplete: EventEmitter<FormControl> = new EventEmitter();\r\n\r\n  constructor(private messageService: MessageService) {}\r\n\r\n  ngOnInit(): void {\r\n    const color: Palette = this.control.disabled ? 'disable' : 'primary';\r\n    this.color$ = new BehaviorSubject<Palette>(color);\r\n    this.error$ = new BehaviorSubject<string>('');\r\n    this.controlType = this.question?.controlType;\r\n    this.gridProps = this.question?.gridProps;\r\n    this.label = this.question?.label || '';\r\n    this.icon = this.question?.icon || '';\r\n\r\n    if (this.question instanceof QuestionSelectModel) {\r\n      this.options = this.question.options;\r\n    }\r\n  }\r\n\r\n  // private subscribeToControl() {\r\n  private setIconColor() {\r\n    if (this.control.disabled) {\r\n      this.color = 'disable';\r\n    } else if (this.control.errors) {\r\n      this.color = 'warn';\r\n    } else {\r\n      this.color = 'primary';\r\n    }\r\n  }\r\n\r\n  private setErrorMessage() {\r\n    this.error = this.messageService.getErrorMessage(this.control, this.label);\r\n    this.error$.next(this.error);\r\n\r\n    if (this.error) {\r\n      this.color$.next('warn');\r\n    } else {\r\n      this.color$.next('primary');\r\n    }\r\n  }\r\n\r\n  public validate() {\r\n    this.setErrorMessage();\r\n    this.setIconColor();\r\n  }\r\n\r\n  public onSelectChange() {\r\n    if (this.question instanceof QuestionSelectModel && this.question.onSelectChange) {\r\n      this.question.onSelectChange();\r\n    }\r\n    this.selected.emit(this.control);\r\n  }\r\n\r\n  public onAutocomplete(control: FormControl) {\r\n    this.autocomplete.emit(this.control);\r\n  }\r\n\r\n  public onOptionSelected(event: MatAutocompleteSelectedEvent) {\r\n    this.optionSelected.emit(event);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../styles/styles\";\r\n\r\nmat-form-field {\r\n  width: 100%;\r\n  font-size: 12px !important;\r\n}\r\n\r\n::ng-deep .mat-select-arrow {\r\n  opacity: 0;\r\n}\r\n\r\n@media screen and (max-width: 1024px) {\r\n  mat-form-field {\r\n    font-size: 9px !important;\r\n  }\r\n}\r\n",
                    "styleUrl": "./form-input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 42,
                "jsdoctags": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div>\r\n  <mat-form-field [appearance]=\"control.disabled ? 'fill' : 'outline'\">\r\n    <mat-label>{{ label }}</mat-label>\r\n\r\n    <ng-container [ngSwitch]=\"controlType\">\r\n      <ng-container *ngSwitchCase=\"'textarea'\">\r\n        <textarea\r\n          matInput\r\n          [rows]=\"gridProps.rows\"\r\n          [formControl]=\"control\"\r\n          [name]=\"question.key\"\r\n          (focusout)=\"validate()\"\r\n          #textarea\r\n        ></textarea>\r\n      </ng-container>\r\n\r\n      <ng-container *ngSwitchCase=\"'select'\">\r\n        <mat-select\r\n          [multiple]=\"question.multi\"\r\n          (selectionChange)=\"onSelectChange()\"\r\n          [formControl]=\"control\"\r\n          [attr.data-name]=\"question.key\"\r\n          (focusout)=\"validate()\"\r\n        >\r\n          <mat-option *ngFor=\"let option of options\" [value]=\"option.value\">\r\n            {{ option.label }}\r\n          </mat-option>\r\n        </mat-select>\r\n      </ng-container>\r\n\r\n      <ng-container *ngSwitchCase=\"'autocomplete'\">\r\n        <input\r\n          type=\"text\"\r\n          matInput\r\n          [formControl]=\"control\"\r\n          [matAutocomplete]=\"auto\"\r\n        />\r\n        <mat-autocomplete\r\n          autoActiveFirstOption\r\n          #auto=\"matAutocomplete\"\r\n          (optionSelected)=\"onOptionSelected($event)\"\r\n          [displayWith]=\"displayFn\"\r\n        >\r\n          <mat-option *ngFor=\"let option of options\" [value]=\"option.value\">\r\n            {{ option.label }}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n      </ng-container>\r\n\r\n      <ng-container *ngSwitchDefault>\r\n        <input\r\n          matInput\r\n          autocomplete=\"off\"\r\n          [formControl]=\"control\"\r\n          [name]=\"question.key\"\r\n          (focusout)=\"validate()\"\r\n          [type]=\"controlType\"\r\n          #input\r\n        />\r\n      </ng-container>\r\n    </ng-container>\r\n\r\n    <kkl-icon\r\n      variant=\"form\"\r\n      *ngIf=\"icon\"\r\n      matSuffix\r\n      [color]=\"color || 'primary'\"\r\n      [key]=\"icon\"\r\n    ></kkl-icon>\r\n\r\n    <mat-error>{{ error }}</mat-error>\r\n  </mat-form-field>\r\n</div>\r\n"
        },
        {
            "name": "FormRadioComponent",
            "id": "component-FormRadioComponent-b1de7596eddc8d88dad5c260afb464d4",
            "file": "projects/lib-kakal-ui/src/lib/app/components/form/form-radio/form-radio.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "kkl-form-radio",
            "styleUrls": [
                "./form-radio.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-radio.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "FormControl"
                },
                {
                    "name": "dark",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean"
                },
                {
                    "name": "question",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "QuestionRadio"
                }
            ],
            "outputsClass": [
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "Observable<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleChange",
                    "args": [
                        {
                            "name": "radio",
                            "type": "MatRadioChange",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "radio",
                            "type": "MatRadioChange",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { FormControl } from '@angular/forms';\r\nimport { Component, OnInit, Input, Output } from '@angular/core';\r\nimport { MatRadioChange } from '@angular/material/radio';\r\nimport { Observable } from 'rxjs';\r\nimport { QuestionRadio } from '../models/question-radio.model';\r\n\r\n@Component({\r\n  selector: 'kkl-form-radio',\r\n  templateUrl: './form-radio.component.html',\r\n  styleUrls: ['./form-radio.component.scss']\r\n})\r\nexport class FormRadioComponent implements OnInit {\r\n\r\n  @Input() public question: QuestionRadio\r\n  @Input() public control: FormControl\r\n  @Input() public dark: boolean\r\n\r\n  @Output() value: Observable<any>\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.value = this.control.valueChanges\r\n\r\n  }\r\n\r\n  public handleChange(radio: MatRadioChange) {\r\n    this.control.setValue(radio.value)\r\n\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../styles/styles\";\r\n\r\nmat-radio-group,\r\ndiv {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n::ng-deep span.mat-radio-label-content {\r\n  padding-right: spacing(2) !important;\r\n}\r\n",
                    "styleUrl": "./form-radio.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 18
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div dir=\"rtl\">\r\n  <mat-radio-group [formControl]=\"control\" [name]=\"question.key\" (change)=\"handleChange($event)\">\r\n    <div fxLayout=\"column\" fxLayoutGap=\"10px\" fxLayoutAlign=\"start start\">\r\n      <div fxLayout=\"row\" fxFlex=\"20\" fxLayoutAlign=\"end center\">\r\n        <label>\r\n          {{ question.label }}\r\n        </label>\r\n      </div>\r\n      <div fxLayout=\"row\" fxFlex=\"20\" class=\"radio-button\" fxLayoutAlign=\"space-between center\">\r\n        <mat-radio-button color=\"primary\" *ngFor=\"let option of question.options\" [value]=\"option.value\">{{\r\n          option.key }}\r\n        </mat-radio-button>\r\n      </div>\r\n    </div>\r\n  </mat-radio-group>\r\n</div>\r\n"
        },
        {
            "name": "FormUploadComponent",
            "id": "component-FormUploadComponent-5332dcbbac1c7c9bf716a5a2ff0c2ce1",
            "file": "projects/lib-kakal-ui/src/lib/app/components/form/form-upload/form-upload.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "kkl-form-upload",
            "styleUrls": [
                "./form-upload.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-upload.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "FormControl"
                },
                {
                    "name": "multi",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean"
                },
                {
                    "name": "question",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "QuestionBase"
                },
                {
                    "name": "questions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "Question[]"
                }
            ],
            "outputsClass": [
                {
                    "name": "fileChange",
                    "defaultValue": "new EventEmitter<File | string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "file",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "File | null",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "preview",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "emitFiles",
                    "args": [
                        {
                            "name": "event",
                            "type": "FileList",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'input', ['$event.target.files']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FileList",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "input",
                    "args": [
                        {
                            "name": "event",
                            "type": "FileList",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event.target.files"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, HostListener, Input, OnInit, Output } from '@angular/core';\r\nimport {  FormControl } from '@angular/forms';\r\nimport { Question, QuestionBase } from '../services/form.service';\r\n\r\n\r\n@Component({\r\n  selector: 'kkl-form-upload',\r\n  templateUrl: './form-upload.component.html',\r\n  styleUrls: ['./form-upload.component.scss']\r\n})\r\nexport class FormUploadComponent implements OnInit {\r\n\r\n  @Input() public question: QuestionBase;\r\n  @Input() public control: FormControl;\r\n  @Input() public questions: Question[];\r\n\r\n  public icon: string;\r\n  public label: string;\r\n  public disabled: boolean\r\n  public color: string;\r\n\r\n  public preview: string;\r\n  public file: File | null = null;\r\n\r\n\r\n  @Input() multi: boolean = true;\r\n\r\n  @Output() fileChange = new EventEmitter<File | string>();\r\n\r\n  @HostListener('input', ['$event.target.files']) emitFiles(event: FileList) {\r\n    this.file = event && event.item(0);\r\n    this.fileChange.emit(this.file);\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.label = this.question?.label || '';\r\n    this.icon = this.question?.icon || '';\r\n\r\n  }\r\n}\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../styles/styles\";\r\n\r\n\r\nbutton{\r\n    border:1px solid black;\r\n    width: 100%;\r\n    height: 40px;\r\n}\r\n",
                    "styleUrl": "./form-upload.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 33
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n<mat-form-field [appearance]=\"'outline'\">\r\n  <mat-label>{{label}}</mat-label>\r\n\r\n  <ngx-mat-file-input [formControl]=\"control\" [multiple]=\"multi\">\r\n    <mat-icon *ngIf=\"icon\" ngxMatFileInputIcon>{{icon}}</mat-icon>\r\n  </ngx-mat-file-input>\r\n\r\n</mat-form-field>\r\n"
        },
        {
            "name": "FormuploadExComponent",
            "id": "component-FormuploadExComponent-5adb92f8a3913b89c9228e5f0961c136",
            "file": "projects/lib-kakal-ui/src/lib/app/examples/formupload-ex/formupload-ex.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "kkl-formupload-ex",
            "styleUrls": [
                "./formupload-ex.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./formupload-ex.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "multi",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean"
                },
                {
                    "name": "questions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "Question[]"
                }
            ],
            "outputsClass": [
                {
                    "name": "fileChange",
                    "defaultValue": "new EventEmitter<File | string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "file",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "File | null",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "question",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Question",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "emitFiles",
                    "args": [
                        {
                            "name": "event",
                            "type": "FileList",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'change', ['$event.target.files']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FileList",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "change",
                    "args": [
                        {
                            "name": "event",
                            "type": "FileList",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event.target.files"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, HostListener, Input, OnInit, Output } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { FormService, Question } from '../../components/form/services/form.service';\r\n\r\n@Component({\r\n  selector: 'kkl-formupload-ex',\r\n  templateUrl: './formupload-ex.component.html',\r\n  styleUrls: ['./formupload-ex.component.scss']\r\n})\r\nexport class FormuploadExComponent implements OnInit {\r\n\r\n  public file: File | null = null;\r\n  public question: Question;\r\n  public control: FormControl;\r\n\r\n  @Input() multi: boolean;\r\n  @Input() questions: Question[]\r\n  @Output() fileChange = new EventEmitter<File | string>();\r\n\r\n  @HostListener('change', ['$event.target.files']) emitFiles(event: FileList) {\r\n    this.file = event && event.item(0);\r\n    this.fileChange.emit(this.file);\r\n  }\r\n\r\n\r\n  constructor(private formService: FormService) { }\r\n\r\n  ngOnInit(): void {\r\n    const questions = this.formService.setQuestionList(this.questions);\r\n    this.question = questions[0];\r\n    this.control = this.formService.getFieldControl(this.question);\r\n  }\r\n\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "div.container {\r\n    height: 100%;\r\n  }\r\n  .form {\r\n    width: 25%;\r\n  }\r\n  ",
                    "styleUrl": "./formupload-ex.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formService",
                        "type": "FormService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "formService",
                        "type": "FormService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n  <div class=\"form\">\r\n    <kkl-form-upload [question]=\"question\" [control]=\"control\" dir=\"rtl\"> </kkl-form-upload>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "IconComponent",
            "id": "component-IconComponent-1f689f2c91ad73c792ade895628101c5",
            "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "kkl-icon",
            "styleUrls": [
                "./icon.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "Palette"
                },
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "Palette"
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "Palette"
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "number"
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "IconType"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "palette",
                    "defaultValue": "palette",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Color",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "scale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setIcon",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "setSize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\nimport { Observable, BehaviorSubject, Subscription } from 'rxjs';\r\nimport { Color, palette, Palette } from '../../../styles/theme';\r\nimport { IconType } from './icon.model';\r\nimport { IconsService } from './icons.service';\r\n\r\n@Component({\r\n  selector: 'kkl-icon',\r\n  templateUrl: './icon.component.html',\r\n  styleUrls: ['./icon.component.scss'],\r\n})\r\nexport class IconComponent implements OnInit {\r\n\r\n\r\n  public palette: Color = palette;\r\n\r\n  @Input() public key: string;\r\n  @Input() public type: IconType\r\n  @Input() public size: number;\r\n\r\n  @Input() public color: Palette;\r\n  @Input() public activeColor: Palette;\r\n\r\n  @Input() public backgroundColor: Palette;\r\n\r\n  public scale: string;\r\n\r\n  private subscription: Subscription\r\n\r\n  constructor(private iconsService: IconsService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.setIcon();\r\n    this.setSize();\r\n    this.color = this.color || 'default'\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe()\r\n    }\r\n  }\r\n\r\n  private setIcon() {\r\n    const isSvg = this.iconsService.setIcon(this.key);\r\n    if (this.type) {\r\n      this.type = this.type;\r\n    } else {\r\n      this.type = isSvg ? 'svg' : 'mat';\r\n    }\r\n  }\r\n\r\n\r\n\r\n  private setSize() {\r\n    this.size = this.size;\r\n    this.scale = `scale(${this.size || 1})`;\r\n  }\r\n\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles/styles\";\r\n\r\n.icon-container {\r\n  height: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-self: center;\r\n  align-items: center;\r\n  align-content: center;\r\n\r\n}\r\n\r\nmat-icon {\r\n  width: 100%;\r\n}\r\n",
                    "styleUrl": "./icon.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "iconsService",
                        "type": "IconsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "iconsService",
                        "type": "IconsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"icon-container\">\r\n  <mat-icon appSize [size]=\"size\"\r\n    [ngStyle]=\"{'color' : palette[color], 'background' : backgroundColor }\" *ngIf=\"type === 'svg'\" [svgIcon]=\"key\">\r\n  </mat-icon>\r\n  <mat-icon [ngStyle]=\"{'color' : palette[color], 'transform' : scale}\" *ngIf=\"type === 'mat'\">{{key}}</mat-icon>\r\n</div>\r\n"
        },
        {
            "name": "InputExComponent",
            "id": "component-InputExComponent-0261e6578f7f806132b65d291f1430a5",
            "file": "projects/lib-kakal-ui/src/lib/app/examples/input-ex/input-ex.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-input-ex",
            "styleUrls": [
                "./input-ex.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input-ex.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "question",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "Question"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport {\r\n  FormService,\r\n  Question,\r\n} from '../../components/form/services/form.service';\r\n\r\n@Component({\r\n  selector: 'app-input-ex',\r\n  templateUrl: './input-ex.component.html',\r\n  styleUrls: ['./input-ex.component.scss'],\r\n})\r\nexport class InputExComponent implements OnInit {\r\n\r\n  @Input() public question : Question\r\n  public control: FormControl;\r\n\r\n  constructor(private formService: FormService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.question = this.formService.setQuestion(this.question);\r\n    this.control = this.formService.getFieldControl(this.question);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "div.container {\r\n  height: 100%;\r\n}\r\n\r\ndiv.input {\r\n  width: 50rem;\r\n}\r\n",
                    "styleUrl": "./input-ex.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formService",
                        "type": "FormService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "formService",
                        "type": "FormService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\" fxLayout=\"column\" fxLayoutAlign=\"center center\" >\r\n    <div class=\"input\" dir=\"rtl\">\r\n    <kkl-form-input [question]=\"question\" [control]=\"control\"></kkl-form-input>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "LayoutComponent",
            "id": "component-LayoutComponent-0367a51af5a8d58a3c4c44ccf889ca35",
            "file": "projects/lib-kakal-ui/src/lib/app/screens/layout/layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "kkl-layout",
            "styleUrls": [
                "./layout.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./layout.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hideWizardPath",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string[]"
                },
                {
                    "name": "logos",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "IconModel[]"
                },
                {
                    "name": "openIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "showStatusPath",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string[]"
                },
                {
                    "name": "statusStepWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentPath$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string>",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "show$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "wizard$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "findPath",
                    "args": [
                        {
                            "name": "list",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "list",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleState",
                    "args": [
                        {
                            "name": "list",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "list",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { IconModel } from '../../components/icon/icon.model';\r\nimport { LayoutService } from './layout.service';\r\n\r\n@Component({\r\n  selector: 'kkl-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.scss']\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n\r\n  @Input() public openIcon: string;\r\n  @Input() public statusStepWidth: number;\r\n  @Input() public logos: IconModel[];\r\n  @Input() public hideWizardPath: string[];\r\n  @Input() public showStatusPath: string[];\r\n\r\n  public currentPath$: Observable<string>;\r\n  public wizard$: Observable<boolean>;\r\n  public show$: Observable<boolean>;\r\n\r\n  constructor(private layoutService: LayoutService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.currentPath$ = this.layoutService.getCurrentPathObs();\r\n    this.show$ = this.handleState(this.showStatusPath);\r\n    this.wizard$ = this.handleState(this.hideWizardPath);\r\n  }\r\n\r\n  private handleState(list: string[]) {\r\n    return this.currentPath$.pipe(\r\n      map((path: string) => {\r\n        return this.findPath(list, path);\r\n      })\r\n    );\r\n  }\r\n\r\n  private findPath(list: any[], value: string): boolean {\r\n    return !!list.find((path: string) => path == value);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles/styles\";\r\n\r\n\r\n.sidenav-container {\r\n  height: 100%;\r\n\r\n}\r\n\r\nmat-sidenav-content {\r\n  margin: 0px !important;\r\n  overflow-x: hidden;\r\n}\r\n\r\nmat-sidenav {\r\n\r\n  &.menu {\r\n    width: 246px;\r\n    top: $toolbar-height;\r\n    height: $content-height;\r\n    z-index: 100;\r\n\r\n\r\n    div.menu-container {\r\n      height: inherit;\r\n      padding-right : spacing(1);\r\n    }\r\n\r\n  }\r\n\r\n  &.wizard {\r\n    background-color: transparent !important;\r\n    width: 80px;\r\n    height: 100%;\r\n    border: none;\r\n\r\n    div.stepper-container {\r\n      height: 100%;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n",
                    "styleUrl": "./layout.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-sidenav-container class=\"sidenav-container\">\r\n  <mat-sidenav-content>\r\n    <kkl-navbar\r\n      [logos]=\"logos\"\r\n      [openIcon]=\"openIcon\"\r\n      [statusStepWidth]=\"statusStepWidth\"\r\n      (menuToggle)=\"menuDrawer.toggle()\"\r\n      [show$]=\"show$\"\r\n    ></kkl-navbar>\r\n    <mat-sidenav\r\n      class=\"wizard\"\r\n      opened=\"true\"\r\n      mode=\"side\"\r\n      position=\"start\"\r\n      *ngIf=\"!(wizard$ | async)\"\r\n    >\r\n      <div\r\n        class=\"stepper-container\"\r\n        fxLayout=\"column\"\r\n        fxLayoutAlign=\"center center\"\r\n      >\r\n        <ng-content select=\"[wizard]\"></ng-content>\r\n      </div>\r\n    </mat-sidenav>\r\n\r\n    <mat-sidenav #menuDrawer class=\"menu\" mode=\"side\" position=\"end\">\r\n      <div class=\"menu-container\" fxLayout=\"column\" fxLayoutAlign=\"start end\">\r\n        <ng-content select=\"[menu]\"></ng-content>\r\n      </div>\r\n    </mat-sidenav>\r\n\r\n    <ng-content></ng-content>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n"
        },
        {
            "name": "LayoutExComponent",
            "id": "component-LayoutExComponent-6397364667ba6dbcd3ff579b594c646f",
            "file": "projects/lib-kakal-ui/src/lib/app/examples/layout-ex/layout-ex.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-layout-ex",
            "styleUrls": [
                "./layout-ex.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./layout-ex.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "logos",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "IconModel[]"
                },
                {
                    "name": "menu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "MenuModel[]"
                },
                {
                    "name": "projectPrefix",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "CardStepModel[]"
                },
                {
                    "name": "steps",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "CardStepModel[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "direction",
                    "defaultValue": "'column'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StepperDirection",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "headers",
                    "defaultValue": "{ lands: 'מקרקעין', neches: 'מנהלת ספר נכסים' }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "hideWizardPath",
                    "defaultValue": "['results', this.projectPrefix]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "menu$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<MenuModel[]>",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "openIcon",
                    "defaultValue": "'treegradientlands'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "pathSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "showStatusPath",
                    "defaultValue": "[this.projectPrefix, 'screen-layout--with-wizard']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "steps$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<CardStepModel[]>",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onChangeMenu",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 154,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onChangeModule",
                    "args": [
                        {
                            "name": "step",
                            "type": "CardStepModel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 149,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "step",
                            "type": "CardStepModel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setCurrentPath",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "setHeaders",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "setMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 122,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "setNavbar",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "setWizard",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 105,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "subscribeToRouter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, Input, OnInit } from '@angular/core';\r\nimport { Subscription, Observable, of } from 'rxjs';\r\nimport { distinctUntilChanged, map, switchMap } from 'rxjs/operators';\r\nimport {\r\n  CardStepModel,\r\n  StepperDirection,\r\n} from '../../components/cards/card-step/card-step.model';\r\nimport { IconModel } from '../../components/icon/icon.model';\r\nimport { MenuModel } from '../../components/menu/menu.model';\r\nimport { MenuService } from '../../components/menu/menu.service';\r\nimport { NavbarService } from '../../components/navbar/navbar.service';\r\nimport { LayoutService } from '../../screens/layout/layout.service';\r\nimport { RouterService } from '../../utilities/services/route.service';\r\n\r\n@Component({\r\n  selector: 'app-layout-ex',\r\n  templateUrl: './layout-ex.component.html',\r\n  styleUrls: ['./layout-ex.component.scss'],\r\n})\r\nexport class LayoutExComponent implements OnInit {\r\n  @Input() public projectPrefix: string = '';\r\n  @Input() public logos: IconModel[];\r\n  @Input() public status: CardStepModel[];\r\n  @Input() public steps: CardStepModel[];\r\n  @Input() public menu: MenuModel[];\r\n\r\n  // path \r\n  private pathSubscription: Subscription;\r\n\r\n  // NAVBAR SECTION\r\n  private headers = { lands: 'מקרקעין', neches: 'מנהלת ספר נכסים' };\r\n  public openIcon: string = 'treegradientlands';\r\n  public showStatusPath: string[] = [this.projectPrefix, 'screen-layout--with-wizard'];\r\n\r\n  // WIZARD SECTION\r\n  public steps$: Observable<CardStepModel[]>;\r\n  public direction: StepperDirection = 'column';\r\n  public hideWizardPath: string[] = ['results', this.projectPrefix];\r\n\r\n  // MENU SECTION\r\n  public menu$: Observable<MenuModel[]>;\r\n\r\n  constructor(\r\n    private menuService: MenuService,\r\n    private navbarService: NavbarService,\r\n    private layoutService: LayoutService,\r\n    private routerService: RouterService\r\n  ) {}\r\n\r\n  // ROUTE METHODS SECTION\r\n  private setCurrentPath() {\r\n    // const path = this.routerService.getCurrentPath();\r\n    // this.layoutService.emitCurrentPath(path);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setCurrentPath();\r\n    this.setNavbar();\r\n    // this.steps$ = this.setWizard();\r\n    // this.menu$ = this.setMenu();\r\n\r\n    if (this.steps) {\r\n      this.steps$ = of(this.steps);\r\n    }\r\n    if (this.menu) {\r\n      this.menu$ = of(this.menu);\r\n    }\r\n    this.subscribeToRouter();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.pathSubscription) {\r\n      this.pathSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private setNavbar() {\r\n    this.navbarService.setHeaders(this.headers);\r\n\r\n    if (this.status) {\r\n      this.navbarService.emitStatus(this.status);\r\n    }\r\n\r\n    this.navbarService.setHeadersObs(of('lands'));\r\n    this.logos = this.logos;\r\n  }\r\n\r\n  private setHeaders() {\r\n    // return this.routerService.getModulePrefixObs().pipe(\r\n    //   distinctUntilChanged(),\r\n    //   map((path: string) => this.headers[path])\r\n    // );\r\n  }\r\n\r\n  private subscribeToRouter() {\r\n    // this.pathSubscription = this.routerService\r\n    //   .getLastPathObs()\r\n    //   .subscribe((path: string) => {\r\n    //     path === this.projectPrefix && this.navbarService.emitTitle(path);\r\n    //     this.layoutService.emitCurrentPath(path);\r\n    //     this.routerService.currentPath$.next(path);\r\n    //   });\r\n  }\r\n\r\n  private setWizard() {\r\n    // return this.routerService.getModulePrefixObs().pipe(\r\n    //   map((path: string) => {\r\n    //     const steps = this.steps;\r\n    //     steps.map((step) => {\r\n    //       if (step.isActive) {\r\n    //         step.unactive();\r\n    //       }\r\n    //       if (step.path === path) {\r\n    //         step.active();\r\n    //       }\r\n    //     });\r\n    //     return steps;\r\n    //   })\r\n    // );\r\n  }\r\n\r\n  private setMenu() {\r\n    // const modulePath$ = this.routerService.getModulePrefixObs();\r\n    // const lastPath$ = this.layoutService.getCurrentPathObs();\r\n    // return modulePath$.pipe(\r\n    //   switchMap((modulePath: string) => {\r\n    //     return lastPath$.pipe(\r\n    //       map((path: string) => {\r\n    //         const menu = this.menuService.setMenu(\r\n    //           this.menu,\r\n    //           modulePath,\r\n    //           'path',\r\n    //           path\r\n    //         );\r\n    //         return menu;\r\n    //       })\r\n    //     );\r\n    //   })\r\n    // );\r\n    // return path$.pipe(\r\n    //   // distinctUntilChanged(),\r\n    //   map((path: string) => {\r\n    //     console.log(path)\r\n    //     return this.menuService.setList(this.menuService.getMenu(), 'path', path);\r\n    //   })\r\n    // )\r\n  }\r\n\r\n  public onChangeModule(step: CardStepModel) {\r\n    // const path: string = `${this.projectPrefix}/${step.path}`;\r\n    // this.routerService.navigate(path);\r\n  }\r\n\r\n  public onChangeMenu(path: string) {\r\n    // path = `${this.projectPrefix}/${path}`;\r\n    // this.routerService.navigate(path);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "kkl-layout {\r\n  width: 100%;\r\n  height: 100;\r\n  background-color: lightgray\r\n}\r\n\r\nkkl-stepper {\r\n  background-color: color(paper);\r\n  box-shadow: -3px 0px 12px #00000029;\r\n  padding: spacing(1) 0 spacing(1) 0;\r\n}\r\n\r\nkkl-menu {\r\n  width: 100%;\r\n}\r\n",
                    "styleUrl": "./layout-ex.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "menuService",
                        "type": "MenuService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "navbarService",
                        "type": "NavbarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "routerService",
                        "type": "RouterService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 41,
                "jsdoctags": [
                    {
                        "name": "menuService",
                        "type": "MenuService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "navbarService",
                        "type": "NavbarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "routerService",
                        "type": "RouterService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<kkl-layout\r\n  [logos]=\"logos\"\r\n  [openIcon]=\"openIcon\"\r\n  [statusStepWidth]=\"3\"\r\n  [hideWizardPath]=\"hideWizardPath\"\r\n  [showStatusPath]=\"showStatusPath\"\r\n>\r\n  <kkl-stepper\r\n    class=\"mat-elevation-z6\"\r\n    wizard\r\n    [steps$]=\"steps$\"\r\n    [direction]=\"direction\"\r\n    (changStep)=\"onChangeModule($event)\"\r\n  >\r\n  </kkl-stepper>\r\n  <kkl-menu (changePath)=\"onChangeMenu($event)\" menu [menu$]=\"menu$\">\r\n  </kkl-menu>\r\n  <ng-content></ng-content>\r\n</kkl-layout>\r\n"
        },
        {
            "name": "ListItemComponent",
            "id": "component-ListItemComponent-e9bda018c41053eca8f2d0a3d232a62a",
            "file": "projects/lib-kakal-ui/src/lib/app/components/list-item/list-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "kkl-list-item",
            "styleUrls": [
                "./list-item.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./list-item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'kkl-list-item',\r\n  templateUrl: './list-item.component.html',\r\n  styleUrls: ['./list-item.component.scss']\r\n})\r\nexport class ListItemComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./list-item.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>list-item works!</p>\r\n"
        },
        {
            "name": "MenuComponent",
            "id": "component-MenuComponent-d75e0ada1d02629e44635f0e15f6a5f3",
            "file": "projects/lib-kakal-ui/src/lib/app/components/menu/menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "kkl-menu",
            "styleUrls": [
                "./menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hasLogin",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean"
                },
                {
                    "name": "menu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "MenuModel[]"
                },
                {
                    "name": "menu$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "Observable<MenuModel[]>"
                }
            ],
            "outputsClass": [
                {
                    "name": "changePath",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter<string>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "logoutItem",
                    "defaultValue": "new MenuItemModel({\r\n    label: 'יציאה',\r\n    isActive: false,\r\n    path: '',\r\n    svgUrl: 'logout',\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItemModel",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onLinkClick",
                    "args": [
                        {
                            "name": "item",
                            "type": "MenuItemModel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "modulePrefix",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "MenuItemModel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "modulePrefix",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { MenuItemModel } from '../menu-item/menu-item.model';\r\nimport { MenuModel } from './menu.model';\r\n\r\n@Component({\r\n  selector: 'kkl-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.scss'],\r\n})\r\nexport class MenuComponent {\r\n\r\n  @Input() public menu: MenuModel[];\r\n  @Input() public menu$: Observable<MenuModel[]>;\r\n  @Input() public hasLogin: boolean = true\r\n\r\n  public logoutItem: MenuItemModel = new MenuItemModel({\r\n    label: 'יציאה',\r\n    isActive: false,\r\n    path: '',\r\n    svgUrl: 'logout',\r\n  });\r\n  @Output() changePath: EventEmitter<string> = new EventEmitter();\r\n\r\n  ngOnInit() {\r\n    this.menu$ = this.menu$ || of(this.menu);\r\n  }\r\n\r\n\r\n  // UPDATE METHOD WHEN CLICK ON STEP\r\n  public onLinkClick(item: MenuItemModel, modulePrefix: string) {\r\n    if (!item.isActive) {\r\n      const path = item.path === modulePrefix ? item.path : `${modulePrefix}/${item.path}`;\r\n      this.changePath.emit(path)\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles/styles\";\r\n\r\n::ng-deep mat-accordion.menu {\r\n  width: inherit;\r\n\r\n  mat-expansion-panel-header {\r\n    padding-right: 0px;\r\n    width: inherit;\r\n    height: 4rem !important;\r\n  }\r\n\r\n  div.mat-expansion-panel-body {\r\n    padding: 0px !important;\r\n  }\r\n\r\n  ::ng-deep span.mat-expansion-indicator {\r\n    display: none;\r\n  }\r\n}\r\n",
                    "styleUrl": "./menu.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"links themed-element\" [dir]=\"'rtl'\">\r\n  <kkl-card-user></kkl-card-user>\r\n  <mat-accordion class=\"menu\">\r\n    <mat-expansion-panel\r\n      class=\"mat-elevation-z0\"\r\n      *ngFor=\"let list of (menu$ | async); let i = index\"\r\n    >\r\n      <mat-expansion-panel-header *ngIf=\"list.label\">\r\n        <div mat-subheader>\r\n          <kkl-typography variant=\"button\" color=\"primary\" [bold]=\"600\">\r\n            {{ list.label }}\r\n          </kkl-typography>\r\n        </div>\r\n      </mat-expansion-panel-header>\r\n      <mat-list>\r\n        <kkl-menu-item\r\n          *ngFor=\"let link of list?.links; let i = index\"\r\n          [link]=\"link\"\r\n          (click)=\"onLinkClick(link, list.prefix)\"\r\n        ></kkl-menu-item>\r\n      </mat-list>\r\n    </mat-expansion-panel>\r\n  </mat-accordion>\r\n  <mat-list>\r\n    <mat-list-item appButton>\r\n      <kkl-icon color=\"primary\" mat-list-icon [key]=\"logoutItem.svgUrl\"></kkl-icon>\r\n      <div class=\"logout\" mat-line>\r\n        <kkl-typography variant=\"button\" color=\"primary\" [bold]=\"600\">\r\n          {{ logoutItem.label }}\r\n        </kkl-typography>\r\n      </div>\r\n    </mat-list-item>\r\n  </mat-list>\r\n</div>\r\n"
        },
        {
            "name": "MenuItemComponent",
            "id": "component-MenuItemComponent-9c556026280ccda4c682ea8083fdc713",
            "file": "projects/lib-kakal-ui/src/lib/app/components/menu-item/menu-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "kkl-menu-item",
            "styleUrls": [
                "./menu-item.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./menu-item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "link",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "MenuItemModel"
                }
            ],
            "outputsClass": [
                {
                    "name": "click",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "active$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onLinkClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { MenuItemModel } from './menu-item.model';\r\n\r\n@Component({\r\n  selector: 'kkl-menu-item',\r\n  templateUrl: './menu-item.component.html',\r\n  styleUrls: ['./menu-item.component.scss']\r\n})\r\nexport class MenuItemComponent implements OnInit {\r\n\r\n  @Input() public link: MenuItemModel;\r\n\r\n  public active$: Observable<boolean>;\r\n\r\n  @Output() click: EventEmitter<void> = new EventEmitter();\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.active$ = this.link.getActiveObs();\r\n  }\r\n\r\n  public onLinkClick() {\r\n    this.click.emit();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles/styles\";\r\n\r\nmat-list-item {\r\n  height: 4rem !important;\r\n  font-size: 1.4rem !important;\r\n\r\n  &.active {\r\n    background-color: color(primary);\r\n    border-top-left-radius: 50px;\r\n    border-bottom-left-radius: 50px;\r\n    color: color(paper) !important;\r\n    width: 90%;\r\n  }\r\n}\r\n",
                    "styleUrl": "./menu-item.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 16
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-list-item\r\n  appButton\r\n  [ngClass]=\"{ active: (active$ | async) }\"\r\n  (click)=\"onLinkClick()\"\r\n>\r\n  <mat-icon class=\"mat-icon-rtl-mirror\" mat-list-icon>{{\r\n    link.svgUrl\r\n  }}</mat-icon>\r\n  <div mat-line>\r\n    {{ link.label }}\r\n  </div>\r\n</mat-list-item>\r\n"
        },
        {
            "name": "NavbarBottomComponent",
            "id": "component-NavbarBottomComponent-457eb5db7b58b5ad215b522d8d7bbf5a",
            "file": "projects/lib-kakal-ui/src/lib/app/components/navbar-bottom/navbar-bottom.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "kkl-navbar-bottom",
            "styleUrls": [
                "./navbar-bottom.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./navbar-bottom.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "buttonSlots",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "ElementRef"
                },
                {
                    "name": "hasNext",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean"
                },
                {
                    "name": "hasSave",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean"
                },
                {
                    "name": "text",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "next",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter"
                },
                {
                    "name": "previous",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                },
                {
                    "name": "save",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onNext",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "onPrevious",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "onSave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'kkl-navbar-bottom',\r\n  templateUrl: './navbar-bottom.component.html',\r\n  styleUrls: ['./navbar-bottom.component.scss']\r\n})\r\nexport class NavbarBottomComponent implements OnInit {\r\n\r\n  @Input() text: string = '';\r\n  @Input() hasNext: boolean;\r\n  @Input() hasSave: boolean;\r\n  @Input() buttonSlots: ElementRef;\r\n\r\n  @Output() previous = new EventEmitter();\r\n  @Output() next = new EventEmitter();\r\n  @Output() save = new EventEmitter();\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.hasSave)\r\n    console.log(this.hasNext)\r\n  }\r\n\r\n  public onPrevious(): void {\r\n    this.previous.emit();\r\n  }\r\n\r\n  public onNext(): void {\r\n    this.next.emit();\r\n  }\r\n\r\n  public onSave(): void {\r\n    this.save.emit();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles/styles\";\r\n\r\nmat-toolbar {\r\n  padding-left: spacing(5);\r\n  padding-right: spacing(5);\r\n}\r\n\r\ndiv {\r\n  height: 100%;\r\n}\r\n\r\nkkl-icon {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\nbutton.prev {\r\n  background-color: color(paper) !important;\r\n}\r\n",
                    "styleUrl": "./navbar-bottom.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 17
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-toolbar fxLayout=\"row\" fxLayoutAlign=\" center\" fxFill dir=\"rtl\">\r\n  <div fxFlex=\"33\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n    <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n      <button\r\n        class=\"prev mat-elevation-z1\"\r\n        mat-icon-button\r\n        (click)=\"onPrevious()\"\r\n      >\r\n        <kkl-icon type=\"mat\" key=\"chevron_right\"></kkl-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div fxFlex=\"33\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n    <kkl-icon type=\"svg\" [size]=\"20\" key=\"bottomTreeLands\"></kkl-icon>\r\n  </div>\r\n  <div\r\n    fxFlex=\"33\"\r\n    fxLayoutGap=\"2rem\"\r\n    fxLayout=\"row\"\r\n    [fxLayoutAlign]=\"'end center'\"\r\n  >\r\n    <button\r\n      *ngIf=\"hasSave\"\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"onSave()\"\r\n    >\r\n      <kkl-typography color=\"paper\"> שמירה </kkl-typography>\r\n    </button>\r\n    <ng-container>\r\n      <ng-template *ngTemplateOutlet=\"buttonSlots\"></ng-template>\r\n    </ng-container>\r\n    <button\r\n      *ngIf=\"hasNext\"\r\n      mat-raised-button\r\n      [disabled]=\"!hasNext\"\r\n      color=\"primary\"\r\n      (click)=\"onNext()\"\r\n    >\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n        <kkl-typography color=\"paper\"> {{ text || \"המשך\" }} </kkl-typography>\r\n        <kkl-icon\r\n          [color]=\"hasNext ? 'paper' : 'disable'\"\r\n          type=\"mat\"\r\n          key=\"chevron_left\"\r\n        ></kkl-icon>\r\n      </div>\r\n    </button>\r\n  </div>\r\n</mat-toolbar>\r\n"
        },
        {
            "name": "NavbarBottomExComponent",
            "id": "component-NavbarBottomExComponent-812a71273fcd8bf9c3fd5fe1604c54d5",
            "file": "projects/lib-kakal-ui/src/lib/app/examples/navbar-bottom-ex/navbar-bottom-excomponent.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-navbar-bottom-ex",
            "styleUrls": [
                "./navbar-bottom-ex.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./navbar-bottom-ex.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "custom",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean"
                },
                {
                    "name": "hasNext",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "boolean"
                },
                {
                    "name": "hasSave",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navbar-bottom-ex',\r\n  templateUrl: './navbar-bottom-ex.component.html',\r\n  styleUrls: ['./navbar-bottom-ex.component.scss'],\r\n})\r\nexport class NavbarBottomExComponent {\r\n  @Input() public hasNext: boolean;\r\n  @Input() public hasSave: boolean;\r\n  @Input() public custom: boolean;\r\n\r\n  \r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "div {\r\n  width :100%;\r\n  height: 10rem;\r\n  position:fixed;\r\n  bottom: 0;\r\n}\r\n",
                    "styleUrl": "./navbar-bottom-ex.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div>\r\n  <kkl-navbar-bottom\r\n    *ngIf=\"!custom\"\r\n    [hasNext]=\"hasNext\"\r\n    [hasSave]=\"hasSave\"\r\n  ></kkl-navbar-bottom>\r\n  <kkl-navbar-bottom\r\n    *ngIf=\"custom\"\r\n    [hasNext]=\"hasNext\"\r\n    [hasSave]=\"hasSave\"\r\n    [buttonSlots]=\"button\"\r\n  ></kkl-navbar-bottom>\r\n</div>\r\n\r\n<ng-template #button>\r\n  <button type=\"button\" mat-raised-button>ng-template bottom</button>\r\n</ng-template>\r\n"
        },
        {
            "name": "NavbarComponent",
            "id": "component-NavbarComponent-d6599f4aeacbde8bbc01aa6614badf40",
            "file": "projects/lib-kakal-ui/src/lib/app/components/navbar/navbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "kkl-navbar",
            "styleUrls": [
                "./navbar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./navbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "logos",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "IconModel[]"
                },
                {
                    "name": "openIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "show$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "Observable<boolean>"
                },
                {
                    "name": "statusStepWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "number"
                }
            ],
            "outputsClass": [
                {
                    "name": "menuToggle",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "closeLabel",
                    "defaultValue": "'סגור תפריט'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "openLabel",
                    "defaultValue": "'תפריט'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "status$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<CardStepModel[]>",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "title$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string>",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { CardStepModel } from '../cards/card-step/card-step.model';\r\nimport { IconModel } from '../icon/icon.model';\r\nimport { NavbarService } from './navbar.service';\r\n\r\n@Component({\r\n  selector: 'kkl-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss'],\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n\r\n  @Input() public openIcon: string;\r\n  @Input() public statusStepWidth: number;\r\n  @Input() public logos: IconModel[];\r\n  @Input() public show$: Observable<boolean>;\r\n\r\n  public title$: Observable<string>;\r\n  public status$: Observable<CardStepModel[]>;\r\n\r\n  public isOpen: boolean = false;\r\n  public openLabel: string = 'תפריט';\r\n  public closeLabel: string = 'סגור תפריט';\r\n\r\n  @Output() menuToggle = new EventEmitter();\r\n\r\n  constructor(private navbarService : NavbarService) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.title$ = this.navbarService.getHeadersObs()\r\n    this.status$ = this.navbarService.getStatusObs();\r\n  }\r\n\r\n    public toggleMenu() {\r\n    this.isOpen = !this.isOpen;\r\n    this.menuToggle.emit();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles/styles\";\r\n\r\nkkl-card-status {\r\n  width: 100%;\r\n}\r\n\r\ndiv {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.navbar {\r\n  height: $toolbar-height;\r\n  backdrop-filter: blur(15px) saturate(70%) contrast(70%) brightness(130%);\r\n  background-color: color(paper) !important;\r\n  box-sizing: border-box;\r\n}\r\n",
                    "styleUrl": "./navbar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "navbarService",
                        "type": "NavbarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "navbarService",
                        "type": "NavbarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-toolbar dir=\"rtl\" class=\"navbar mat-elevation-z4\" xLayout=\"row\" fxLayoutAlign=\"start center\">\r\n  <!-- toggle menu button -->\r\n  <div fxLayout=\"column\" fxLayoutAlign=\"center center\" fxFlex=\"5\" appUnderline appButton (click)=\"toggleMenu()\">\r\n    <div fxFlex=\"40\">\r\n      <kkl-icon *ngIf=\"!isOpen\" type=\"svg\" key=\"tree\" color=\"primary\" [size]=\"4\"></kkl-icon>\r\n      <kkl-icon *ngIf=\"isOpen\" type=\"svg\" [key]=\"openIcon\" color=\"primary\" [size]=\"4\"></kkl-icon>\r\n    </div>\r\n    <div fxFlex=\"10\" fxLayout=\"column\" fxLayoutAlign=\"start center\">\r\n      <kkl-typography [size]=\"1\" color=\"primary\">\r\n        {{ isOpen ? closeLabel : openLabel }}\r\n      </kkl-typography>\r\n    </div>\r\n  </div>\r\n\r\n  <div fxLayout=\"column\" fxLayoutAlign=\"center start\" fxFlex=\"10\">\r\n    <kkl-typography [size]=\"2.4\">\r\n      {{ title$ | async }}\r\n    </kkl-typography>\r\n  </div>\r\n\r\n  <!-- main navbar links -->\r\n  <div fxFlex=\"grow\">\r\n    <div class=\"status-container\" fxLayoutAlign=\"center center\" *ngIf=\"show$ | async\">\r\n\r\n      <kkl-stepper direction=\"row\" [steps$]=\"status$\" [stepWidth]=\"statusStepWidth\"></kkl-stepper>\r\n    </div>\r\n  </div>\r\n\r\n  <div fxFlex></div>\r\n\r\n  <!-- left side logo -->\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"end center\" class=\"logo-container\" fxFlex=\"10\">\r\n    <div *ngFor=\"let logo of logos\">\r\n      <kkl-icon [key]=\"logo.key\" [size]=\"logo.size\"></kkl-icon>\r\n    </div>\r\n  </div>\r\n</mat-toolbar>\r\n"
        },
        {
            "name": "NavbarExComponent",
            "id": "component-NavbarExComponent-0a3a40a7c402ece3603044f73bdf84d8",
            "file": "projects/lib-kakal-ui/src/lib/app/examples/navbar-ex/navbar-ex.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-navbar-ex",
            "styleUrls": [
                "./navbar-ex.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./navbar-ex.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "direction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "StepperDirection"
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "CardStepModel[]"
                },
                {
                    "name": "stepWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "headers",
                    "defaultValue": "{ lands: 'מקרקעין', neches: 'מנהלת ספר נכסים' }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "steps$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<CardStepModel[]>",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport {\r\n  CardStepModel,\r\n  StepperDirection,\r\n} from '../../components/cards/card-step/card-step.model';\r\nimport { NavbarService } from '../../components/navbar/navbar.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar-ex',\r\n  templateUrl: './navbar-ex.component.html',\r\n  styleUrls: ['./navbar-ex.component.scss'],\r\n})\r\nexport class NavbarExComponent {\r\n\r\n  private headers = { lands: 'מקרקעין', neches: 'מנהלת ספר נכסים' };\r\n\r\n  constructor(private navbarService: NavbarService) {}\r\n\r\n  @Input() public status: CardStepModel[];\r\n  @Input() public direction: StepperDirection;\r\n  @Input() public stepWidth: number;\r\n\r\n  public steps$: Observable<CardStepModel[]>;\r\n  ngOnInit() {\r\n    this.steps$ = of(this.status);\r\n    this.navbarService.setHeaders(this.headers);\r\n    this.navbarService.setHeadersObs(of('lands'));\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n    height: 100%;\r\n  }\r\n  \r\n  div {\r\n    height: 100%;\r\n  }\r\n  \r\n  .wizard {\r\n    height: 100%;\r\n    width: 100px;\r\n  }\r\n  ",
                    "styleUrl": "./navbar-ex.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "navbarService",
                        "type": "NavbarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "navbarService",
                        "type": "NavbarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<kkl-navbar></kkl-navbar>\r\n"
        },
        {
            "name": "PaginationComponent",
            "id": "component-PaginationComponent-79b84af7c725c744b37d4646bebde227",
            "file": "projects/lib-kakal-ui/src/lib/app/components/pagination/pagination.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "kkl-pagination",
            "styleUrls": [
                "./pagination.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./pagination.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "maxSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "number"
                },
                {
                    "name": "pagination",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "PaginationInstance"
                },
                {
                    "name": "paginationCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "number"
                }
            ],
            "outputsClass": [
                {
                    "name": "newPage",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter<literal type>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "labels",
                    "defaultValue": "{\r\n    previousLabel: 'הקודם',\r\n    nextLabel: 'הבא',\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onPageChange",
                    "args": [
                        {
                            "name": "number",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "number",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { PaginationInstance } from 'ngx-pagination';\r\n\r\n@Component({\r\n  selector: 'kkl-pagination',\r\n  templateUrl: './pagination.component.html',\r\n  styleUrls: ['./pagination.component.scss']\r\n})\r\nexport class PaginationComponent {\r\n\r\n  @Input() public pagination: PaginationInstance;\r\n  @Input() paginationCount: number;\r\n  @Input() maxSize: number;\r\n\r\n  @Output() newPage: EventEmitter<{ next: number; prev: number }> =\r\n    new EventEmitter();\r\n\r\n  public labels: any = {\r\n    previousLabel: 'הקודם',\r\n    nextLabel: 'הבא',\r\n  };\r\n\r\n  public onPageChange(number) {\r\n    this.newPage.emit({ next: number, prev: this.pagination.currentPage });\r\n    this.pagination.currentPage = number;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles/styles\";\r\n\r\n.pagination {\r\n  font-size: 1.4rem !important;\r\n  height: 4rem;\r\n\r\n  ::ng-deep .ngx-pagination .current,\r\n  .btn-info {\r\n    background-color: transparent !important;\r\n    border: 2px solid color(primary) !important;\r\n    font-weight: 550;\r\n    font-size: 1.4rem !important;\r\n    color: color(primary) !important;\r\n    border-radius: 5px !important;\r\n  }\r\n\r\n  ::ng-deep li.pagination-next>a,\r\n  ::ng-deep li.pagination-previous>a {\r\n    font-size: 1.4rem !important;\r\n    color: color(primary) !important;\r\n  }\r\n\r\n  ::ng-deep .pagination-next {\r\n    font-size: 1.4rem !important;\r\n    padding-left: spacing(5) !important;\r\n  }\r\n\r\n  ::ng-deep .pagination-previous {\r\n    padding-right: spacing(5) !important;\r\n  }\r\n\r\n  ::ng-deep .pagination-next a::after,\r\n  ::ng-deep .pagination-next.disabled::after {\r\n    display: none !important;\r\n  }\r\n\r\n  ::ng-deep li.pagination-previous a::before,\r\n  ::ng-deep li.pagination-previous.disabled::before {\r\n    display: none !important;\r\n  }\r\n}\r\n",
                    "styleUrl": "./pagination.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"pagination\" fxLayout=\"row\" fxLayoutAlign=\"center center\" dir=\"ltr\">\r\n  <pagination-controls\r\n    #paginator\r\n    *ngIf=\"pagination.totalItems > pagination.itemsPerPage\"\r\n    [id]=\"pagination.id\"\r\n    [previousLabel]=\"labels.previousLabel\"\r\n    [nextLabel]=\"labels.nextLabel\"\r\n    (pageChange)=\"onPageChange($event)\"\r\n    [maxSize]=\"maxSize || 5\"\r\n  ></pagination-controls>\r\n</div>\r\n"
        },
        {
            "name": "StatusComponent",
            "id": "component-StatusComponent-2882210c6a6990fb282259f53875a8d8",
            "file": "projects/lib-kakal-ui/src/lib/app/components/status/status.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-status",
            "styleUrls": [
                "./status.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./status.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "cols",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number"
                },
                {
                    "name": "gutter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "number"
                },
                {
                    "name": "hasLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean"
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "number"
                },
                {
                    "name": "slots",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "literal type"
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "Status"
                }
            ],
            "outputsClass": [
                {
                    "name": "click",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "steps",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nexport interface Status {\r\n  label: string;\r\n  value: number;\r\n}\r\n@Component({\r\n  selector: 'app-status',\r\n  templateUrl: './status.component.html',\r\n  styleUrls: ['./status.component.scss'],\r\n})\r\nexport class StatusComponent implements OnInit {\r\n\r\n  @Input() public cols: number\r\n  @Input() public height: number\r\n  @Input() public gutter: number\r\n  @Input() public color: string;\r\n  @Input() public hasLabel: boolean\r\n  @Input() public status: Status;\r\n\r\n  @Input() slots: {textRef: ElementRef }\r\n\r\n  @Output() click : EventEmitter<void>  = new EventEmitter()\r\n\r\n  public steps: number[] = [];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.cols = this.cols || 8\r\n    this.color = this.color || 'accent';\r\n\r\n    for (let i = 1; i <= this.status.value; i++) {\r\n      this.steps.push(100);\r\n    }\r\n    for (let i = [...this.steps].length; i < this.cols; i++) {\r\n      this.steps.push(0);\r\n    }\r\n  }\r\n\r\n  public onClick() {\r\n    this.click.emit()\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles/styles.scss\";\r\n\r\n\r\n.status-container,\r\ndiv {\r\n  width: 100%;\r\n}\r\n\r\nmat-progress-bar.status-progress-bar {\r\n  :ng-deep .mat-progress-bar-buffer {\r\n    background-color: #90a4ae !important;\r\n  }\r\n\r\n  :ng-deep .mat-progress-bar.mat-accent.mat-progress-bar-buffer {\r\n    background-color: #90a4ae !important;\r\n  }\r\n\r\n  ::ng-deep .mat-progress-bar-buffer.mat-progress-bar-element {\r\n    background-color: color(light-text) !important;\r\n  }\r\n}\r\n\r\n.step-label {\r\n  padding-top: spacing(1);\r\n}\r\n\r\ndiv.status-bar {\r\n  height: spacing(0.5);\r\n  width: 100%;\r\n  background-color: color(disable);\r\n\r\n  &.active {\r\n    background-color: color(accent);\r\n  }\r\n}\r\n",
                    "styleUrl": "./status.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 25
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"status-container\" fxFill fxFlex=\"row\" dir=\"rtl\" (click)=\"onClick()\">\r\n  <mat-grid-list\r\n    [cols]=\"cols || 8\"\r\n    [rowHeight]=\"(height || 1) + 'rem'\"\r\n    [gutterSize]=\"0.5 + 'rem'\"\r\n  >\r\n    <mat-grid-tile [colspan]=\"cols || 8\" rowspan=\"2\">\r\n      <kkl-typography *ngIf=\"!slots\">\r\n        {{ status.label }}\r\n      </kkl-typography>\r\n\r\n      <ng-container\r\n        *ngTemplateOutlet=\"slots?.textRef; context: { status: this.status }\"\r\n      ></ng-container>\r\n    </mat-grid-tile>\r\n    <mat-grid-tile *ngFor=\"let step of steps; let i = index\" rowspan=\"2\">\r\n      <div fxLayout=\"column\">\r\n        <div [ngClass]=\"{ 'status-bar': true, active: !!step }\"></div>\r\n        <div\r\n          class=\"step-label\"\r\n          *ngIf=\"hasLabel\"\r\n          fxLayout=\"column\"\r\n          fxLayoutAlign=\"end center\"\r\n        >\r\n          <kkl-typography [color]=\"step ? 'accent' : 'disable'\" [size]=\"1.2\">\r\n            0{{ i + 1 }}\r\n          </kkl-typography>\r\n        </div>\r\n      </div>\r\n    </mat-grid-tile>\r\n  </mat-grid-list>\r\n</div>\r\n"
        },
        {
            "name": "StepperComponent",
            "id": "component-StepperComponent-8bbc13d413975c60ac88efb7fce9bf4a",
            "file": "projects/lib-kakal-ui/src/lib/app/components/stepper/stepper.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "kkl-stepper",
            "styleUrls": [
                "./stepper.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./stepper.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "direction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "StepperDirection"
                },
                {
                    "name": "stepRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "ElementRef"
                },
                {
                    "name": "steps$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "Observable<CardStepModel[]>"
                },
                {
                    "name": "stepWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "number"
                }
            ],
            "outputsClass": [
                {
                    "name": "changStep",
                    "defaultValue": "new EventEmitter<CardStepModel>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onStepChange",
                    "args": [
                        {
                            "name": "step",
                            "type": "CardStepModel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "step",
                            "type": "CardStepModel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ElementRef,\r\n} from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { CardStepModel, StepperDirection } from '../cards/card-step/card-step.model';\r\n\r\n@Component({\r\n  selector: 'kkl-stepper',\r\n  templateUrl: './stepper.component.html',\r\n  styleUrls: ['./stepper.component.scss'],\r\n})\r\nexport class StepperComponent {\r\n\r\n  @Input() steps$: Observable<CardStepModel[]>;\r\n  @Input() direction: StepperDirection;\r\n  @Input() stepWidth: number;\r\n  @Input() stepRef: ElementRef;\r\n\r\n  @Output() changStep = new EventEmitter<CardStepModel>();\r\n\r\n\r\n  public onStepChange(step: CardStepModel) {\r\n    this.changStep.emit(step);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles/styles\";\r\n\r\n\r\n\r\n.steps-container {\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n\r\n  .divider-container {\r\n    width: 105%;\r\n\r\n    .divider {\r\n      width: 105%;\r\n      height: .6rem;\r\n      background-color: #e4e4e4;\r\n      transform: translateY(-2rem);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n",
                    "styleUrl": "./stepper.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div [fxLayout]=\"direction\" class=\"steps-container\" fxLayoutAlign=\"center center\">\r\n  <ng-container *ngFor=\"let step of (steps$  |async); let i = index\">\r\n    <div appSize [space]=\"stepWidth\" [type]=\"step.type\">\r\n      <ng-container *ngIf=\"!stepRef\">\r\n        <ng-container [ngSwitch]=\"step.type\">\r\n          <ng-container *ngSwitchCase=\"'step'\">\r\n            <kkl-card-step (onStepChange)=\"onStepChange(step)\" [step]=\"step\"></kkl-card-step>\r\n          </ng-container>\r\n          <ng-container *ngSwitchCase=\"'wizard'\">\r\n            <kkl-card-wizard (onStepChange)=\"onStepChange(step)\" [step]=\"step\"></kkl-card-wizard>\r\n          </ng-container>\r\n          <ng-container *ngSwitchCase=\"'status'\">\r\n            <kkl-card-status [status]=\"step\"></kkl-card-status>\r\n          </ng-container>\r\n        </ng-container>\r\n        <ng-content></ng-content>\r\n      </ng-container>\r\n\r\n      <ng-container *ngTemplateOutlet=\"stepRef; context: { step: this.step }\">\r\n      </ng-container>\r\n    </div>\r\n    <div *ngIf=\"step.divider\" appSize [size]=\"2\" [divider]=\"step.divider\" class=\"divider-container\" fxLayout=\"column\"\r\n      fxLayoutAlign=\"center center\">\r\n      <div *ngIf=\"step.divider\" class=\"divider\"></div>\r\n    </div>\r\n  </ng-container>\r\n</div>"
        },
        {
            "name": "StepperExComponent",
            "id": "component-StepperExComponent-e4ab1f0564a14875e74ee34292a4e325",
            "file": "projects/lib-kakal-ui/src/lib/app/examples/stepper-ex/stepper-ex.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-stepper-ex",
            "styleUrls": [
                "./stepper-ex.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./stepper-ex.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "direction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "StepperDirection"
                },
                {
                    "name": "steps",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "CardStepModel[]"
                },
                {
                    "name": "stepWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "steps$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<CardStepModel[]>",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onStepChange",
                    "args": [
                        {
                            "name": "step",
                            "type": "CardStepModel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "step",
                            "type": "CardStepModel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { CardStepModel, StepperDirection } from '../../components/cards/card-step/card-step.model';\r\n\r\nimport { StepperService } from '../../components/stepper/stepper.service';\r\n\r\n@Component({\r\n  selector: 'app-stepper-ex',\r\n  templateUrl: './stepper-ex.component.html',\r\n  styleUrls: ['./stepper-ex.component.scss'],\r\n})\r\nexport class StepperExComponent {\r\n  constructor(private stepperService: StepperService) {}\r\n\r\n  @Input() public steps: CardStepModel[];\r\n  @Input() public direction: StepperDirection;\r\n  @Input() public stepWidth: number;\r\n\r\npublic steps$ : Observable<CardStepModel[]>\r\n  ngOnInit() {\r\n    this.steps$ = of(this.steps)\r\n  }\r\n\r\n\r\n  public onStepChange(step: CardStepModel) {\r\n    this.steps = this.stepperService.setSteps(this.steps, 'path', step.path);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n    height: 100%;\r\n  }\r\n  \r\n  div {\r\n    height: 100%;\r\n  }\r\n  \r\n  .wizard {\r\n    height: 100%;\r\n    width: 100px;\r\n  }\r\n  ",
                    "styleUrl": "./stepper-ex.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "stepperService",
                        "type": "StepperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "stepperService",
                        "type": "StepperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div *ngIf=\"direction === 'row'\" class=\"container\" fxLayout=\"column\" fxLayoutAlign=\"center center\" dir=\"rtl\" fxFill>\r\n    <div fxFlex=\"20\">\r\n      <kkl-stepper [stepWidth]=\"stepWidth\" (changStep)=\"onStepChange($event)\" [steps$]=\"steps$\" [direction]=\"direction\"></kkl-stepper>\r\n    </div>\r\n  </div>\r\n\r\n  <div *ngIf=\"direction === 'column'\" class=\"wizard\">\r\n    <kkl-stepper\r\n      (changStep)=\"onStepChange($event)\"\r\n      [steps$]=\"steps$\"\r\n      [direction]=\"direction\"\r\n    ></kkl-stepper>\r\n  </div>\r\n"
        },
        {
            "name": "TableComponent",
            "id": "component-TableComponent-6fb629ab5359e7883fb10e1c7a52b6fa",
            "file": "projects/lib-kakal-ui/src/lib/app/components/table/table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "TableService"
                },
                {
                    "name": "TableService"
                }
            ],
            "selector": "kkl-table",
            "styleUrls": [
                "./table.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "accordion",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 118,
                    "type": "boolean"
                },
                {
                    "name": "columns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 108,
                    "type": "ColumnModel<T>[]"
                },
                {
                    "name": "data$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 104,
                    "type": "Observable<T[]>"
                },
                {
                    "name": "expandSlots",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 140,
                    "type": "literal type"
                },
                {
                    "name": "expendable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 117,
                    "type": "boolean"
                },
                {
                    "name": "filterSlots",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 131,
                    "type": "literal type"
                },
                {
                    "name": "footerSlots",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 134,
                    "type": "literal type"
                },
                {
                    "name": "hasActions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 122,
                    "type": "boolean"
                },
                {
                    "name": "hasFooter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 121,
                    "type": "boolean"
                },
                {
                    "name": "hasState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 120,
                    "type": "boolean"
                },
                {
                    "name": "headerSlots",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 125,
                    "type": "literal type"
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 111,
                    "type": "T"
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 113,
                    "type": "TableOptions<T>"
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 116,
                    "type": "boolean"
                },
                {
                    "name": "rowSlots",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 128,
                    "type": "literal type"
                },
                {
                    "name": "selectable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 119,
                    "type": "boolean"
                },
                {
                    "name": "selectSlot",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 137,
                    "type": "literal type"
                },
                {
                    "name": "theme",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 101,
                    "type": "ThemePalette"
                }
            ],
            "outputsClass": [
                {
                    "name": "filter",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 172,
                    "type": "EventEmitter<FilterOption<T>>"
                },
                {
                    "name": "pageChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 166,
                    "type": "EventEmitter<literal type>"
                },
                {
                    "name": "register",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 175,
                    "type": "EventEmitter<BehaviorSubject<TableState<T>>>"
                },
                {
                    "name": "selected",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 180,
                    "type": "EventEmitter<Observable<T[]>>"
                },
                {
                    "name": "sort",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 163,
                    "type": "EventEmitter<Sort>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "columnDefs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ColumnDef<T>[]",
                    "optional": false,
                    "description": "",
                    "line": 147,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "columns$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<ColumnModel[]>",
                    "optional": false,
                    "description": "",
                    "line": 145,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "expandKey$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<ColumnDef<T>>",
                    "optional": false,
                    "description": "",
                    "line": 146,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "pagination",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PaginationInstance",
                    "optional": false,
                    "description": "",
                    "line": 148,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "rows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RowModel<T>[]",
                    "optional": false,
                    "description": "",
                    "line": 158,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "rows$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<RowModel[]>",
                    "optional": false,
                    "description": "",
                    "line": 144,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "selection",
                    "defaultValue": "new SelectionModel<\r\n    RowModel<T>\r\n  >(true, [], true)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectionModel<RowModel<T>>",
                    "optional": false,
                    "description": "",
                    "line": 154,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "tableState$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<TableState<T>>",
                    "optional": false,
                    "description": "",
                    "line": 151,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "isAllSelected",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 337,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhether the number of selected elements matches the total number of rows.",
                    "description": "<p>Whether the number of selected elements matches the total number of rows.</p>\n",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "masterToggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 344,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSelects all rows if they are not all selected; otherwise clear selection.",
                    "description": "<p>Selects all rows if they are not all selected; otherwise clear selection.</p>\n",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 199,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onExpandRow",
                    "args": [
                        {
                            "name": "row",
                            "type": "RowModel<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 303,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "RowModel<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onFilter",
                    "args": [
                        {
                            "name": "filterOption",
                            "type": "FilterOption<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 318,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "filterOption",
                            "type": "FilterOption<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onPageChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 311,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSelect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 323,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "onSort",
                    "args": [
                        {
                            "name": "sort",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 315,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "sort",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setColumns$",
                    "args": [
                        {
                            "name": "filters",
                            "type": "ColumnDef<T>[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 267,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "filters",
                            "type": "ColumnDef<T>[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setExpandKey$",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<ColumnDef<T>>",
                    "typeParameters": [],
                    "line": 288,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "setExpandState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 184,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "setRows$",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<RowModel[]>",
                    "typeParameters": [],
                    "line": 252,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "setRowState",
                    "args": [
                        {
                            "name": "rows",
                            "type": "RowModel<T>[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "TableState<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "RowModel[]",
                    "typeParameters": [],
                    "line": 211,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "rows",
                            "type": "RowModel<T>[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "TableState<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setRowWithState$",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 260,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "setTableProps",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 192,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  OnChanges,\r\n} from '@angular/core';\r\n\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { PaginationInstance } from 'ngx-pagination';\r\n\r\nimport { TableService } from './table.service';\r\nimport { RowModel } from './models/row.model';\r\n\r\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { Sort } from '@angular/material/sort';\r\nimport {\r\n  trigger,\r\n  state,\r\n  style,\r\n  transition,\r\n  animate,\r\n} from '@angular/animations';\r\nimport { ColumnDef, ColumnModel } from '../columns/column.model';\r\n\r\nimport { SelectionChange, SelectionModel } from '@angular/cdk/collections';\r\nimport { v4 as uuid4 } from 'uuid';\r\nimport { FilterOption } from '../columns/column-filter/column-filter.component';\r\n\r\ndeclare type id = string | number;\r\n\r\n// interface for table options : {\r\n// filters - keys to remove unwanted fields form object (ex - id)\r\n// pagination - a PaginationInstance\r\n// editable - tag rows to start in edit mode\r\n// pending - tag rows for specific start style\r\n// }\r\nexport interface TableOptions<T> {\r\n  filters?: ColumnDef<T>[];\r\n  pagination?: PaginationInstance;\r\n  editable?: id[];\r\n  pending?: id[];\r\n}\r\n\r\n// interface for every comp which handle kkl-table states :\r\n// mode : edit/add/form/expand/close/remove/delete\r\n// options : additional data\r\n\r\ntype state =\r\n  | 'add'\r\n  | 'save'\r\n  | 'edit'\r\n  | 'expand'\r\n  | 'cancel'\r\n  | 'delete'\r\n  | 'form'\r\n  | '';\r\n\r\nexport interface TableState<T> {\r\n  mode?: state;\r\n  ids?: id[];\r\n  row?: RowModel<T>;\r\n  column?: ColumnModel<T>;\r\n  options?: any;\r\n}\r\n\r\n// interface for every comp which want to use kkl-table = {\r\n// data : array of objects to render in table\r\n//  columns : array of ColumnsModel\r\n// options : see TableOptions interface\r\n// model : new instance of the data object\r\n// }\r\nexport interface Table<T> {\r\n  data$: Observable<T[]>;\r\n  columns: ColumnModel<T>[];\r\n  options: TableOptions<T>;\r\n  model: T;\r\n}\r\n\r\n@Component({\r\n  selector: 'kkl-table',\r\n  templateUrl: './table.component.html',\r\n  styleUrls: ['./table.component.scss'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({ height: '0rem', minHeight: '0' })),\r\n      state('expanded', style({ height: '*' })),\r\n      transition(\r\n        'expanded <=> collapsed',\r\n        animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')\r\n      ),\r\n    ]),\r\n  ],\r\n  providers: [TableService, TableService],\r\n})\r\nexport class TableComponent<T> implements OnInit, Table<T> {\r\n  // color for hedaer : primary or accent\r\n  @Input() public theme: ThemePalette;\r\n\r\n  // data[]\r\n  @Input() public data$: Observable<T[]>;\r\n\r\n  // array of columns model\r\n\r\n  @Input() public columns: ColumnModel<T>[];\r\n\r\n  // table data instance for column keys\r\n  @Input() public model: T;\r\n\r\n  @Input() public options: TableOptions<T>;\r\n\r\n  // if table have state modes\r\n  @Input() public paginator: boolean;\r\n  @Input() public expendable: boolean;\r\n  @Input() public accordion: boolean;\r\n  @Input() public selectable: boolean;\r\n  @Input() public hasState: boolean;\r\n  @Input() public hasFooter: boolean;\r\n  @Input() public hasActions: boolean;\r\n\r\n  // ng template for column header\r\n  @Input() public headerSlots: {} = {};\r\n\r\n  // ng template for cell\r\n  @Input() public rowSlots: {};\r\n\r\n  // ng template for filter\r\n  @Input() public filterSlots: {};\r\n\r\n  // ng template for footer cell\r\n  @Input() public footerSlots: {};\r\n\r\n  // ng template for select cell\r\n  @Input() public selectSlot: {};\r\n\r\n  // ng template for expand cell\r\n  @Input() public expandSlots: {};\r\n\r\n  // -----------------------------------------------------------------------/\r\n\r\n  public rows$: Observable<RowModel<T>[]>;\r\n  public columns$: Observable<ColumnModel<T>[]>;\r\n  public expandKey$: Observable<ColumnDef<T>>;\r\n  public columnDefs: ColumnDef<T>[];\r\n  public pagination: PaginationInstance;\r\n\r\n  // Subject which control table state mode : edit/expand/save\r\n  public tableState$: BehaviorSubject<TableState<T>>;\r\n\r\n  // cdk object that handle selection\r\n  public selection: SelectionModel<RowModel<T>> = new SelectionModel<\r\n    RowModel<T>\r\n  >(true, [], true);\r\n\r\n  private rows: RowModel<T>[];\r\n\r\n  // -----------------------------------------------------------------------/\r\n\r\n  // emit sort event : Sort\r\n  @Output() sort: EventEmitter<Sort> = new EventEmitter();\r\n\r\n  // emit pagination event : {next : number, prev : number}\r\n  @Output() pageChange: EventEmitter<{\r\n    next: number;\r\n    prev: number;\r\n  }> = new EventEmitter();\r\n\r\n  // emit filter event : ColumnModel<T>\r\n  @Output() filter: EventEmitter<FilterOption<T>> = new EventEmitter();\r\n\r\n  // emit state instance event\r\n  @Output() register: EventEmitter<\r\n    BehaviorSubject<TableState<T>>\r\n  > = new EventEmitter();\r\n\r\n  // emit select event : Observable<T[]>\r\n  @Output() selected: EventEmitter<Observable<T[]>> = new EventEmitter();\r\n\r\n  constructor(private tableService: TableService<T>) {}\r\n\r\n  private setExpandState() {\r\n    this.expendable = this.expendable || this.accordion;\r\n    console.log(this.expendable);\r\n    if (this.expendable) {\r\n      this.expandKey$ = this.setExpandKey$();\r\n    }\r\n  }\r\n\r\n  private setTableProps() {\r\n    const { pagination, filters } = this.options;\r\n    this.rows$ = this.setRowWithState$();\r\n    this.columns$ = this.setColumns$(filters);\r\n    this.pagination = { ...pagination, id: uuid4() };\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.theme = this.theme || 'accent';\r\n    this.tableState$ = new BehaviorSubject<TableState<T>>({\r\n      mode: '',\r\n    });\r\n\r\n    this.setTableProps();\r\n    this.setExpandState();\r\n\r\n    this.register.emit(this.tableState$);\r\n  }\r\n\r\n  private setRowState(\r\n    rows: RowModel<T>[],\r\n    state: TableState<T>\r\n  ): RowModel<T>[] {\r\n    const { mode, ids, row, options } = state;\r\n\r\n    switch (mode) {\r\n      case 'expand':\r\n        return rows.map((rowItem) => {\r\n          if (ids.indexOf(rowItem.item['id']) >= 0) {\r\n            rowItem.expanded = !rowItem.expanded;\r\n          }\r\n          return rowItem;\r\n        });\r\n      case 'form':\r\n        const { columns } = this.tableService.setColumns({\r\n          tableColumns: this.columns,\r\n          model: this.model,\r\n          filters: this.options.filters,\r\n        });\r\n\r\n        rows = this.tableService.onFormMode(rows, columns, options);\r\n        return [...rows];\r\n\r\n      case 'add':\r\n        rows = this.tableService.onAddFormRow(rows, this.columns);\r\n        return [...rows];\r\n\r\n      case 'edit':\r\n        rows = this.tableService.onEditMode(rows, row, this.columns, options);\r\n        return [...rows];\r\n      case 'save':\r\n        return this.tableService.onSaveMode(rows, 'id', row.item);\r\n      case 'cancel':\r\n        rows.shift();\r\n        return [...rows];\r\n      default:\r\n        return [...rows];\r\n    }\r\n  }\r\n\r\n  private setRows$(): Observable<RowModel<T>[]> {\r\n    return this.data$.pipe(\r\n      map((data) => {\r\n        return this.tableService.setRows(data, this.options);\r\n      })\r\n    );\r\n  }\r\n\r\n  private setRowWithState$() {\r\n    return combineLatest([\r\n      this.setRows$(),\r\n      this.tableState$.asObservable(),\r\n    ]).pipe(map((pair) => this.setRowState(pair[0], pair[1])));\r\n  }\r\n\r\n  private setColumns$(filters: ColumnDef<T>[]) {\r\n    return this.data$.pipe(\r\n      map(() => {\r\n        const { columns, columnsDefs } = this.tableService.setColumns({\r\n          tableColumns: this.columns,\r\n          model: this.model,\r\n          filters: [...filters],\r\n          selectable: this.selectable,\r\n          accordion: this.accordion,\r\n          hasActions: this.hasActions,\r\n        });\r\n\r\n        this.columnDefs = columnsDefs;\r\n        this.columns = columns;\r\n        return columns;\r\n      })\r\n    );\r\n  }\r\n\r\n  // method to handle key of expand table template (expandSlots) - key need to be the same as the object field\r\n  // ex { name : string } columnDef : name\r\n  private setExpandKey$(): Observable<ColumnDef<T>> {\r\n    return this.tableState$.pipe(\r\n      map((state) => {\r\n        const { mode, column } = state;\r\n\r\n        if (mode === 'expand') {\r\n          return column?.columnDef || 'accordion';\r\n        }\r\n\r\n        return '';\r\n      })\r\n    );\r\n  }\r\n\r\n  // method which handle expand row state\r\n  public onExpandRow(row: RowModel<T>) {\r\n    if (this.accordion) {\r\n      this.tableState$.next({ mode: 'expand', ids: [row.item['id']] });\r\n    }\r\n  }\r\n\r\n  // EMIT EVENTS\r\n\r\n  public onPageChange(event) {\r\n    this.pageChange.emit(event);\r\n  }\r\n\r\n  public onSort(sort: Sort): void {\r\n    this.sort.emit(sort);\r\n  }\r\n  public onFilter(filterOption: FilterOption<T>): void {\r\n    this.filter.emit(filterOption);\r\n  }\r\n\r\n  // method which emit  selection items : []T\r\n  public onSelect(): void {\r\n    const select$ = this.selection.changed.pipe(\r\n      map((selection: SelectionChange<RowModel<T>>) => {\r\n        const { source } = selection;\r\n        return source.selected.map((row) => row.item);\r\n      })\r\n    );\r\n\r\n    this.selected.emit(select$);\r\n  }\r\n\r\n  // SELECT LOGIC SECTION\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  public isAllSelected(): boolean {\r\n    const numSelected = this.selection.selected?.length;\r\n    const numRows = this.rows.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  public masterToggle(): void {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.rows.map((row) => this.selection.select(row));\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles/styles.scss\";\r\n\r\n.selected {\r\n  flex: 0.5;\r\n}\r\n\r\nmat-table {\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: inherit !important;\r\n}\r\n\r\nmat-cell {\r\n  height: inherit;\r\n\r\n  &.center {\r\n    justify-content: center;\r\n  }\r\n}\r\n\r\nmat-header-cell {\r\n  align-items: flex-end;\r\n  padding-bottom: spacing(1);\r\n  box-sizing: border-box;\r\n\r\n  &.center {\r\n    justify-content: center;\r\n  }\r\n}\r\n\r\nmat-header-row.accent {\r\n  border-bottom: color(accent) solid 3px;\r\n}\r\n\r\nmat-header-row.primary {\r\n  border-bottom: color(primary) solid 3px;\r\n}\r\n\r\n// style for row\r\nmat-row {\r\n  &.hideBorder {\r\n    border-bottom: none;\r\n  }\r\n\r\n  &.default {\r\n    height: 5rem;\r\n  }\r\n\r\n  &.form {\r\n    height: 10rem;\r\n  }\r\n\r\n  &.hide {\r\n    height: 0rem;\r\n    min-height: 0rem;\r\n  }\r\n\r\n  &.expand {\r\n    background-color: color(table);\r\n    margin-top: spacing(1);\r\n    margin-bottom: spacing(1);\r\n  }\r\n  &.accordion {\r\n    cursor: pointer;\r\n  }\r\n}\r\n\r\n.cell-input {\r\n  width: 85%;\r\n\r\n  app-column-form {\r\n    width: inherit;\r\n  }\r\n}\r\n\r\n::ng-deep .mat-sort-header-arrow {\r\n  color: color(primary) !important;\r\n}\r\n",
                    "styleUrl": "./table.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "tableService",
                        "type": "TableService<T>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 180,
                "jsdoctags": [
                    {
                        "name": "tableService",
                        "type": "TableService<T>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "Table"
            ],
            "templateData": "<div>\r\n  <mat-table\r\n    (matSortChange)=\"onSort($event)\"\r\n    mat-table\r\n    matSort\r\n    [dataSource]=\"rows$ | async | paginate: pagination\"\r\n    [dir]=\"'rtl'\"\r\n    multiTemplateDataRows\r\n  >\r\n    <ng-container\r\n      *ngFor=\"let column of columns$ | async\"\r\n      [matColumnDef]=\"column.columnDef\"\r\n    >\r\n      <!-- COLUMN HEADER SECTION-->\r\n\r\n      <ng-container *ngIf=\"!column.sortable && !column.selectable\">\r\n        <mat-header-cell\r\n          *matHeaderCellDef\r\n          [ngClass]=\"{\r\n            center: column.center,\r\n            selected: column.columnDef === 'select'\r\n          }\"\r\n        >\r\n          <!-- DEFAULT HEADER -->\r\n          <kkl-typography [bold]=\"600\" *ngIf=\"!column.filterable\">\r\n            {{ column.label }}\r\n          </kkl-typography>\r\n\r\n          <ng-container *ngIf=\"hasActions\">\r\n            <ng-container\r\n              *ngTemplateOutlet=\"\r\n                headerSlots['actions'];\r\n                context: { row: this.row, column: this.column }\r\n              \"\r\n            >\r\n            </ng-container>\r\n          </ng-container>\r\n\r\n          <!-- FILTER HEADER -->\r\n          <kkl-column-filter\r\n            *ngIf=\"column.filterable\"\r\n            [column]=\"column\"\r\n            [filterSlots]=\"filterSlots\"\r\n            (optionSelect)=\"onFilter($event)\"\r\n          >\r\n          </kkl-column-filter>\r\n        </mat-header-cell>\r\n      </ng-container>\r\n\r\n      <!-- SORT HEADER -->\r\n      <ng-container *ngIf=\"column.sortable\">\r\n        <mat-header-cell\r\n          mat-sort-header\r\n          *matHeaderCellDef\r\n          [ngClass]=\"{ center: column.center }\"\r\n          [start]=\"column.sortDir\"\r\n        >\r\n          <kkl-typography [bold]=\"600\" [size]=\"1.2\">\r\n            {{ column.label }}\r\n          </kkl-typography>\r\n        </mat-header-cell>\r\n      </ng-container>\r\n\r\n      <ng-container *ngIf=\"column.selectable\">\r\n        <mat-header-cell *matHeaderCellDef class=\"selected\">\r\n          <mat-checkbox\r\n            *ngIf=\"!headerSlots['select']\"\r\n            color=\"primary\"\r\n            (click)=\"onSelect()\"\r\n            (change)=\"$event ? masterToggle() : null\"\r\n            [checked]=\"selection.hasValue() && isAllSelected()\"\r\n            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n          >\r\n          </mat-checkbox>\r\n          <ng-container *ngIf=\"headerSlots['select']\">\r\n            <ng-container *ngTemplateOutlet=\"headerSlots['select']\">\r\n            </ng-container>\r\n          </ng-container>\r\n        </mat-header-cell>\r\n\r\n        <mat-cell *matCellDef=\"let row\" class=\"selected\">\r\n          <mat-checkbox\r\n            color=\"primary\"\r\n            (click)=\"onSelect()\"\r\n            (change)=\"$event ? selection.toggle(row) : null\"\r\n            [checked]=\"selection.isSelected(row)\"\r\n          >\r\n          </mat-checkbox>\r\n        </mat-cell>\r\n      </ng-container>\r\n\r\n      <!-- COLUMN CELL SECTION-->\r\n\r\n      <mat-cell\r\n        *matCellDef=\"let row; let i = index\"\r\n        [ngClass]=\"{\r\n          center: column.center,\r\n          selected: column.columnDef === 'select'\r\n        }\"\r\n        [attr.colspan]=\"i\"\r\n      >\r\n        <!-- DEFAULT SECTION-->\r\n        <ng-container *ngIf=\"!row.editable\">\r\n          <ng-container [ngSwitch]=\"column.type\">\r\n            <ng-container *ngSwitchCase=\"'custom'\">\r\n              <ng-container\r\n                *ngTemplateOutlet=\"\r\n                  rowSlots[column.columnDef];\r\n                  context: { row: this.row, column: this.column }\r\n                \"\r\n              >\r\n              </ng-container>\r\n            </ng-container>\r\n\r\n            <ng-container *ngSwitchCase=\"'actions'\">\r\n              <ng-container\r\n                *ngTemplateOutlet=\"\r\n                  rowSlots['actions'];\r\n                  context: { row: this.row, column: this.column }\r\n                \"\r\n              >\r\n              </ng-container>\r\n            </ng-container>\r\n\r\n            <ng-container *ngSwitchDefault>\r\n              <kkl-typography>\r\n                {{ row.item[column.columnDef] | format: type }}\r\n              </kkl-typography>\r\n            </ng-container>\r\n          </ng-container>\r\n        </ng-container>\r\n\r\n        <!-- FORM SECTION-->\r\n        <ng-container *ngIf=\"row.editable\">\r\n          <ng-container [ngSwitch]=\"column.type\">\r\n            <ng-container *ngIf=\"column.control\">\r\n              <div class=\"cell-input\">\r\n                <kkl-form-input\r\n                  [control]=\"row.formGroup.controls[column.columnDef]\"\r\n                  [question]=\"row.questionsGroup[column.columnDef]\"\r\n                ></kkl-form-input>\r\n              </div>\r\n            </ng-container>\r\n\r\n            <ng-container *ngIf=\"!column.control\">\r\n              <ng-container *ngSwitchCase=\"'custom'\">\r\n                <ng-container\r\n                  *ngTemplateOutlet=\"\r\n                    rowSlots[column.columnDef];\r\n                    context: { row: this.row, column: this.column }\r\n                  \"\r\n                >\r\n                </ng-container>\r\n              </ng-container>\r\n\r\n              <ng-container *ngSwitchDefault>\r\n                <kkl-typography>\r\n                  {{ row.item[column.columnDef] | format: type }}\r\n                </kkl-typography>\r\n              </ng-container>\r\n            </ng-container>\r\n\r\n\r\n\r\n            \r\n            <ng-container *ngSwitchCase=\"'actions'\">\r\n              <ng-container\r\n                *ngTemplateOutlet=\"\r\n                  rowSlots['actions'];\r\n                  context: { row: this.row, column: this.column }\r\n                \"\r\n              >\r\n              </ng-container>\r\n            </ng-container>\r\n          </ng-container>\r\n        </ng-container>\r\n      </mat-cell>\r\n\r\n      <ng-container>\r\n        <mat-footer-cell\r\n          *matFooterCellDef\r\n          [ngClass]=\"{ selected: column.columnDef === 'select' }\"\r\n        >\r\n          <ng-container *ngIf=\"column.footer\">\r\n            <ng-container\r\n              *ngTemplateOutlet=\"\r\n                footerSlots[column.columnDef];\r\n                context: { row: this.row }\r\n              \"\r\n            >\r\n            </ng-container>\r\n          </ng-container>\r\n        </mat-footer-cell>\r\n      </ng-container>\r\n    </ng-container>\r\n\r\n    <!-- EXPEND COLUMN -->\r\n    <ng-container matColumnDef=\"expandRow\" *ngIf=\"expendable\">\r\n      <mat-cell *matCellDef=\"let row\" [attr.colspan]=\"columnDefs.length\">\r\n        <div\r\n          fxFill\r\n          *ngIf=\"row.expanded && expandKey$ | async\"\r\n          [@detailExpand]=\"row.expanded ? 'expanded' : 'collapsed'\"\r\n        >\r\n          <ng-container\r\n            *ngTemplateOutlet=\"\r\n              expandSlots[expandKey$ | async];\r\n              context: { row: this.row }\r\n            \"\r\n          >\r\n          </ng-container>\r\n        </div>\r\n      </mat-cell>\r\n    </ng-container>\r\n\r\n    <!-- NEW FORM COLUMN -->\r\n    <ng-container matColumnDef=\"formRow\" *ngIf=\"false\">\r\n      <ng-container> </ng-container>\r\n      <mat-cell *matCellDef=\"let row\">\r\n        <div></div>\r\n      </mat-cell>\r\n    </ng-container>\r\n\r\n    <mat-header-row\r\n      [ngClass]=\"[theme]\"\r\n      *matHeaderRowDef=\"columnDefs\"\r\n    ></mat-header-row>\r\n\r\n\r\n\r\n    <ng-container *ngIf=\"false\">\r\n      <mat-row *matRowDef=\"let formRow; columns: ['formRow']\"></mat-row>\r\n    </ng-container>\r\n\r\n    <mat-row\r\n      *matRowDef=\"let row; columns: columnDefs\"\r\n      (click)=\"onExpandRow(row, column)\"\r\n      [ngClass]=\"{\r\n        default: true,\r\n        form: row.editable,\r\n        hideBorder: expendable,\r\n        expand: expendable,\r\n        accordion: accordion\r\n      }\"\r\n    >\r\n    </mat-row>\r\n\r\n    <ng-container *ngIf=\"hasFooter\">\r\n      <mat-row\r\n        class=\"default\"\r\n        mat-footer-row\r\n        *matFooterRowDef=\"columnDefs\"\r\n      ></mat-row>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"expendable\">\r\n      <mat-row\r\n        *matRowDef=\"let expendRow; columns: ['expandRow']\"\r\n        [ngClass]=\"{\r\n          hide: !expendRow.expanded,\r\n          show: expendRow.expanded,\r\n          hideBorder: expendable\r\n        }\"\r\n      ></mat-row>\r\n    </ng-container>\r\n  </mat-table>\r\n\r\n  <kkl-pagination (newPage)=\"onPageChange($event)\" [pagination]=\"pagination\">\r\n  </kkl-pagination>\r\n</div>\r\n"
        },
        {
            "name": "TableExComponent",
            "id": "component-TableExComponent-f318193a54e81032d235052fb3a8527c",
            "file": "projects/lib-kakal-ui/src/lib/app/examples/table-ex/table-ex.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "kkl-table-ex",
            "styleUrls": [
                "./table-ex.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./table-ex.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "accordion",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean"
                },
                {
                    "name": "columns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "ColumnModel<T>[]"
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "T[]"
                },
                {
                    "name": "expendable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean"
                },
                {
                    "name": "hasActions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean"
                },
                {
                    "name": "hasFooter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "boolean"
                },
                {
                    "name": "hasForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean"
                },
                {
                    "name": "hasState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean"
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "T"
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "TableOptions<T>"
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean"
                },
                {
                    "name": "selectable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "boolean"
                },
                {
                    "name": "theme",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "ThemePalette"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<T[]>",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "tableState$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<TableState<T>>",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onExpand",
                    "args": [
                        {
                            "name": "row",
                            "type": "RowModel<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "column",
                            "type": "ColumnModel<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "RowModel<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "column",
                            "type": "ColumnModel<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onRegister",
                    "args": [
                        {
                            "name": "event",
                            "type": "BehaviorSubject<TableState<T>>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "BehaviorSubject<TableState<T>>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { ColumnModel } from '../../components/columns/column.model';\r\nimport { RowModel } from '../../components/table/models/row.model';\r\nimport {\r\n  TableOptions,\r\n  TableState,\r\n} from '../../components/table/table.component';\r\n\r\n@Component({\r\n  selector: 'kkl-table-ex',\r\n  templateUrl: './table-ex.component.html',\r\n  styleUrls: ['./table-ex.component.scss'],\r\n})\r\nexport class TableExComponent<T> implements OnInit {\r\n  @Input() public theme: ThemePalette;\r\n\r\n  @Input() public data: T[];\r\n  @Input() public columns: ColumnModel<T>[];\r\n  @Input() public model: T;\r\n  @Input() public options: TableOptions<T>;\r\n\r\n  @Input() public paginator: boolean;\r\n  @Input() public expendable: boolean;\r\n  @Input() public accordion: boolean;\r\n  @Input() public selectable: boolean;\r\n  @Input() public hasState: boolean;\r\n  @Input() public hasFooter: boolean;\r\n  @Input() public hasActions: boolean;\r\n  @Input() public hasForm: boolean;\r\n\r\n  public data$: Observable<T[]>;\r\n\r\n  private tableState$: BehaviorSubject<TableState<T>>;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.data$ = of(this.data);\r\n\r\n    console.log(this.accordion)\r\n    console.log(this.expendable)\r\n\r\n    if (this.expendable) {\r\n      this.columns[3].type = 'custom';\r\n    }\r\n\r\n  }\r\n\r\n  public onRegister(event: BehaviorSubject<TableState<T>>): void {\r\n    this.tableState$ = event;\r\n\r\n    if(this.hasForm) {\r\n      this.tableState$.next({ mode: 'form' });\r\n    }\r\n  }\r\n\r\n  public onExpand(row: RowModel<T>, column: ColumnModel<T>) {\r\n    this.tableState$.next({ mode: 'expand', ids: [row.item['id'], 3], column });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".table {\r\n  width: 95%;\r\n}\r\n\r\n.status {\r\n  width: 100%;\r\n}\r\n",
                    "styleUrl": "./table-ex.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 35
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n  <div class=\"table\">\r\n    <kkl-table\r\n      [data$]=\"data$\"\r\n      [columns]=\"columns\"\r\n      [model]=\"model\"\r\n      [options]=\"options\"\r\n      [rowSlots]=\"{status, area, actions}\"\r\n      [expandSlots]=\"{area, accordion : accordionSlot}\"\r\n      [expendable]=\"expendable\"\r\n      [accordion]=\"accordion\"\r\n      [hasActions]=\"hasActions\"\r\n      [selectable]=\"selectable\"\r\n      [hasState]=\"hasState\"\r\n      (register)=\"onRegister($event)\"\r\n    ></kkl-table>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #status let-row=\"row\">\r\n  <div class=\"status\">\r\n    <app-status [status]=\"row.item?.status\"></app-status>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #area let-row=\"row\" let-column=\"column\">\r\n  <button mat-button appBorder (click)=\"onExpand(row, column)\">\r\n    <kkl-typography>expand row</kkl-typography>\r\n  </button>\r\n</ng-template>\r\n\r\n<ng-template #actions let-row=\"row\">\r\n  <button color=\"accent\" mat-raised-button type=\"button\">\r\n    <kkl-typography>לחץ</kkl-typography>\r\n  </button>\r\n</ng-template>\r\n`;\r\n<ng-template #accordionSlot let-row=\"row\">\r\n  <kkl-typography>working !</kkl-typography>\r\n</ng-template>\r\n`;\r\n"
        },
        {
            "name": "TypographyComponent",
            "id": "component-TypographyComponent-5d8a4476f40bd87a595c7e9cd115ca20",
            "file": "projects/lib-kakal-ui/src/lib/app/components/typography/typography.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "kkl-typography",
            "styleUrls": [
                "./typography.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./typography.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "bold",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "number"
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "Palette"
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "palette",
                    "defaultValue": "palette",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Color",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\nimport { Color, palette, Palette } from '../../../styles/theme';\r\n\r\n@Component({\r\n  selector: 'kkl-typography',\r\n  templateUrl: './typography.component.html',\r\n  styleUrls: ['./typography.component.scss'],\r\n})\r\nexport class TypographyComponent implements OnInit {\r\n  public palette: Color = palette;\r\n  @Input() public size: number;\r\n  @Input() public bold: number;\r\n  @Input() public color: Palette;\r\n\r\n  constructor(\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.size = this.size || 1.4;\r\n    this.bold = this.bold || 500;\r\n    this.color = this.color || 'text';\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles/styles\";\r\n\r\nspan.fontFamily {\r\n  font-family: \"open sans hebrew\", \"Helvetica Neue\", sans-serif !important;\r\n  src: url(\"../../../assets/fonts/opanSansHebrew/OpenSansHebrew-Regular.ttf\") format(\"opentype\") !important;\r\n\r\n}\r\n\r\n",
                    "styleUrl": "./typography.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<span [dir]=\"'rtl'\" [ngClass]=\"['fontFamily', 'typography']\"\r\n  [ngStyle]=\"{'color' : palette[color], 'font-size.rem' : size, 'font-weight' : bold}\">\r\n  <ng-content></ng-content>\r\n</span>\r\n\r\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-c7e4cc31a73a8e5684aa0d61c3fcd8bf",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/lib-kakal-ui/src/lib/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { DecimalPipe, DatePipe } from '@angular/common';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from '../material/material.module';\r\nimport { AppComponent } from './components/root/app.component';\r\n\r\nimport { DashboardComponent } from './screens/dashboard/dashboard.component';\r\n\r\nimport { IconComponent } from './components/icon/icon.component';\r\nimport { TypographyComponent } from './components/typography/typography.component';\r\n\r\nimport { MenuComponent } from './components/menu/menu.component';\r\n\r\nimport { PaginationComponent } from './components/pagination/pagination.component';\r\nimport { TableComponent } from './components/table/table.component';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\n\r\nimport { CardDashboardComponent } from './components/cards/card-dashboard/card-dashboard.component';\r\nimport { CardStatusComponent } from './components/cards/card-status/card-status.component';\r\nimport { CardStepComponent } from './components/cards/card-step/card-step.component';\r\nimport { CardWizardComponent } from './components/cards/card-wizard/card-wizard.component';\r\nimport { CardUserComponent } from './components/cards/card-user/card-user.component';\r\nimport { CardFilterComponent } from './components/cards/card-filter/card-filter.component';\r\n\r\nimport { ColorDirective } from './utilities/directives/color.directive';\r\nimport { SizeDirective } from './utilities/directives/size.directive';\r\nimport { ButtonDirective } from './utilities/directives/button.directive';\r\nimport { VariantDirective } from './utilities/directives/variant.directive';\r\n\r\nimport { StepperComponent } from './components/stepper/stepper.component';\r\n\r\nimport { FormComponent } from './components/form/form/form.component';\r\nimport { FormInputComponent } from './components/form/form-input/form-input.component';\r\nimport { FormGroupComponent } from './components/form/form-group/form-group.component';\r\nimport { FormAutocompleteComponent } from './components/form/form-autocomplete/form-autocomplete.component';\r\nimport { FormUploadComponent } from './components/form/form-upload/form-upload.component';\r\n\r\nimport { ExpandPanelComponent } from './components/expand-panel/expand-panel.component';\r\nimport { MenuItemComponent } from './components/menu-item/menu-item.component';\r\nimport { ListItemComponent } from './components/list-item/list-item.component';\r\n\r\nimport { FormExComponent } from './examples/form-ex/form-ex.component';\r\nimport { InputExComponent } from './examples/input-ex/input-ex.component';\r\nimport { TableExComponent } from './examples/table-ex/table-ex.component';\r\nimport { StepperExComponent } from './examples/stepper-ex/stepper-ex.component';\r\nimport { FiltersExComponent } from './examples/filters-ex/filters-ex.component';\r\nimport { DashboardExComponent } from './examples/dashboard-ex/dashboard-ex.component';\r\n\r\nimport { AreaPipe } from './utilities/pipes/area.pipe';\r\nimport { FormatPipe } from './utilities/pipes/format.pipe';\r\n\r\nimport { ColumnFormComponent } from './components/columns/column-form/column-form.component';\r\nimport { StatusComponent } from './components/status/status.component';\r\nimport { LayoutComponent } from './screens/layout/layout.component';\r\nimport { LayoutExComponent } from './examples/layout-ex/layout-ex.component';\r\nimport { UnderlineDirective } from './utilities/directives/underline.directive';\r\nimport { FormRadioComponent } from './components/form/form-radio/form-radio.component';\r\nimport { ColumnFilterComponent } from './components/columns/column-filter/column-filter.component';\r\nimport { BorderDirective } from './utilities/directives/border.directive';\r\n\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { FormuploadExComponent } from './examples/formupload-ex/formupload-ex.component';\r\nimport { FormautocompleteExComponent } from './examples/formautocomplete-ex/formautocomplete-ex.component';\r\nimport { NavbarBottomComponent } from './components/navbar-bottom/navbar-bottom.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n\r\n    // SCREEN COMPS\r\n    DashboardComponent,\r\n    LayoutComponent,\r\n\r\n    // SHARED COMPS\r\n    IconComponent,\r\n    TypographyComponent,\r\n    ListItemComponent,\r\n    ExpandPanelComponent,\r\n\r\n    // FORM COMPS\r\n    FormComponent,\r\n    FormInputComponent,\r\n    FormGroupComponent,\r\n    FormRadioComponent,\r\n    FormAutocompleteComponent,\r\n    FormUploadComponent,\r\n\r\n    // TABLE COMPS\r\n    PaginationComponent,\r\n    TableComponent,\r\n    ColumnFilterComponent,\r\n    ColumnFormComponent,\r\n\r\n    // CARD COMPS\r\n    CardDashboardComponent,\r\n    CardStatusComponent,\r\n    CardStepComponent,\r\n    CardWizardComponent,\r\n    CardUserComponent,\r\n    CardFilterComponent,\r\n\r\n    // NAVIGATION COMPS\r\n    MenuComponent,\r\n    MenuItemComponent,\r\n    NavbarComponent,\r\n    NavbarBottomComponent,\r\n    StepperComponent,\r\n\r\n    // DIRECTIVES\r\n    VariantDirective,\r\n    SizeDirective,\r\n    ColorDirective,\r\n    SizeDirective,\r\n    ButtonDirective,\r\n    VariantDirective,\r\n    UnderlineDirective,\r\n    BorderDirective,\r\n\r\n    StatusComponent,\r\n\r\n \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgxPaginationModule,\r\n  ],\r\n  providers: [AreaPipe, DecimalPipe, DatePipe, FormatPipe],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "BorderDirective"
                        },
                        {
                            "name": "ButtonDirective"
                        },
                        {
                            "name": "CardDashboardComponent"
                        },
                        {
                            "name": "CardFilterComponent"
                        },
                        {
                            "name": "CardStatusComponent"
                        },
                        {
                            "name": "CardStepComponent"
                        },
                        {
                            "name": "CardUserComponent"
                        },
                        {
                            "name": "CardWizardComponent"
                        },
                        {
                            "name": "ColorDirective"
                        },
                        {
                            "name": "ColumnFilterComponent"
                        },
                        {
                            "name": "ColumnFormComponent"
                        },
                        {
                            "name": "DashboardComponent"
                        },
                        {
                            "name": "ExpandPanelComponent"
                        },
                        {
                            "name": "FormAutocompleteComponent"
                        },
                        {
                            "name": "FormComponent"
                        },
                        {
                            "name": "FormGroupComponent"
                        },
                        {
                            "name": "FormInputComponent"
                        },
                        {
                            "name": "FormRadioComponent"
                        },
                        {
                            "name": "FormUploadComponent"
                        },
                        {
                            "name": "IconComponent"
                        },
                        {
                            "name": "LayoutComponent"
                        },
                        {
                            "name": "ListItemComponent"
                        },
                        {
                            "name": "MenuComponent"
                        },
                        {
                            "name": "MenuItemComponent"
                        },
                        {
                            "name": "NavbarBottomComponent"
                        },
                        {
                            "name": "NavbarComponent"
                        },
                        {
                            "name": "PaginationComponent"
                        },
                        {
                            "name": "SizeDirective"
                        },
                        {
                            "name": "SizeDirective"
                        },
                        {
                            "name": "StatusComponent"
                        },
                        {
                            "name": "StepperComponent"
                        },
                        {
                            "name": "TableComponent"
                        },
                        {
                            "name": "TypographyComponent"
                        },
                        {
                            "name": "UnderlineDirective"
                        },
                        {
                            "name": "VariantDirective"
                        },
                        {
                            "name": "VariantDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MaterialModule",
            "id": "module-MaterialModule-4b89e6faf089b15bf042df1e4e487813",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/lib-kakal-ui/src/lib/material/material.module.ts",
            "methods": [],
            "sourceCode": "import { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\n\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { NgxMatFileInputModule } from '@angular-material-components/file-input';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  exports: [\r\n    LayoutModule,\r\n    MatGridListModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatCardModule,\r\n\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n\r\n    MatRadioModule,\r\n    MatAutocompleteModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n\r\n    MatExpansionModule,\r\n    MatBadgeModule,\r\n    MatCheckboxModule,\r\n    MatTooltipModule,\r\n    FlexLayoutModule,\r\n    NgxMatFileInputModule\r\n  ],\r\n})\r\nexport class MaterialModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "id": "module-SharedModule-8abb25f72a42239fb7434344c7e9e821",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/lib-kakal-ui/src/lib/app/shared/shared.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MaterialModule } from '../../material/material.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MaterialModule\r\n  ], exports : [\r\n  ]\r\n})\r\nexport class SharedModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Accordion",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Actions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ADD_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\r\n<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"27.481\" height=\"27.481\"\r\nviewBox=\"0 0 27.481 27.481\"><defs>\r\n<style>.add{fill:\"none\";}</style></defs>\r\n<path class=\"add\" d=\"M9.993,0H2.5A2.5,2.5,0,0,0,0,2.5V9.993a2.5,2.5,0,0,0,2.5,2.5H9.993a2.5,2.5,0,0,0,2.5-2.5V2.5A2.5,2.5,0,0,0,9.993,0Zm1.249,9.993a1.251,1.251,0,0,1-1.249,1.249H2.5A1.251,1.251,0,0,1,1.249,9.993V2.5A1.251,1.251,0,0,1,2.5,1.249H9.993A1.251,1.251,0,0,1,11.242,2.5Z\"/>\r\n<path class=\"add\" d=\"M265.993,0H258.5A2.5,2.5,0,0,0,256,2.5V9.993a2.5,2.5,0,0,0,2.5,2.5h7.495a2.5,2.5,0,0,0,2.5-2.5V2.5A2.5,2.5,0,0,0,265.993,0Zm1.249,9.993a1.251,1.251,0,0,1-1.249,1.249H258.5a1.251,1.251,0,0,1-1.249-1.249V2.5A1.251,1.251,0,0,1,258.5,1.249h7.495A1.251,1.251,0,0,1,267.242,2.5Z\" transform=\"translate(-241.01)\"/>\r\n<path class=\"add\" d=\"M9.993,256H2.5A2.5,2.5,0,0,0,0,258.5v7.495a2.5,2.5,0,0,0,2.5,2.5H9.993a2.5,2.5,0,0,0,2.5-2.5V258.5A2.5,2.5,0,0,0,9.993,256Zm1.249,9.993a1.251,1.251,0,0,1-1.249,1.249H2.5a1.251,1.251,0,0,1-1.249-1.249V258.5A1.251,1.251,0,0,1,2.5,257.249H9.993a1.251,1.251,0,0,1,1.249,1.249Z\" transform=\"translate(0 -241.01)\"/>\r\n<path class=\"add\" d=\"M305.535,301.789h-2.5v-2.5a.625.625,0,0,0-1.249,0v2.5h-2.5a.625.625,0,0,0,0,1.249h2.5v2.5a.625.625,0,0,0,1.249,0v-2.5h2.5a.625.625,0,1,0,0-1.249Z\" transform=\"translate(-281.177 -281.178)\"/>\r\n</svg>`"
            },
            {
                "name": "Advanced",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ASSETS_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\r\n<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"76.154\" height=\"55\" viewBox=\"0 0 76.154 55\"><defs>\r\n<style>.a-assets{fill:\"none\";}.b-assets{fill:none;stroke:\"none\";stroke-width:2px;}</style>\r\n</defs><g transform=\"translate(-112 -88)\">\r\n<path class=\"a-assets\" d=\"M188.154,138.769h-6.346V109.154H164.885V88H135.269v21.154H118.346v29.615H112V143h76.154Zm-10.577-25.385v25.385H164.885V113.385ZM160.654,92.231v46.538h-4.231V121.846H143.731v16.923H139.5V92.231Zm-8.462,46.538h-4.231V126.077h4.231Zm-29.615-25.385h12.692v25.385H122.577Z\" transform=\"translate(0 0)\"/>\r\n<path class=\"b-assets\" d=\"M232,120h4.278v4.278H232Z\" transform=\"translate(-88.29 -23.546)\"/>\r\n<path class=\"b-assets\" d=\"M264,120h4.278v4.278H264Z\" transform=\"translate(-111.834 -23.546)\"/>\r\n<path class=\"b-assets\" d=\"M232,152h4.278v4.278H232Z\" transform=\"translate(-88.29 -47.093)\"/>\r\n<path class=\"b-assets\" d=\"M264,152h4.278v4.278H264Z\" transform=\"translate(-111.834 -47.093)\"/>\r\n<path class=\"b-assets\" d=\"M232,184h4.278v4.278H232Z\" transform=\"translate(-88.29 -70.639)\"/>\r\n<path class=\"b-assets\" d=\"M264,184h4.278v4.278H264Z\" transform=\"translate(-111.834 -70.639)\"/></g></svg>\r\n`"
            },
            {
                "name": "Autocomplete",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/FormInput.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BED_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"36\" height=\"27.316\"\r\nviewBox=\"0 0 36 27.316\"><defs>\r\n<style>.bed{fill:\"none\";}</style></defs><g transform=\"translate(-4 -62.751)\">\r\n<path class=\"bed\" d=\"M35.106,74.882H34.6a2.45,2.45,0,0,0-1.409.444V74.169a2.4,2.4,0,0,0-2.395-2.395H23.9c-.291,0-.012,1.1,0,1.055h6.894a1.341,1.341,0,0,1,1.34,1.34v3.745H13.178V74.169a1.341,1.341,0,0,1,1.34-1.34H23.9c.291,0,.291-1.055,0-1.055l-15.944.04c.621-1.126.39-3.8.187-4.556-.075-.281-.043-.065,0,0l-.372-1.388a2.524,2.524,0,0,0-3.9-1.4v-.256A2.467,2.467,0,0,0,1.4,61.751H.894A.9.9,0,0,0,0,62.645V88.174a.9.9,0,0,0,.894.894h2.08a.9.9,0,0,0,.894-.894V83.311h.6c.291,0,.291-1.055,0-1.055h-.6V78.969H32.133v3.287H4.464c-.291,0-.291,1.055,0,1.055H32.133v4.862a.9.9,0,0,0,.894.894h2.08A.9.9,0,0,0,36,88.174v-12.4A.894.894,0,0,0,35.106,74.882ZM3.913,70.96a2.508,2.508,0,0,0,.491.953,2.388,2.388,0,0,0-.537.272v-1.4Zm-1.1,17.052H1.055V62.806H1.4a1.411,1.411,0,0,1,1.409,1.409ZM3.867,74.169a1.341,1.341,0,0,1,1.34-1.34H9.745a2.381,2.381,0,0,0-.411,1.34v3.745H3.867ZM34.945,88.013H33.187V77.346A1.411,1.411,0,0,1,34.6,75.937h.349Z\" transform=\"translate(4 1)\"/></g>\r\n</svg>`"
            },
            {
                "name": "BELL_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\"\r\n width=\"20.107\" height=\"22.307\" viewBox=\"0 0 20.107 22.307\">\r\n <defs><style>.bell{fill:#448ecd;}</style></defs>\r\n <g transform=\"translate(-25.25)\"><g transform=\"translate(32.336)\"><path class=\"bell\"\r\n  d=\"M190.857,0a2.971,2.971,0,0,0-2.968,2.968v.9h1.535v-.9a1.433,1.433,0,0,1,2.865,0v.9h1.535v-.9A2.971,2.971,0,0,0,190.857,0Z\"\r\n   transform=\"translate(-187.89)\"/></g><g transform=\"translate(31.671 18.7)\"><path class=\"bell\"\r\n    d=\"M178.354,429.2a2.075,2.075,0,0,1-2.072,2.072h-.051a2.075,2.075,0,0,1-2.072-2.072h-1.535a3.611,3.611,0,0,0,3.607,3.607h.051a3.611,3.611,0,0,0,3.607-3.607Z\" transform=\"translate(-172.624 -429.205)\"/>\r\n    </g><g transform=\"translate(25.25 2.84)\"><path class=\"bell\" d=\"M45.235,80.748l-2.18-3.392V73a7.752,7.752,0,1,0-15.5,0v4.354l-2.18,3.392a.768.768,0,0,0,.645,1.183H44.59a.767.767,0,0,0,.645-1.182ZM27.423,80.4,28.965,78a.767.767,0,0,0,.122-.415V73A6.217,6.217,0,1,1,41.52,73v4.579a.768.768,0,0,0,.122.415l1.542,2.4Z\"\r\n    transform=\"translate(-25.25 -65.174)\"/></g></g></svg>`"
            },
            {
                "name": "BOTTOM_TREE_LOGO",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\r\n    < svg xmlns = \"http://www.w3.org/2000/svg\" xmlns: xlink = \"http://www.w3.org/1999/xlink\"\r\nwidth = \"251.827\" height = \"97.18\" viewBox = \"0 0 251.827 97.18\" >\r\n  <defs><style>.bottom-tree{ opacity: 0.2; fill:#448ecd; }\r\n</style><linearGradient id=\"a\" x1=\"0.5\" x2=\"0.5\" y2=\"1\" gradientUnits=\"objectBoundingBox\">\r\n  < stop offset = \"0\" stop - color=\"#fff\" /> <stop offset=\"1\" stop - color=\"#448ecd\" />\r\n    </linearGradient></defs >\r\n    <path class=\"bottom-tree\" d = \"M813.255,106.665V96.41H785.183l16.449-16.428-4.123-8.908-7.52,7.541V57.4L778.348,45.759V90.237l-23.264,7.541H715.391l19.847-19.846h30.12V66.972H745.512l28.05-28.05-9.571-8.908L744.828,49.177v-26l-9.59-9.592V63.534l-17.8,17.8v-34.2L705.82,58.769V91.6l-12.327,12.305V49.861L728.4,14.954H714.024l-20.53,20.53v-26H681.189v26l-20.53-20.53H646.282l34.907,34.907v54.049L668.862,91.6V58.769L657.241,47.126v34.2l-17.8-17.8V13.587l-9.592,9.592v26L610.712,30.015l-9.592,8.908,28.05,28.05H609.344V77.931h30.1L659.29,97.777H619.6l-23.264-7.541V45.759L584.691,57.4V78.615l-7.519-7.541-4.1,8.908L589.5,96.41H561.428v10.255Z\"\r\ntransform = \"translate(-561.428 -9.485)\" />\r\n  </svg>\r\n    `"
            },
            {
                "name": "BOTTOM_TREE_LOGO_LANDS_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\nwidth=\"251.827\" height=\"97.18\" viewBox=\"0 0 251.827 97.18\"><defs>\r\n<style> .bottom-tree-lands{opacity:0.2;fill:url(#bottom-tree-lands);}</style><linearGradient id=\"bottom-tree-lands\" x1=\"0.5\" x2=\"0.5\" y2=\"1\" gradientUnits=\"objectBoundingBox\">\r\n<stop offset=\"0\" stop-color=\"#fff\"/><stop offset=\"1\" stop-color=\"#d6a348\"/></linearGradient></defs>\r\n<path class=\"bottom-tree-lands\" d=\"M813.255,106.665V96.41H785.183l16.449-16.428-4.123-8.908-7.52,7.541V57.4L778.348,45.759V90.237l-23.264,7.541H715.391l19.847-19.846h30.12V66.972H745.512l28.05-28.05-9.571-8.908L744.828,49.177v-26l-9.59-9.592V63.534l-17.8,17.8v-34.2L705.82,58.769V91.6l-12.327,12.305V49.861L728.4,14.954H714.024l-20.53,20.53v-26H681.189v26l-20.53-20.53H646.282l34.907,34.907v54.049L668.862,91.6V58.769L657.241,47.126v34.2l-17.8-17.8V13.587l-9.592,9.592v26L610.712,30.015l-9.592,8.908,28.05,28.05H609.344V77.931h30.1L659.29,97.777H619.6l-23.264-7.541V45.759L584.691,57.4V78.615l-7.519-7.541-4.1,8.908L589.5,96.41H561.428v10.255Z\" transform=\"translate(-561.428 -9.485)\"/>\r\n</svg>\r\n    `"
            },
            {
                "name": "BUILDING_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\r\n<svg xmlns=\"http://www.w3.org/2000/svg\"\r\n width=\"23.862\" height=\"26.279\"\r\n viewBox=\"0 0 23.862 26.279\">\r\n <defs>\r\n <style>.building{fill\"none\";}</style></defs>\r\n <g transform=\"translate(0.03 0.028)\">\r\n <path class=\"building\" d=\"M25.855,8.861c0-.062-3.944,0-12.933,0-.067-.133,0,1.342,0,6.962-.219-.051-2.727.123-10.891,0-.052-.158-.052-.033,0,17.946-.042.061.079,1.457,0,1.336H25.855ZM3.665,17.437c9.065-.085,9.257-.081,9.257,0V33.769H3.665S3.667,17.353,3.665,17.437Zm10.627-7.178H24.517V33.769H14.292Z\" transform=\"translate(-2.023 -8.861)\"/>\r\n <path class=\"building\" d=\"M298.076,55.12h-.964a.565.565,0,0,0-.565.565v.964a.565.565,0,0,0,.565.565h.964a.565.565,0,0,0,.565-.565v-.964A.564.564,0,0,0,298.076,55.12Z\" transform=\"translate(-278.183 -51.941)\"/>\r\n <path class=\"building\" d=\"M298.076,55.12h-.964a.565.565,0,0,0-.565.565v.964a.565.565,0,0,0,.565.565h.964a.565.565,0,0,0,.565-.565v-.964A.564.564,0,0,0,298.076,55.12Z\" transform=\"translate(-281.949 -51.941)\"/>\r\n <path class=\"building\" d=\"M298.076,55.12h-.964a.565.565,0,0,0-.565.565v.964a.565.565,0,0,0,.565.565h.964a.565.565,0,0,0,.565-.565v-.964A.564.564,0,0,0,298.076,55.12Z\" transform=\"translate(-278.183 -48.941)\"/>\r\n <path class=\"building\" d=\"M298.076,55.12h-.964a.565.565,0,0,0-.565.565v.964a.565.565,0,0,0,.565.565h.964a.565.565,0,0,0,.565-.565v-.964A.564.564,0,0,0,298.076,55.12Z\" transform=\"translate(-281.949 -48.941)\"/>\r\n <path class=\"building\" d=\"M298.076,55.12h-.964a.565.565,0,0,0-.565.565v.964a.565.565,0,0,0,.565.565h.964a.565.565,0,0,0,.565-.565v-.964A.564.564,0,0,0,298.076,55.12Z\" transform=\"translate(-278.183 -45.941)\"/>\r\n <path class=\"building\" d=\"M298.076,55.12h-.964a.565.565,0,0,0-.565.565v.964a.565.565,0,0,0,.565.565h.964a.565.565,0,0,0,.565-.565v-.964A.564.564,0,0,0,298.076,55.12Z\" transform=\"translate(-281.949 -45.941)\"/>\r\n <path class=\"building\" d=\"M298.076,55.12h-.964a.565.565,0,0,0-.565.565v.964a.565.565,0,0,0,.565.565h.964a.565.565,0,0,0,.565-.565v-.964A.564.564,0,0,0,298.076,55.12Z\" transform=\"translate(-278.183 -42.941)\"/>\r\n <path class=\"building\" d=\"M298.076,55.12h-.964a.565.565,0,0,0-.565.565v.964a.565.565,0,0,0,.565.565h.964a.565.565,0,0,0,.565-.565v-.964A.564.564,0,0,0,298.076,55.12Z\" transform=\"translate(-278.183 -39.941)\"/>\r\n <path class=\"building\" d=\"M298.076,55.12h-.964a.565.565,0,0,0-.565.565v.964a.565.565,0,0,0,.565.565h.964a.565.565,0,0,0,.565-.565v-.964A.564.564,0,0,0,298.076,55.12Z\" transform=\"translate(-278.183 -36.941)\"/>\r\n <path class=\"building\" d=\"M298.076,55.12h-.964a.565.565,0,0,0-.565.565v.964a.565.565,0,0,0,.565.565h.964a.565.565,0,0,0,.565-.565v-.964A.564.564,0,0,0,298.076,55.12Z\" transform=\"translate(-281.949 -42.941)\"/>\r\n <path class=\"building\" d=\"M298.076,55.12h-.964a.565.565,0,0,0-.565.565v.964a.565.565,0,0,0,.565.565h.964a.565.565,0,0,0,.565-.565v-.964A.564.564,0,0,0,298.076,55.12Z\" transform=\"translate(-281.949 -39.941)\"/>\r\n <path class=\"building\" d=\"M298.076,55.12h-.964a.565.565,0,0,0-.565.565v.964a.565.565,0,0,0,.565.565h.964a.565.565,0,0,0,.565-.565v-.964A.564.564,0,0,0,298.076,55.12Z\" transform=\"translate(-281.949 -36.941)\"/>\r\n <path class=\"building\" d=\"M75.823,168.92h-.917a.537.537,0,0,0-.537.537v.917a.537.537,0,0,0,.537.537h.917a.537.537,0,0,0,.537-.537v-.917A.537.537,0,0,0,75.823,168.92Z\" transform=\"translate(-70.912 -158.669)\"/>\r\n <path class=\"building\" d=\"M75.823,168.92h-.917a.537.537,0,0,0-.537.537v.917a.537.537,0,0,0,.537.537h.917a.537.537,0,0,0,.537-.537v-.917A.537.537,0,0,0,75.823,168.92Z\" transform=\"translate(-70.912 -150.879)\"/>\r\n <path class=\"building\" d=\"M135.429,168.92h-.917a.537.537,0,0,0-.537.537v.917a.537.537,0,0,0,.537.537h.917a.537.537,0,0,0,.537-.537v-.917A.537.537,0,0,0,135.429,168.92Z\" transform=\"translate(-127.009 -158.669)\"/>\r\n <path class=\"building\" d=\"M135.429,168.92h-.917a.537.537,0,0,0-.537.537v.917a.537.537,0,0,0,.537.537h.917a.537.537,0,0,0,.537-.537v-.917A.537.537,0,0,0,135.429,168.92Z\" transform=\"translate(-127.009 -150.879)\"/>\r\n <path class=\"building\" d=\"M75.823,225.82h-.917a.537.537,0,0,0-.537.537v.917a.537.537,0,0,0,.537.537h.917a.537.537,0,0,0,.537-.537v-.917A.537.537,0,0,0,75.823,225.82Z\" transform=\"translate(-70.912 -212.972)\"/>\r\n <path class=\"building\" d=\"M75.823,282.72h-.917a.537.537,0,0,0-.537.537v.917a.537.537,0,0,0,.537.537h.917a.537.537,0,0,0,.537-.537v-.917A.537.537,0,0,0,75.823,282.72Z\" transform=\"translate(-70.912 -267.275)\"/>\r\n <path class=\"building\" d=\"M135.429,225.82h-.917a.537.537,0,0,0-.537.537v.917a.537.537,0,0,0,.537.537h.917a.537.537,0,0,0,.537-.537v-.917A.537.537,0,0,0,135.429,225.82Z\" transform=\"translate(-127.009 -212.972)\"/>\r\n <path class=\"building\" d=\"M135.429,282.72h-.917a.537.537,0,0,0-.537.537v.917a.537.537,0,0,0,.537.537h.917a.537.537,0,0,0,.537-.537v-.917A.537.537,0,0,0,135.429,282.72Z\" transform=\"translate(-127.009 -267.275)\"/></g></svg>\r\n`"
            },
            {
                "name": "BUS_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"35.137\" height=\"41.803\"\r\nviewBox=\"0 0 35.137 41.803\"><defs><style>\r\n.bus{fill:\"none\";}</style></defs><path\r\nclass=\"bus\" d=\"M33.969,20.911H7.182a1.451,1.451,0,0,1-1.423-1.434,1.865,1.865,0,0,1,.049-.387L7.234,9.136c.121-.647.7-.774,1.4-.774H32.521c.692,0,1.279.116,1.4.76l1.426,10.136a1.479,1.479,0,0,1,.05.315A1.374,1.374,0,0,1,33.969,20.911ZM32.9,32.075a2.662,2.662,0,1,1,2.724-2.667A2.7,2.7,0,0,1,32.9,32.075Zm-24.68,0a2.662,2.662,0,1,1,2.734-2.667A2.694,2.694,0,0,1,8.217,32.075Zm4.7-29.569H29.651v2.51H12.919A1.255,1.255,0,1,1,12.919,2.506Zm23.594,3.84c-.489-2.353-1.916-3.3-4.244-4.248A38.547,38.547,0,0,0,20.508.023,38.822,38.822,0,0,0,8.7,2.1c-2.327.948-3.731,1.895-4.216,4.248l-1.6,13.1v18.2H5.39v1.673c0,3.346,4.183,3.346,4.183,0V37.643H30.488v1.673a2.51,2.51,0,1,0,5.02,0V37.643h2.51v-18.2l-1.5-13.1Z\" transform=\"translate(-2.88 -0.023)\"/>\r\n</svg>`"
            },
            {
                "name": "Button",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BUTTON_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\"\r\n  width=\"26.76\" height=\"26.76\"\r\n  viewBox=\"0 0 26.76 26.76\"><defs>\r\n  <style>.button-icon{fill:\"none\";}</style>\r\n  </defs><g transform=\"translate(0 -1)\">\r\n  <g transform=\"translate(0 1)\">\r\n  <path class=\"button-icon\"\r\n   d=\"M156,161.285a1.057,1.057,0,0,0,1.057,1.057h3.171v3.171a1.057,1.057,0,0,0,2.114,0v-3.171h3.171a1.057,1.057,0,0,0,0-2.114h-3.171v-3.171a1.057,1.057,0,1,0-2.114,0v3.171h-3.171A1.057,1.057,0,0,0,156,161.285Z\" transform=\"translate(-147.905 -147.905)\"/><path class=\"button-icon\" d=\"M134.208,15.2l1.367-.566a1.057,1.057,0,0,0-.809-1.953l-1.367.566a1.057,1.057,0,0,0,.809,1.953Z\" transform=\"translate(-125.819 -11.934)\"/><path class=\"button-icon\" d=\"M13.38,0a1.045,1.045,0,1,0,0,2.091A11.289,11.289,0,1,1,2.091,13.38,1.045,1.045,0,1,0,0,13.38,13.38,13.38,0,1,0,13.38,0Z\"/><path class=\"button-icon\" d=\"M61.027,62.074l1.046-1.046a1.057,1.057,0,1,0-1.495-1.495l-1.046,1.046a1.057,1.057,0,0,0,1.495,1.495Z\" transform=\"translate(-56.093 -56.093)\"/><path class=\"button-icon\" d=\"M13.254,136.148a1.057,1.057,0,0,0,1.381-.572l.566-1.367a1.057,1.057,0,1,0-1.953-.809l-.566,1.367A1.057,1.057,0,0,0,13.254,136.148Z\"\r\n   transform=\"translate(-11.935 -125.82)\"/>\r\n   </svg>`"
            },
            {
                "name": "CALENDAR_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\r\n<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"20.094\" height=\"20.094\" viewBox=\"0 0 20.094 20.094\"><defs>\r\n<style>.calender{fill:\"none\";}</style></defs><g transform=\"translate(21)\">\r\n<g transform=\"translate(-21)\">\r\n<ellipse class=\"calender\" cx=\"0.913\" cy=\"0.609\" rx=\"0.913\" ry=\"0.609\" transform=\"translate(14.208 7.415)\"/>\r\n<path class=\"calender\" d=\"M16.954,1.57h-1.02V.785a.785.785,0,0,0-1.57,0V1.57H10.792V.785a.785.785,0,1,0-1.57,0V1.57H5.691V.785a.785.785,0,0,0-1.57,0V1.57H3.14A3.143,3.143,0,0,0,0,4.709V16.954a3.143,3.143,0,0,0,3.14,3.14h6a.785.785,0,0,0,0-1.57h-6a1.572,1.572,0,0,1-1.57-1.57V4.709A1.572,1.572,0,0,1,3.14,3.14h.981v.785a.785.785,0,0,0,1.57,0V3.14H9.223v.785a.785.785,0,1,0,1.57,0V3.14h3.571v.785a.785.785,0,1,0,1.57,0V3.14h1.02a1.572,1.572,0,0,1,1.57,1.57V9.183a.785.785,0,1,0,1.57,0V4.709A3.143,3.143,0,0,0,16.954,1.57Z\"/>\r\n<path class=\"calender\" d=\"M274.317,270a4.317,4.317,0,1,0,4.317,4.317A4.322,4.322,0,0,0,274.317,270Zm0,7.207a2.89,2.89,0,1,1,2.89-2.89A2.893,2.893,0,0,1,274.317,277.207Z\" transform=\"translate(-258.54 -258.54)\"/>\r\n<path class=\"calender\" d=\"M372.748,331.463h-.321v-.749a.714.714,0,1,0-1.427,0v1.463a.714.714,0,0,0,.714.714h1.035a.714.714,0,1,0,0-1.427Z\" transform=\"translate(-355.937 -316.828)\"/>\r\n<ellipse class=\"calender\" cx=\"0.913\" cy=\"0.609\" rx=\"0.913\" ry=\"0.609\" transform=\"translate(10.825 7.415)\"/>\r\n<circle class=\"calender\" cx=\"0.913\" cy=\"0.913\" r=\"0.913\" transform=\"translate(7.442 10.825)\"/>\r\n<circle class=\"calender\" cx=\"0.609\" cy=\"0.609\" r=\"0.609\" transform=\"translate(4.045 7.415)\"/>\r\n<ellipse class=\"calender\" cx=\"0.609\" cy=\"0.913\" rx=\"0.609\" ry=\"0.913\" transform=\"translate(4.045 10.825)\"/>\r\n<ellipse class=\"calender\" cx=\"0.609\" cy=\"0.913\" rx=\"0.609\" ry=\"0.913\" transform=\"translate(4.045 14.208)\"/>\r\n<circle class=\"calender\" cx=\"0.913\" cy=\"0.913\" r=\"0.913\" transform=\"translate(7.442 14.208)\"/>\r\n<ellipse class=\"calender\" cx=\"0.913\" cy=\"0.609\" rx=\"0.913\" ry=\"0.609\" transform=\"translate(7.442 7.415)\"/></g></g></svg>\r\n`"
            },
            {
                "name": "CardDashboardTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Cards.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CardDashboardComponent>",
                "defaultValue": "(\r\n  args: CardDashboardComponent\r\n) => ({\r\n  props: args,\r\n  template: `\r\n    <div style='\r\n    height: 100px;\r\n    background: black;\r\n    width: 100px;\r\n    border-radius: 12px;\r\n    margin: 0 auto;'>\r\n    <app-card-dashboard ${Object.keys(args).reduce(\r\n      (acc, key) =>\r\n        `${acc} [${key}]='${\r\n          typeof args[key] === 'object' ? JSON.stringify(args[key]) : args[key]\r\n        }'`,\r\n      ''\r\n    )}>\r\n    </app-card-dashboard>\r\n    </div>`,\r\n})"
            },
            {
                "name": "CardStatusTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Cards.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CardStatusComponent>",
                "defaultValue": "(\r\n  args: CardStatusComponent\r\n) => ({\r\n  props: args,\r\n  template: `\r\n    <div style='    flex-direction: row;\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    place-content: center;\r\n    align-items: center;'>\r\n    <app-card-status ${Object.keys(args).reduce(\r\n      (acc, key) =>\r\n        `${acc} [${key}]='${\r\n          typeof args[key] === 'object' ? JSON.stringify(args[key]) : args[key]\r\n        }'`,\r\n      ''\r\n    )}></app-card-status>\r\n    </div>`,\r\n})"
            },
            {
                "name": "CardStepTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Cards.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CardStepComponent>",
                "defaultValue": "(\r\n  args: CardStepComponent\r\n) => ({\r\n  props: args,\r\n  template: `<app-card-step ${Object.keys(args).reduce(\r\n    (acc, key) =>\r\n      `${acc} [${key}]='${\r\n        typeof args[key] === 'object' ? JSON.stringify(args[key]) : args[key]\r\n      }'`,\r\n    ''\r\n  )}></app-card-step>`,\r\n})"
            },
            {
                "name": "CardUserTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Cards.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CardUserComponent>",
                "defaultValue": "(args: CardUserComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "CardWizardTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Cards.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CardWizardComponent>",
                "defaultValue": "(\r\n  args: CardWizardComponent\r\n) => ({\r\n  props: args,\r\n  template: `<app-card-wizard ${Object.keys(args).reduce(\r\n    (acc, key) =>\r\n      `${acc} [${key}]='${\r\n        typeof args[key] === 'object' ? JSON.stringify(args[key]) : args[key]\r\n      }'`,\r\n    ''\r\n  )}></app-card-wizard>`,\r\n})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "CustomButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/NavbarBottom.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Dashboard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Cards.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "CardDashboardTemplate.bind({})"
            },
            {
                "name": "Dashboard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/screens/Dashboard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/CardUser.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/DatePicker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Calendar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/ExpandPanel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/FormAutoComplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Navbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/NavbarBottom.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Pagination.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/FormUpLoad.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/screens/Login.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Defualt",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/screens/Layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DESTINATION_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\r\n<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"26.76\" height=\"26.76\"\r\nviewBox=\"0 0 26.76 26.76\"><defs>\r\n<style>.destination{fill:\"none\";}</style>\r\n</defs>\r\n<g transform=\"translate(0 -2.388)\">\r\n<g transform=\"translate(0 2.388)\"><path\r\nd=\"M325.218,255.626v-1.493h.32a.32.32,0,0,0,.32-.32V252.32a.32.32,0,0,0-.32-.32H322.6a.32.32,0,0,0-.25.12l-.6.747a.32.32,0,0,0,0,.4l.6.747a.32.32,0,0,0,.25.12h1.339v1.493Z\" transform=\"translate(-304.835 -238.895)\"/><path class=\"destination\" d=\"M213.108,181.28h6.318a.64.64,0,0,0,0-1.28h-7.919A7.864,7.864,0,0,1,213.108,181.28Z\" transform=\"translate(-200.495 -170.711)\"/><path class=\"destination\" d=\"M199.491,332h-6.65a9.1,9.1,0,0,1-.4,1.28h7.052a3.419,3.419,0,1,1,.009,6.838l-10.885.042a.64.64,0,1,0,0,1.28h0l10.884-.042a4.7,4.7,0,0,0-.014-9.4Z\" transform=\"translate(-178.337 -314.68)\"/><path class=\"destination\" d=\"M281.154,109.68a1.454,1.454,0,0,0,1.454-1.454c0-.8-.789-2.226-1.454-2.226s-1.454,1.423-1.454,2.226A1.454,1.454,0,0,0,281.154,109.68Z\" transform=\"translate(-265.053 -100.641)\"/><path class=\"destination\" d=\"M223.235,109.68a1.454,1.454,0,0,0,1.454-1.454c0-.8-.789-2.226-1.454-2.226s-1.454,1.423-1.454,2.226A1.454,1.454,0,0,0,223.235,109.68Z\" transform=\"translate(-210.185 -100.641)\"/><path class=\"destination\" d=\"M328.219,388c0-1.082-1.064-3-1.959-3s-1.959,1.918-1.959,3a1.959,1.959,0,0,0,3.919,0Z\" transform=\"translate(-307.313 -364.854)\"/><path class=\"destination\" d=\"M248.178,389.96A1.959,1.959,0,0,0,250.137,388c0-1.082-1.064-3-1.959-3s-1.959,1.918-1.959,3A1.959,1.959,0,0,0,248.178,389.96Z\" transform=\"translate(-233.341 -364.854)\"/><path class=\"destination\" d=\"M8.749,170.984a7.177,7.177,0,0,0-7.168,7.168c0,4.488,6.462,10.44,6.737,10.691a.64.64,0,0,0,.863,0c.275-.251,6.737-6.2,6.737-10.691A7.177,7.177,0,0,0,8.749,170.984Zm0,11.861a4.693,4.693,0,1,1,4.693-4.693,4.693,4.693,0,0,1-4.693,4.693Z\" transform=\"translate(-1.581 -162.251)\"/><path class=\"destination\" d=\"M345.087,15.531a.64.64,0,0,0,.786,0,17.239,17.239,0,0,0,2-1.89,6.659,6.659,0,0,0,2.084-4.161,4.48,4.48,0,0,0-8.959,0,6.659,6.659,0,0,0,2.084,4.161A17.234,17.234,0,0,0,345.087,15.531Zm.393-8.185a2.133,2.133,0,1,1-2.133,2.133A2.133,2.133,0,0,1,345.48,7.346Z\"\r\ntransform=\"translate(-323.2 -5)\"/>\r\n</svg>`"
            },
            {
                "name": "details",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/examples/form-ex/mock-qustions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Question[]",
                "defaultValue": "[\r\n  {\r\n    key: 'supplier',\r\n    label: 'ספק',\r\n    controlType: 'select',\r\n    options: [\r\n      { label: 'solid', value: 'solid' },\r\n      { label: 'great', value: 'great' },\r\n    ],\r\n  },\r\n  {\r\n    key: 'item',\r\n    label: 'בחר פריט',\r\n    controlType: 'select',\r\n    options: [\r\n      { label: 'solid', value: '12123' },\r\n      { label: 'great', value: '23' },\r\n      { label: 'good', value: '123' },\r\n      { label: 'unproven', value: '123123123' },\r\n    ],\r\n  },\r\n\r\n  {\r\n    key: 'quantity',\r\n    label: 'כמות',\r\n    value: '',\r\n  },\r\n\r\n  {\r\n    key: 'participants',\r\n    label: 'משתתפים',\r\n    value: '',\r\n  },\r\n\r\n  {\r\n    key: 'price',\r\n    label: 'מחיר',\r\n    value: '',\r\n    controlType: 'number',\r\n  },\r\n\r\n  {\r\n    key: 'supplierCost',\r\n    label: 'חיוב ספק',\r\n    value: '',\r\n  },\r\n\r\n  {\r\n    key: 'customerCost',\r\n    label: 'חיוב לקוח',\r\n    value: '',\r\n  },\r\n\r\n  {\r\n    key: 'total',\r\n    label: 'סה\"כ',\r\n    value: '',\r\n  },\r\n]"
            },
            {
                "name": "DINNER_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"53.276\" height=\"42.869\"\r\nviewBox=\"0 0 53.276 42.869\"><defs>\r\n<style>.dinner{fill:\"none\";}</style></defs><g transform=\"translate(0 -50.008)\">\r\n<g transform=\"translate(9.846 52.807)\">\r\n<path class=\"dinner\" d=\"M112.264,76.909a17.644,17.644,0,1,0,17.644,17.644A17.644,17.644,0,0,0,112.264,76.909Zm0,31.031a13.388,13.388,0,1,1,13.388-13.388A13.4,13.4,0,0,1,112.264,107.94Z\" transform=\"translate(-94.62 -76.909)\"/></g><g transform=\"translate(17.69 60.652)\">\r\n<path class=\"dinner\" d=\"M179.808,152.3a9.8,9.8,0,1,0,9.8,9.8A9.81,9.81,0,0,0,179.808,152.3Z\" transform=\"translate(-170.009 -152.299)\"/></g><g transform=\"translate(47.176 50.008)\">\r\n<path class=\"dinner\" d=\"M458.361,71.93V50.49a.482.482,0,0,0-.866-.291,20.292,20.292,0,0,0-4.123,12.261V70.3A1.629,1.629,0,0,0,455,71.932h.679c-.669,6.914-1.112,16.583-1.112,17.716,0,1.784,1.1,3.23,2.452,3.23s2.452-1.446,2.452-3.23C459.473,88.515,459.03,78.844,458.361,71.93Z\" transform=\"translate(-453.372 -50.008)\"/></g><g transform=\"translate(0 51.929)\">\r\n<path class=\"dinner\" d=\"M7.119,84.222a4.688,4.688,0,0,0,2.264-4.015l-.672-10.99a.794.794,0,0,0-1.586.088l.437,8.814a.9.9,0,1,1-1.794,0L5.55,69.308a.858.858,0,0,0-1.716,0l-.218,8.811a.9.9,0,1,1-1.794,0L2.258,69.3a.794.794,0,0,0-1.586-.088L0,80.207a4.688,4.688,0,0,0,2.264,4.015,2.653,2.653,0,0,1,1.262,2.562c-.766,6.9-1.286,18.178-1.286,19.406,0,1.784,1.1,3.23,2.452,3.23s2.452-1.446,2.452-3.23c0-1.228-.52-12.5-1.286-19.406A2.654,2.654,0,0,1,7.119,84.222Z\" transform=\"translate(0 -68.471)\"/></g></g></svg>`"
            },
            {
                "name": "EDIT_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\"\r\n width=\"12.228\" height=\"12.228\"\r\n viewBox=\"0 0 12.228 12.228\"><defs><style>.edit{fill:\"none\";}</style></defs><path class=\"edit\"\r\n  d=\"M4.5,14.177v2.547H7.047L14.56,9.212,12.013,6.665ZM16.53,7.242a.676.676,0,0,0,0-.958L14.94,4.695a.676.676,0,0,0-.958,0L12.739,5.938l2.547,2.547L16.53,7.242Z\"\r\n   transform=\"translate(-4.5 -4.496)\"/></svg>`"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true\r\n}"
            },
            {
                "name": "EVALUATION_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"50\" height=\"28.626\" viewBox=\"0 0 28.626 28.626\" style=\"transform: translateX(.24rem)\">\r\n<defs><style>.evaluation{fill:\"none\" } </style></defs><g >\r\n<g>\r\n<path class=\"evaluation\" d=\"M27.9,9.009a2.519,2.519,0,0,0-3.558,0l-2.523,2.525V4.888a2.5,2.5,0,0,0-.737-1.779L18.714.737A2.5,2.5,0,0,0,16.935,0H2.534A2.519,2.519,0,0,0,.018,2.516V26.11a2.519,2.519,0,0,0,2.516,2.516H19.307a2.519,2.519,0,0,0,2.516-2.516V18.653L27.9,12.567A2.514,2.514,0,0,0,27.9,9.009ZM16.791,1.677a.915.915,0,0,1,.737.246L19.9,4.295a.915.915,0,0,1,.246.737H16.791ZM20.146,26.11a.84.84,0,0,1-.839.839H2.534A.84.84,0,0,1,1.7,26.11V2.516a.84.84,0,0,1,.839-.839h12.58V5.871a.839.839,0,0,0,.839.839h4.193v6.5l-2.474,2.476-1.185,1.186a.839.839,0,0,0-.2.328L15.1,20.761a.839.839,0,0,0,1.061,1.061l3.558-1.186a.838.838,0,0,0,.328-.2l.1-.1V26.11Zm-1.881-8.642,1.186,1.186L19,19.107l-1.779.593.593-1.779Zm2.372,0-1.186-1.186,4.031-4.035,1.186,1.186Zm6.081-6.087-.865.865L24.667,11.06l.865-.866a.839.839,0,1,1,1.186,1.186Z\" transform=\"translate(-0.018 0)\"/></g><g transform=\"translate(3.373 8.386)\">\r\n<path class=\"evaluation\" d=\"M72.6,150H60.857a.839.839,0,1,0,0,1.677H72.6a.839.839,0,1,0,0-1.677Z\" transform=\"translate(-60.018 -150)\"/></g><g transform=\"translate(3.373 11.741)\">\r\n<path class=\"evaluation\" d=\"M69.243,210H60.857a.839.839,0,0,0,0,1.677h8.386a.839.839,0,1,0,0-1.677Z\" transform=\"translate(-60.018 -210)\"/></g><g transform=\"translate(3.373 15.096)\">\r\n<path class=\"evaluation\" d=\"M69.243,270H60.857a.839.839,0,1,0,0,1.677h8.386a.839.839,0,1,0,0-1.677Z\" transform=\"translate(-60.018 -270)\"/></g><g transform=\"translate(3.373 18.45)\">\r\n<path class=\"evaluation\" d=\"M69.243,330H60.857a.839.839,0,1,0,0,1.677h8.386a.839.839,0,1,0,0-1.677Z\" transform=\"translate(-60.018 -330)\"/></g><g transform=\"translate(10.082 23.594)\">\r\n<path class=\"evaluation\" d=\"M185.889,422h-5.032a.839.839,0,1,0,0,1.677h5.032a.839.839,0,1,0,0-1.677Z\" transform=\"translate(-180.018 -422)\"/></g></g>\r\n</svg>`"
            },
            {
                "name": "ExpandByCell",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Filters",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Filters.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "FLAG_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\r\n<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"38.03\" height=\"34.092\" viewBox=\"0 0 38.03 34.092\"><defs>\r\n<style>.flag{fill:\"none\";}</style>\r\n</defs><g transform=\"translate(0 -26.508)\"><path class=\"flag\" d=\"M194.809,168.062c-.291,0-.579.011-.869.017l1.316,4.05c.514-.018,1.023-.029,1.528-.037,1.032-.016,2.05-.043,3.1-.149l-1.329-4.089A34.4,34.4,0,0,1,194.809,168.062Z\" transform=\"translate(-179.535 -130.847)\"/><path class=\"flag\" d=\"M167.565,80.907c-.557.009-1.036.07-1.554.106l1.357,4.177c.522-.018,1.039-.03,1.552-.038,1.024-.016,2.035-.043,3.074-.147l-1.4-4.307A27.432,27.432,0,0,1,167.565,80.907Z\" transform=\"translate(-153.68 -50.165)\"/><path class=\"flag\" d=\"M263.084,58.926l-1.363-4.2a16.944,16.944,0,0,1-4.188,1.532l1.409,4.337A16.786,16.786,0,0,0,263.084,58.926Z\" transform=\"translate(-238.404 -26.127)\"/><path class=\"flag\" d=\"M104.7,173.841l1.341,4.126a17.394,17.394,0,0,1,4.319-1.129l-1.33-4.092A15.394,15.394,0,0,0,104.7,173.841Z\" transform=\"translate(-96.927 -135.376)\"/><path class=\"flag\" d=\"M26.758,207.232a33.535,33.535,0,0,1,3.885-2.467l-1.332-4.1a43.371,43.371,0,0,0-3.862,2.536Z\" transform=\"translate(-23.559 -161.222)\"/><path class=\"flag\" d=\"M291.272,144.245l-1.332-4.1a18.792,18.792,0,0,1-4.151,1.648l1.342,4.129A16.8,16.8,0,0,0,291.272,144.245Z\" transform=\"translate(-264.562 -105.197)\"/><path class=\"flag\" d=\"M225.929,252.063a34.285,34.285,0,0,1-3.767.212c-.283,0-.563.011-.844.017l1.379,4.245c.273-.006.546-.013.821-.017a34.256,34.256,0,0,0,3.789-.219Z\" transform=\"translate(-204.878 -208.801)\"/><path class=\"flag\" d=\"M318.664,228.5l-1.382-4.252a18.825,18.825,0,0,1-4.149,1.651l1.372,4.224A15.651,15.651,0,0,0,318.664,228.5Z\" transform=\"translate(-289.874 -183.051)\"/><path class=\"flag\" d=\"M132.054,258.088l1.377,4.238a15.478,15.478,0,0,1,4.334-1.084L136.386,257A15.466,15.466,0,0,0,132.054,258.088Z\" transform=\"translate(-122.245 -213.37)\"/><path class=\"flag\" d=\"M52.764,287.331l.91,2.8a1.115,1.115,0,0,0,1.7.574A26.418,26.418,0,0,1,58,289.034L56.627,284.8A42.314,42.314,0,0,0,52.764,287.331Z\" transform=\"translate(-48.845 -239.106)\"/><path class=\"flag\" d=\"M77.053,89.109l1.364,4.2a17.406,17.406,0,0,1,4.317-1.136l-1.341-4.128A22.977,22.977,0,0,0,77.053,89.109Z\" transform=\"translate(-71.33 -56.964)\"/><path class=\"flag\" d=\"M1.171,121.138a34,34,0,0,1,3.884-2.469L3.67,114.409a28.24,28.24,0,0,0-3.193,2,1.114,1.114,0,0,0-.424,1.255Z\" transform=\"translate(0 -81.372)\"/><path class=\"flag\" d=\"M353.8,60.545a1.114,1.114,0,0,0,.715-1.4l-10.4-31.863a1.114,1.114,0,0,0-2.119.689l10.4,31.863a1.114,1.114,0,0,0,1.4.715Z\" transform=\"translate(-316.536)\"/></g>\r\n</svg>\r\n`"
            },
            {
                "name": "Foresrty",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/screens/Dashboard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Form",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "GENDER_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\r\n  < svg xmlns = \"http://www.w3.org/2000/svg\" xmlns: xlink = \"http://www.w3.org/1999/xlink\"\r\nwidth = \"47\" height = \"47\" viewBox = \"0 0 47 47\" > <defs>\r\n  <style>\r\n .a - gender{ fill:#fff; opacity: 0.74; }\r\n .b - gender{ fill:#009eee; }\r\n .c - gender{ fill:#d220ba; }\r\n .d - gender{ filter: url(#a); }\r\n</style>\r\n  < filter id = \"a\" x = \"0\" y = \"0\" width = \"47\" height = \"47\" filterUnits = \"userSpaceOnUse\" > <feOffset dy=\"3\" input = \"SourceAlpha\" />\r\n    <feGaussianBlur stdDeviation=\"3\" result = \"b\" /> <feFlood flood - opacity=\"0.161\" /> <feComposite operator=\"in\" in2 = \"b\" /> <feComposite in=\"SourceGraphic\" />\r\n      </filter></defs > <g transform=\"translate(-19 -821.175)\" > <g class=\"d-gender\" transform = \"matrix(1, 0, 0, 1, 19, 821.18)\" >\r\n        <rect class=\"a-gender\" width = \"29\" height = \"29\" rx = \"5\" transform = \"translate(9 6)\" /> </g><g transform=\"translate(35.331 834.183)\">\r\n          < rect class=\"b-gender\" width = \"4\" height = \"4\" transform = \"translate(-0.331 0.993)\" /> <rect class=\"c\" width = \"4\" height = \"4\" transform = \"translate(4.669 0.993)\" />\r\n            <rect class=\"c-gender\" width = \"4\" height = \"4\" transform = \"translate(9.669 0.993)\" /> <rect class=\"b-gender\" width = \"4\" height = \"4\" transform = \"translate(-0.331 5.993)\" />\r\n              <rect class=\"c-gender\" width = \"4\" height = \"4\" transform = \"translate(4.669 5.993)\" /> <rect class=\"c-gender\" width = \"4\" height = \"4\" transform = \"translate(9.669 5.993)\" />\r\n                <rect class=\"b-gender\" width = \"4\" height = \"4\" transform = \"translate(-0.331 10.993)\" /> <rect class=\"b-gender\" width = \"4\" height = \"4\" transform = \"translate(4.669 10.993)\" />\r\n                  <rect class=\"c-gender\" width = \"4\" height = \"4\" transform = \"translate(9.669 10.993)\" /> </g></g >\r\n                    </svg>\r\n                      `"
            },
            {
                "name": "Grid",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "gridDetails",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/examples/form-ex/mock-qustions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "details.map((question: Question) => {\r\n  question.gridProps = { cols: 3 };\r\n\r\n  return question;\r\n})"
            },
            {
                "name": "gridTransport",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/examples/form-ex/mock-qustions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "transport.map((question: Question) => {\r\n  question.gridProps = question.gridProps || { cols: 4 };\r\n\r\n  return question;\r\n})"
            },
            {
                "name": "GROUP_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\r\n                    < svg xmlns = \"http://www.w3.org/2000/svg\" width = \"40.377\" height = \"26.333\" viewBox = \"0 0 40.377 26.333\" >\r\n                      <g id=\"user\" transform = \"translate(0 -85.333)\" >\r\n                        <g id=\"Group_950\" data - name=\"Group 950\" transform = \"translate(14.044 85.333)\" >\r\n                          <g id=\"Group_949\" data - name=\"Group 949\" transform = \"translate(0 0)\" >\r\n                            <path id=\"Path_694\" data - name=\"Path 694\" d = \"M176.81,85.333a6.144,6.144,0,1,0,6.144,6.144A6.151,6.151,0,0,0,176.81,85.333Zm0,10.533a4.389,4.389,0,1,1,4.389-4.389A4.395,4.395,0,0,1,176.81,95.866Z\" transform = \"translate(-170.666 -85.333)\" fill = \"'none'\" />\r\n                              </g>\r\n                              < /g>\r\n                              < g id = \"Group_952\" data - name=\"Group 952\" transform = \"translate(28.088 92.355)\" >\r\n                                <g id=\"Group_951\" data - name=\"Group 951\" transform = \"translate(0 0)\" >\r\n                                  <path id=\"Path_695\" data - name=\"Path 695\" d = \"M345.723,170.667a4.389,4.389,0,1,0,4.389,4.389A4.395,4.395,0,0,0,345.723,170.667Zm0,7.022a2.633,2.633,0,1,1,2.633-2.633A2.636,2.636,0,0,1,345.723,177.689Z\" transform = \"translate(-341.334 -170.667)\" fill = \"'none'\" />\r\n                                    </g>\r\n                                    < /g>\r\n                                    < g id = \"Group_954\" data - name=\"Group 954\" transform = \"translate(3.636 92.355)\" >\r\n                                      <g id=\"Group_953\" data - name=\"Group 953\" transform = \"translate(0 0)\" >\r\n                                        <path id=\"Path_696\" data - name=\"Path 696\" d = \"M48.571,170.667a4.389,4.389,0,1,0,4.389,4.389A4.394,4.394,0,0,0,48.571,170.667Zm0,7.022a2.633,2.633,0,1,1,2.633-2.633A2.636,2.636,0,0,1,48.571,177.689Z\" transform = \"translate(-44.182 -170.667)\" fill = \"'none'\" />\r\n                                          </g>\r\n                                          < /g>\r\n                                          < g id = \"Group_956\" data - name=\"Group 956\" transform = \"translate(8.778 99.377)\" >\r\n                                            <g id=\"Group_955\" data - name=\"Group 955\" transform = \"translate(0 0)\" >\r\n                                              <path id=\"Path_697\" data - name=\"Path 697\" d = \"M118.077,256a11.424,11.424,0,0,0-11.411,11.411.878.878,0,1,0,1.756,0,9.655,9.655,0,0,1,19.311,0,.878.878,0,1,0,1.756,0A11.424,11.424,0,0,0,118.077,256Z\" transform = \"translate(-106.666 -256)\" fill = \"'none'\" />\r\n                                                </g>\r\n                                                < /g>\r\n                                                < g id = \"Group_958\" data - name=\"Group 958\" transform = \"translate(27.963 102.888)\" >\r\n                                                  <g id=\"Group_957\" data - name=\"Group 957\" >\r\n                                                    <path id=\"Path_698\" data - name=\"Path 698\" d = \"M344.327,298.667a7.9,7.9,0,0,0-4.092,1.141.878.878,0,1,0,.911,1.5,6.145,6.145,0,0,1,9.325,5.258.878.878,0,1,0,1.756,0A7.91,7.91,0,0,0,344.327,298.667Z\" transform = \"translate(-339.813 -298.667)\" fill = \"'none'\" />\r\n                                                      </g>\r\n                                                      < /g>\r\n                                                      < g id = \"Group_960\" data - name=\"Group 960\" transform = \"translate(0 102.888)\" >\r\n                                                        <g id=\"Group_959\" data - name=\"Group 959\" >\r\n                                                          <path id=\"Path_699\" data - name=\"Path 699\" d = \"M11.99,299.806A7.9,7.9,0,0,0,0,306.567a.878.878,0,1,0,1.756,0,6.146,6.146,0,0,1,9.324-5.26.878.878,0,1,0,.911-1.5Z\" transform = \"translate(0 -298.667)\" fill = \"'none'\" />\r\n                                                            </g>\r\n                                                            < /g>\r\n                                                            < /g>\r\n                                                            < /svg>\r\n                                                              `"
            },
            {
                "name": "GUIDE_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"34.105\" height=\"48.367\" viewBox=\"0 0 34.105 48.367\"><defs>\r\n<style>.guide{fill:\"none\";}.b-guide{fill:none;stroke:#bababa;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:10;stroke-width:1.142px;}</style>\r\n</defs><ellipse class=\"guide\" cx=\"4.456\" cy=\"4.456\" rx=\"4.456\" ry=\"4.456\" transform=\"translate(10.162 0)\"/>\r\n<path class=\"guide\" d=\"M16.223,7.266c-.165-1.131-1.043-1.811-1.683-1.632l-4.649,1.3c-.639.182-.858,1.666-.678,2.311l3.83,15.727c.188.646.573.966,1.214.781l3.141-.68c2.53-2.083,2.515-3.9,2-6.4Z\" transform=\"translate(4.558 4.924)\"/>\r\n<path class=\"guide\" d=\"M10.428,16.109l.8,5.57s2.049,4.867,3.458,7.726c1.065,2.166,1.567,3.727.834,4.118-1.123.6-2.634-.742-4.215-3.209-2.652-4.137-4.018-6.2-4.529-7.21l-.8-2.626S9.91,17.873,10.428,16.109Z\" transform=\"translate(14.341 14.152)\"/>\r\n<path class=\"guide\" d=\"M10.729,20.474l6.2-6.162c.979-.986,2.44-.522,3.43.458s2.923,1.894,1.948,2.885L14.421,24.3l.874,8.513c.064,2.1-.06,3.317-1.394,3.456-1.245.13-1.794-2.461-1.924-3.116,0,0-1.595-8.155-1.788-9.3S9.878,21.343,10.729,20.474Z\" transform=\"translate(-0.038 12.092)\"/>\r\n<path class=\"guide\" d=\"M16.143,8.78l4.678,2.2,5.893-4.3a2.1,2.1,0,0,1,2.455,3.4l-6.355,4.6a2.4,2.4,0,0,1-2.188.364s-4.364-2.651-5.534-3.413c-1.227-.8-2.51-1.86-2.036-2.746C13.728,7.613,14.952,8.205,16.143,8.78Z\" transform=\"translate(-12.954 5.517)\"/><line class=\"b-guide\" y2=\"35.692\" transform=\"translate(3.347 11.972)\"/>\r\n<path class=\"guide\" d=\"M4.048,7.594s2.788,8.652,3.21,10.028,1.9,2.329,3.981,1.694,4.245-1.51,3.907-3.945c-.37-2.652-2.876-6.175-5.049-8.44S2.96,3.881,4.048,7.594Z\" transform=\"translate(18.923 4.411)\"/>\r\n</svg>`"
            },
            {
                "name": "HOME_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30.237\" height=\"26.954\" viewBox=\"0 0 30.237 26.954\">\r\n  <g id=\"home\" transform=\"translate(0.001 -27.798)\">\r\n    <g id=\"Group_891\" data-name=\"Group 891\" transform=\"translate(-0.001 27.798)\">\r\n      <g id=\"Group_890\" data-name=\"Group 890\" transform=\"translate(0 0)\">\r\n        <path id=\"Path_639\" data-name=\"Path 639\" d=\"M29.915,38.443,15.582,27.949a.785.785,0,0,0-.928,0L.321,38.443a.786.786,0,1,0,.928,1.268L15.118,29.557,28.986,39.711a.786.786,0,0,0,.928-1.268Z\" transform=\"translate(0.001 -27.798)\"\r\n        fill=\"'none'\"/>\r\n      </g>\r\n    </g>\r\n    <g id=\"Group_893\" data-name=\"Group 893\" transform=\"translate(3.333 39.889)\">\r\n      <g id=\"Group_892\" data-name=\"Group 892\" transform=\"translate(0 0)\">\r\n        <path id=\"Path_640\" data-name=\"Path 640\" d=\"M79.235,232.543a.786.786,0,0,0-.786.786v12.505H72.165v-6.826a3.928,3.928,0,0,0-7.857,0v6.826H58.023V233.329a.786.786,0,0,0-1.571,0v13.291a.786.786,0,0,0,.786.786h7.856a.785.785,0,0,0,.783-.724.592.592,0,0,0,0-.061v-7.612a2.357,2.357,0,0,1,4.714,0v7.612a.578.578,0,0,0,0,.06.785.785,0,0,0,.783.725h7.856a.786.786,0,0,0,.786-.786V233.329A.786.786,0,0,0,79.235,232.543Z\" transform=\"translate(-56.452 -232.543)\"\r\n        fill=\"'none'\"/>\r\n      </g>\r\n    </g>\r\n  </g>\r\n</svg>\r\n`"
            },
            {
                "name": "HOME_MAT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "HOME_SVG",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LIST_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"29.56\" height=\"32.535\" viewBox=\"0 0 29.56 32.535\"><defs>\r\n<style>.list{fill:\"\"none\";}</style></defs><g transform=\"translate(-22.3)\"><g transform=\"translate(22.3 0)\">\r\n<path class=\"list\" d=\"M26.163,4.183a.819.819,0,0,0-1.154-.007A.807.807,0,0,0,25,5.33L26.95,7.291a.817.817,0,0,0,.58.24h0a.814.814,0,0,0,.574-.24l5.931-5.9A.814.814,0,1,0,32.887.24L31.092,2.021A5.115,5.115,0,1,0,32.32,7.065a.819.819,0,0,0-1.568-.474,3.492,3.492,0,1,1-.821-3.409L27.537,5.564Z\" transform=\"translate(-22.3 0)\"/>\r\n<path class=\"list\" d=\"M27.417,170.6a5.117,5.117,0,1,0,5.117,5.117A5.122,5.122,0,0,0,27.417,170.6Zm0,8.6a3.482,3.482,0,1,1,3.482-3.482A3.485,3.485,0,0,1,27.417,179.2Z\" transform=\"translate(-22.3 -159.219)\"/>\r\n<path class=\"list\" d=\"M32.533,339.417a5.117,5.117,0,1,0-5.117,5.117A5.122,5.122,0,0,0,32.533,339.417Zm-5.117,3.489a3.482,3.482,0,1,1,3.482-3.482A3.485,3.485,0,0,1,27.417,342.906Z\" transform=\"translate(-22.3 -311.999)\"/>\r\n<path class=\"list\" d=\"M219.218,235h-15.9a.821.821,0,0,0,0,1.641h15.9a.821.821,0,1,0,0-1.641Z\" transform=\"translate(-190.479 -219.323)\"/>\r\n<path class=\"list\" d=\"M219.218,71.5h-15.9a.821.821,0,0,0,0,1.641h15.9a.821.821,0,1,0,0-1.641Z\" transform=\"translate(-190.479 -66.73)\"/>\r\n<path class=\"list\" d=\"M219.218,398.8h-15.9a.821.821,0,1,0,0,1.641h15.9a.821.821,0,1,0,0-1.641Z\" transform=\"translate(-190.479 -372.196)\"/></g></g>\r\n</svg>`"
            },
            {
                "name": "LOCATION_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\r\n<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"18\" height=\"25.609\"\r\nviewBox=\"0 0 18 25.609\">\r\n<defs><style>.location{fill:\"none\";}</style></defs>\r\n<path class=\"location\" d=\"M170.592,99a4.5,4.5,0,1,0-4.5-4.5A4.505,4.505,0,0,0,170.592,99Zm0-7.5a3,3,0,1,1-3,3A3,3,0,0,1,170.592,91.5Z\" transform=\"translate(-161.592 -85.5)\"/>\r\n<path class=\"location\" d=\"M92.562,14.021a9,9,0,1,0-14.941,0l7.47,11.588ZM85.092,1.5a7.5,7.5,0,0,1,6.36,11.475l-6.36,9.866-6.36-9.866A7.5,7.5,0,0,1,85.092,1.5Z\" transform=\"translate(-76.092 0)\"/>\r\n</svg>\r\n`"
            },
            {
                "name": "LOGO_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\r\n\r\n<svg id=\"a40f30f4-7b59-4cc2-b8ab-2f75bedc37aa\" data-name=\"svg2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 285.66 372.46\">\r\n  <defs>\r\n    <style>\r\n      .b2a1ef2a-6793-434d-a7e0-20c88af27ed9 {\r\n        fill: #221f20;\r\n      }\r\n\r\n      .f046d93e-32f3-4ce4-9af7-9ca16d569ad3 {\r\n        fill: #fff;\r\n      }\r\n\r\n      .ee0ddef0-4399-47a0-9b46-7f47d1f34c28 {\r\n        fill: #51b848;\r\n      }\r\n\r\n      .be161e8d-927e-4327-82ae-5dfb3ea4f0d6 {\r\n        fill: #926427;\r\n      }\r\n\r\n      .e0610833-ce90-473b-b097-3aa4f8c2dfec {\r\n        fill: #0572ba;\r\n      }\r\n    </style>\r\n  </defs>\r\n  <g id=\"b5d28e50-a32d-405e-a2b4-83744c5d9f68\" data-name=\"g12\">\r\n    <g id=\"a143c8ea-b8d3-4ff5-9188-125edf6a6c82\" data-name=\"g3312\">\r\n      <path id=\"b29c9843-4db3-4d85-bd5c-514ef3ee3669\" data-name=\"path224\" class=\"b2a1ef2a-6793-434d-a7e0-20c88af27ed9\" d=\"M266.84,305.57h16l-8,18.23h2.92l7.8-18.23v-2.18H266.84ZM270,330.86v-20.5l-2.73,1.6v18.9Zm-17.2-27.47h-6.94v2.17h6.78c3.51,0,5.3,2.5,5.3,6.12V323.8h2.73V312.08c0-6.9-4.06-8.69-7.87-8.69m-12.57,0h-2.72v27.47h2.72Zm-43,2.18h16l-8,18.23h2.92l7.79-18.23v-2.18H197.26Zm3.16,25.29v-20.5L197.7,312v18.9Zm-9.24-16.37v-11.1h-2.72V316l2.72-1.48Zm-28.86-11.1c1.37,3.15,2.73,7.79,2.5,9.7-.08.66-.28,1.4-.35,1.91,0,0-1.52,7.52-1.68,8.8h2.73l1.52-7.6c1.09-5.41,3.27-11.1,7.4-11.1,3.19,0,5.11,4.79,5.11,8.8,0,4.52-1.72,8.23-5.5,8.23a6.42,6.42,0,0,1-3.58-.9v2.34a10.55,10.55,0,0,0,3.7.82c3.31,0,8.18-2.26,8.18-10.56,0-5.42-2.26-10.92-7.67-10.92-4.37,0-6.12,3.31-7.6,6.2a47.66,47.66,0,0,0-1.84-5.72Zm-20.21,16.28v-14.1h6c3.74,0,5,2.76,5,5.88V323.8h2.73V310.6c0-4.1-3-7.21-7.52-7.21H135.48v2.18h3.9V319.2c0,3.75-3.47,2.5-4.33,2.11v2.1c1.37.82,7.06,1.64,7.06-3.74m-29.72-14.1-7.56,18.23h3l7.56-17.88v-2.53H103.24v-6.94H100.5v9.12ZM95,314.49v-11.1H92.28V316L95,314.49Zm-12.55-11.1v9.89c0,6.78-3.74,8.81-8.81,8.81s-6.9-3.43-7.09-5.22a15.29,15.29,0,0,0,6.66-1.8c1-.62,2.53-1.9,2.53-5.21v-6.47H73v6.66c0,2.72-.7,3.12-2,3.9A11.59,11.59,0,0,1,66.32,315V303.39H63.6V315c0,5.46,3.78,9.19,10.13,9.19,7.21,0,11.46-3.08,11.46-11.1v-9.74Zm-33.73,0H41.8v2.17h6.78c3.5,0,5.29,2.5,5.29,6.13V323.8h2.74V312.08c0-6.9-4.06-8.69-7.88-8.69M32.21,315c3.79-2.68,4-5.95,4-9.19v-2.41h-2.8v2.8c0,2.11,0,5.53-2.49,7.13-.59-.59-3.71-4.72-8.34-9.93H19c3.08,3.31,5.65,6.5,5.65,6.5A12.74,12.74,0,0,0,21,314.61c-1.28,3-1,5.65-1.05,9.19h2.77s-.16-6.12.93-8.81a9.23,9.23,0,0,1,2.34-3.5,71.56,71.56,0,0,1,8.65,12.31h3.08A76,76,0,0,0,32.21,315m-20.07-9.42L4.58,323.8h3l7.56-17.88v-2.53H3v-6.94H.26v9.12Z\" transform=\"translate(0 0)\"/>\r\n      <path id=\"edc77653-564b-4e52-b936-af1f34f3da02\" data-name=\"path226\" class=\"f046d93e-32f3-4ce4-9af7-9ca16d569ad3\" d=\"M.27,0H285.66V285.39H.27Z\" transform=\"translate(0 0)\"/>\r\n      <path id=\"a3a1c636-2859-45bb-b8a9-237b3d094d91\" data-name=\"path234\" class=\"ee0ddef0-4399-47a0-9b46-7f47d1f34c28\" d=\"M97.89,171.45,197.41,0h88.25L186.14,171.45ZM31.74,285.39,92.41,180.9v11.57h61.15l-39.23,69V205.77H92.41v79.62Z\" transform=\"translate(0 0)\"/>\r\n      <path id=\"ffc24ad4-3130-4414-807b-83899d7ff7a4\" data-name=\"path238\" class=\"ee0ddef0-4399-47a0-9b46-7f47d1f34c28\" d=\"M114.33,285.39V262.48h19L120,285.39Z\" transform=\"translate(0 0)\"/>\r\n      <path id=\"a1603cb4-0041-4e52-a8e5-cad044e2ebc0\" data-name=\"path250\" class=\"be161e8d-927e-4327-82ae-5dfb3ea4f0d6\" d=\"M211.29,285.39V262.48h22.44l51.93-89.88V285.39Zm74.37-113.94H193.1L285.66,12ZM127,285.39l62.4-107.51v14.59h61.16l-39.23,69V205.77H189.36v79.62Z\" transform=\"translate(0 0)\"/>\r\n      <path id=\"facfbe89-2f5b-4ac9-92b9-4862caab4c9e\" data-name=\"path258\" class=\"e0610833-ce90-473b-b097-3aa4f8c2dfec\" d=\"M.27,0H190.65L91.11,171.45h-72v-23H.27Zm38,262.48L25,285.39H.27V192.47h58l-39.82,70Z\" transform=\"translate(0 0)\"/>\r\n      <path id=\"fad46169-dc8d-4b7f-af28-a69e6185b0c8\" data-name=\"path270\" class=\"f046d93e-32f3-4ce4-9af7-9ca16d569ad3\" d=\"M68.84,161.59h6.38V124.24l12.44-12.45h13l4.34-4.34H90.85l10.72-10.71h20.84l5.22-5.22H106.78l7.82-7.82h11.87V79.07h-7.24l9.26-9.26V63.15L118.07,73.57V61.12L113.15,66V77.63l-7.53,7.52V74.44l-5.21,5.21V91L89.69,101.66V90.36l-5.21,5.22v11.58L74.63,117c.29-.29,0-22.88,0-22.88L85.06,83.7H95.48V79.36H88.25l21.43-21.42h15.63V53.59H113.44l7-7-1.74-3.77-3.19,3.19v-9l-4.92-4.92V51L86.8,74.73V62.86L82.45,67.2V79.36l-8.1,8.11V65.17l6.37-6.37H96.06l4.64-4.63H83.9l8.4-8.4H105V41.14h-8.4l11.88-11.88-4-3.76-8.12,8.11v-11l-4-4.05V39.69l-7.53,7.53V32.74l-4.92,4.92v13.9l-5.22,5.21V33.9L89.4,19.13H83.32l-8.69,8.69v-11H69.42v11l-8.68-8.69H54.65L69.42,33.9V56.77l-5.21-5.21V37.66l-4.92-4.92V47.22l-7.53-7.53V18.55L47.7,22.6v11L39.6,25.5l-4.06,3.76L47.41,41.14H39v4.63H51.76l8.39,8.4H43.36L48,58.8H63.34l6.37,6.37v22.3L61.6,79.36V67.2l-4.34-4.34V74.73L33.52,51V32.16l-4.93,4.92v9l-3.18-3.19-1.74,3.77,7,7H18.75v4.35H34.38L55.81,79.36H48.57V83.7H59L69.42,94.13s-.29,22.59,0,22.88l-9.84-9.85V95.58l-5.21-5.22v11.3L43.65,91V79.65l-5.21-5.21V85.16l-7.53-7.53V66L26,61.12V73.57L15.56,63.15v6.66l9.27,9.26H17.59V83.7H29.46l7.82,7.82H16.43l5.21,5.22H42.49l10.72,10.71H39l4.34,4.34h13l12.45,12.45v37.35Z\" transform=\"translate(0 0)\"/>\r\n      <path id=\"e031cbcf-7fbd-41f6-a7b7-c8e4b48cfbbe\" data-name=\"path278\" d=\"M0,371.83H3.11v-8.2L6.94,360l8.43,11.82h4.17l-10.26-14,10-9.49H14.88L3.11,359.82V348.31H0v23.52Zm47.83,0h3.1v-8.2L54.77,360l8.43,11.82h4.17l-10.26-14,10-9.49H62.7L50.93,359.82V348.31h-3.1v23.52Zm47.82,0h15V369H98.84V348.31H95.65v23.52Zm43.06-7.65h8v-3h-8Zm49.57-15.87h-3.16V364a11.46,11.46,0,0,1-.47,4.05c-.53,1.16-1.64,1.74-3.34,1.74a3.4,3.4,0,0,1-2.67-1,4.23,4.23,0,0,1-.86-2.89v-1.69h-3v1.69c0,2.44.62,4.14,1.88,5.1a7.26,7.26,0,0,0,4.52,1.43c3,0,5.13-1,6.22-3a9.92,9.92,0,0,0,.88-4.63V348.31Zm30.79,23.52h3v-19l11.91,19h3.58V348.31h-3v19l-11.73-19h-3.75v23.52Zm49.94,0h3.19v-10.7h11.54v-2.8H272.2v-7.14h13.13v-2.88H269v23.52Zm-269,0H3.11v-8.2L6.94,360l8.43,11.82h4.17l-10.26-14,10-9.49H14.88L3.11,359.82V348.31H0v23.52Zm47.83,0h3.1v-8.2L54.77,360l8.43,11.82h4.17l-10.26-14,10-9.49H62.7L50.93,359.82V348.31h-3.1v23.52Zm47.82,0h15V369H98.84V348.31H95.65v23.52Zm43.06-7.65h8v-3h-8Zm49.57-15.87h-3.16V364a11.46,11.46,0,0,1-.47,4.05c-.53,1.16-1.64,1.74-3.34,1.74a3.4,3.4,0,0,1-2.67-1,4.21,4.21,0,0,1-.86-2.89v-1.69h-3v1.69c0,2.44.62,4.14,1.88,5.1a7.26,7.26,0,0,0,4.52,1.43c3,0,5.13-1,6.22-3a9.92,9.92,0,0,0,.88-4.63V348.31Zm30.79,23.52h3v-19l11.91,19h3.58V348.31h-3v19l-11.73-19h-3.75v23.52Zm49.94,0h3.19V361.14h11.54v-2.81H272.2v-7.14h13.13v-2.88H269v23.52Z\" transform=\"translate(0 0)\"/>\r\n    </g>\r\n  </g>\r\n</svg>\r\n`"
            },
            {
                "name": "LOYER_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"63.498\" height=\"61.46\"\r\nviewBox=\"0 0 63.498 61.46\">\r\n<defs><style>.a-loyer{fill:\"none\";}</style></defs>\r\n<g transform=\"translate(0 -8.081)\"><g transform=\"translate(0 8.081)\">\r\n<path class=\"a-loyer\" d=\"M137.058,31.6,138,32.853c.314.314.627.627.941.627h0a1.152,1.152,0,0,0,.941-.314l6.9-6.271a1.515,1.515,0,0,0,0-2.2L132.041,8.708c-.314-.314-.627-.627-.941-.627a1.885,1.885,0,0,0-1.254.314l-6.9,6.271a1.516,1.516,0,0,0,0,2.2l.941,1.254L112.6,28.463l-.941-1.254a1.516,1.516,0,0,0-2.2,0l-6.9,6.271c-.314.314-.627.627-.627.941a1.885,1.885,0,0,0,.314,1.254l14.738,16.306c.314.314.627.627.941.627h0a1.152,1.152,0,0,0,.941-.314l6.9-6.271c.314-.314.627-.627.627-.941a1.885,1.885,0,0,0-.314-1.254l-.941-1.254,2.2-2.195,18.187,19.755c.314.314.627.627.941.627h0a1.152,1.152,0,0,0,.941-.314l4.7-4.39a1.516,1.516,0,0,0,0-2.2L133.922,34.107ZM131.1,11.53l12.857,13.8-4.7,4.076-.941-1.254h0l-10.662-11.6h0l-.941-1.254Zm-12.543,37L105.7,34.735l4.7-4.39,2.195,2.509L122.007,43.2h0l.941,1.254Zm-3.763-17.874L126.4,20l8.467,9.094-3.449,3.136h0l-4.7,4.7h0l-3.449,3.136ZM149.287,54.49l-2.2,2.2-16.933-18.5,2.2-2.195Z\" transform=\"translate(-89.082 -8.081)\"/>\r\n<path class=\"a-loyer\" d=\"M43.9,385.189v-6.271a1.481,1.481,0,0,0-1.568-1.568h-4.7v-4.7a1.481,1.481,0,0,0-1.568-1.568H7.839a1.481,1.481,0,0,0-1.568,1.568v4.7h-4.7A1.481,1.481,0,0,0,0,378.917v6.271a1.481,1.481,0,0,0,1.568,1.568H42.332A1.481,1.481,0,0,0,43.9,385.189ZM9.407,374.214H34.493v3.136H9.407Zm31.357,9.407H3.136v-3.136H40.764v3.136Z\" transform=\"translate(0 -325.296)\"/></g></g>\r\n</svg>`"
            },
            {
                "name": "MAIL_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"60.081\" height=\"60.317\" viewBox=\"0 0 60.081 60.317\"><defs>\r\n<style>.a-mail{fill:\"none\";}</style>\r\n</defs><g transform=\"translate(-1 0)\">\r\n<path class=\"a-mail\" d=\"M60.446,24.206l-8.789-7.324V7.893A1.767,1.767,0,0,0,49.89,6.126H38.768L32.2.432a1.767,1.767,0,0,0-2.315,0l-6.57,5.694H12.192a1.767,1.767,0,0,0-1.767,1.767v8.989L1.636,24.206A1.767,1.767,0,0,0,1,25.564V58.55a1.767,1.767,0,0,0,1.767,1.767H59.314a1.767,1.767,0,0,0,1.767-1.767V25.564a1.767,1.767,0,0,0-.636-1.357ZM21.094,42.057,4.534,54.937V29.177Zm3.485,1.767H37.5L54.164,56.783H7.917Zm16.409-1.767,16.56-12.88v25.76ZM56.5,25.516l-4.84,3.765v-7.8ZM31.041,4.105l2.331,2.02H28.709ZM48.123,9.66V32.03L37.5,40.29H24.579l-10.62-8.26V9.66Zm-37.7,19.621-4.84-3.765,4.84-4.033Z\" transform=\"translate(0 0)\"/>\r\n<path class=\"a-mail\" d=\"M151.645,125.149a13.063,13.063,0,0,0,7.612,2.739h.05a1.767,1.767,0,0,0,.048-3.533,9.426,9.426,0,0,1-2.6-18.4,9.424,9.424,0,0,1,11.875,6.228,8.227,8.227,0,0,1-.522,5.457,2.48,2.48,0,0,1-2.256,1.7.57.57,0,0,1-.368-.188,1.151,1.151,0,0,1-.319-.8l.049-9.817a1.767,1.767,0,0,0-1.758-1.776h-.009a1.767,1.767,0,0,0-1.735,1.438,5.59,5.59,0,0,0-2.618-.642,6.194,6.194,0,0,0-4.561,2.093,7.659,7.659,0,0,0-1.889,5.167,8.217,8.217,0,0,0,1.775,5.223,5.947,5.947,0,0,0,4.556,2.275,5.5,5.5,0,0,0,3.5-1.272,4.53,4.53,0,0,0,.505.608,4.045,4.045,0,0,0,2.873,1.229,5.976,5.976,0,0,0,5.541-3.929,11.633,11.633,0,0,0,.645-7.7c0-.018-.01-.037-.016-.055a12.958,12.958,0,1,0-20.377,13.961Zm7.33-6.374c-1.351,0-2.8-1.593-2.8-3.964,0-2.332,1.483-3.726,2.916-3.726,1.459,0,2.492,1.424,2.556,3.488l0,.444C161.564,117.11,160.4,118.775,158.975,118.775Z\" transform=\"translate(-128.498 -89.955)\"/></g>\r\n</svg>\r\n`"
            },
            {
                "name": "MEASUREMENTS_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"25.264\" height=\"25.264\"\r\nviewBox=\"0 0 25.264 25.264\">\r\n<defs><style>.measurements{fill:\"none\";}</style></defs>\r\n<path class=\"measurements\" d=\"M25.264,4.458V0H20.806V1.486H4.458V0H0V4.458H1.486V20.806H0v4.458H4.458V23.778H20.806v1.486h4.458V20.806H23.778V4.458ZM22.292,20.806H20.806v1.486H4.458V20.806H2.972V4.458H4.458V2.972H20.806V4.458h1.486Z\"/>\r\n<path class=\"measurements\" d=\"M0,0H6.717V1.343H0Z\" transform=\"translate(6.528 11.278) rotate(-45)\"/>\r\n<path class=\"measurements\" d=\"M0,0H6.717V1.343H0Z\" transform=\"translate(13.033 17.785) rotate(-45)\"/>\r\n<path class=\"measurements\" d=\"M0,0H10.746V1.343H0Z\" transform=\"translate(8.355 15.956) rotate(-45)\"/>\r\n</svg>`"
            },
            {
                "name": "multiQuestions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/examples/form-ex/mock-qustions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Question[]",
                "defaultValue": "[...gridDetails, ...gridTransport]"
            },
            {
                "name": "MUSIC_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"46.508\" height=\"46.507\" viewBox=\"0 0 46.508 46.507\"><defs>\r\n<style>.music{fill:\"none\";}</style></defs>\r\n<g transform=\"translate(0 -0.003)\">\r\n<g transform=\"translate(0 0.003)\">\r\n<path class=\"music\" d=\"M19.012,9.674a27.765,27.765,0,0,1-6.77-6.71L10.671.609a1.362,1.362,0,0,0-2.5.756V22.742a5.388,5.388,0,0,0-2.725-.758,5.45,5.45,0,1,0,5.45,5.45V5.838a33.585,33.585,0,0,0,6.5,6.033,4.088,4.088,0,0,1-2.412,7.387,1.363,1.363,0,0,0,0,2.725A6.813,6.813,0,0,0,19.012,9.674Z\" transform=\"translate(0 -0.003)\"/></g><g transform=\"translate(16.35 11.084)\">\r\n<path class=\"music\" d=\"M208.421,122.044l-19.257,5.45a1.364,1.364,0,0,0-.989,1.311v18.471a5.388,5.388,0,0,0-2.725-.758,5.45,5.45,0,1,0,5.45,5.45V135.283l16.532-4.672v11.214a5.388,5.388,0,0,0-2.725-.758,5.45,5.45,0,1,0,5.45,5.45V123.355A1.364,1.364,0,0,0,208.421,122.044Z\" transform=\"translate(-180 -121.991)\"/></g></g>\r\n</svg>`"
            },
            {
                "name": "Navigation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Stepper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OPEN_PLUS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"8.667\" height=\"8.667\" viewBox=\"0 0 8.667 8.667\">\r\n<path id=\"Icon_open-plus\" data-name=\"Icon open-plus\" d=\"M3.25,0V3.25H0V5.417H3.25v3.25H5.417V5.417h3.25V3.25H5.417V0Z\"/>\r\n</svg>\r\n`"
            },
            {
                "name": "pagination",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "PaginationInstance",
                "defaultValue": "{\r\n  itemsPerPage: 6,\r\n  currentPage: 1,\r\n  totalItems: 6,\r\n}"
            },
            {
                "name": "palette",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/styles/theme.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Color",
                "defaultValue": "{\r\n  primary: '#d6a348',\r\n  accent: '#ff6f2e',\r\n  warn: '#d83020',\r\n  paper: '#fff',\r\n  default: '#bababa',\r\n  disable: ' rgba(0, 0, 0, 0.26)',\r\n  table: '#F8F8F8',\r\n  text: '#000000',\r\n  success: '#59a437',\r\n}"
            },
            {
                "name": "PLANING_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"31\" height=\"31\" viewBox=\"0 0 31 31\">\r\n<g id=\"planning\">\r\n  <path id=\"Path_647\" data-name=\"Path 647\" d=\"M28.442,0H2.559A2.561,2.561,0,0,0,0,2.559v.007A2.562,2.562,0,0,0,1.656,4.959v18a2.457,2.457,0,0,0,2.455,2.453h9.716L11.106,29.6a.908.908,0,1,0,1.523.99l1.963-3.02v2.5a.908.908,0,1,0,1.816,0v-2.5l1.963,3.02a.908.908,0,1,0,1.523-.99l-2.721-4.185H26.89a2.457,2.457,0,0,0,2.455-2.453v-18A2.562,2.562,0,0,0,31,2.565V2.559A2.561,2.561,0,0,0,28.442,0ZM1.817,2.559a.743.743,0,0,1,.742-.742H28.442a.743.743,0,0,1,.742.742v.007a.743.743,0,0,1-.742.742H2.559a.743.743,0,0,1-.742-.742Zm25.712,20.4a.638.638,0,0,1-.638.636H4.11a.638.638,0,0,1-.638-.636V5.124H27.528Zm0,0\" transform=\"translate(0)\" fill=\"'none'\"/>\r\n  <path id=\"Path_648\" data-name=\"Path 648\" d=\"M91.317,121.514a2.89,2.89,0,1,0-2.891-2.89A2.894,2.894,0,0,0,91.317,121.514Zm0-3.964a1.074,1.074,0,1,1-1.074,1.074A1.075,1.075,0,0,1,91.317,117.551Zm0,0\" transform=\"translate(-83.072 -108.727)\" fill=\"'none'\"/>\r\n  <path id=\"Path_649\" data-name=\"Path 649\" d=\"M356.761,276.781a.908.908,0,0,0-1.284,1.285l.809.809-.809.809a.908.908,0,0,0,1.284,1.284l.809-.809.81.809a.908.908,0,1,0,1.284-1.284l-.809-.809.809-.809a.908.908,0,1,0-1.284-1.285l-.81.809Zm0,0\" transform=\"translate(-333.704 -259.773)\" fill=\"'none'\"/>\r\n  <path id=\"Path_650\" data-name=\"Path 650\" d=\"M105.46,159.361a.909.909,0,0,0,1.284.032l5.64-5.368,3.13,3.265a1.414,1.414,0,0,0,2.143-.119l4.077-5.026a.909.909,0,0,0,.826.531h.052a.908.908,0,0,0,.856-.958l-.1-1.7a1.127,1.127,0,0,0-1.223-1.059l-1.847.16a.908.908,0,0,0,.08,1.813l-3.872,4.773-3.092-3.225a1.417,1.417,0,0,0-1.928-.106l-.022.018-5.975,5.687a.908.908,0,0,0-.032,1.284Zm0,0\" transform=\"translate(-98.839 -139.933)\" fill=\"'none'\"/>\r\n</g>\r\n</svg>\r\n`"
            },
            {
                "name": "PLAYGROUND_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\r\n<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"39.607\" height=\"20.445\"\r\nviewBox=\"0 0 39.607 20.445\"><defs>\r\n<style>.playground{fill:\"none\";}</style></defs>\r\n<path class=\"playground\" d=\"M33.807,117.8A19.8,19.8,0,0,0,0,131.8a.642.642,0,1,0,1.283,0,18.839,18.839,0,0,1,.118-2.1H7.633a2.019,2.019,0,0,0,1.273,1.267c-.006.276-.01.553-.01.829a.642.642,0,1,0,1.283,0c0-.278,0-.558.011-.836a2.019,2.019,0,0,0,1.252-1.259H17.9a2.019,2.019,0,0,0,1.263,1.263v.833a.642.642,0,1,0,1.283,0v-.833a2.019,2.019,0,0,0,1.263-1.263h6.456a2.019,2.019,0,0,0,1.252,1.259c.007.279.011.558.011.836a.642.642,0,1,0,1.283,0c0-.276,0-.553-.01-.829a2.019,2.019,0,0,0,1.273-1.267h6.232a18.838,18.838,0,0,1,.118,2.1.642.642,0,1,0,1.283,0,19.673,19.673,0,0,0-5.8-14Zm2.272,5.149H31a2.013,2.013,0,0,0-1.84-1.367c-.232-.7-.489-1.386-.767-2.032a2.013,2.013,0,0,0,.5-.792h3.912a.646.646,0,0,0,.13-.013A18.588,18.588,0,0,1,36.079,122.95Zm-15.634,4.212V125.5a2.019,2.019,0,0,0,1.263-1.263h5.486a2.015,2.015,0,0,0,1.668,1.354c.1.558.2,1.126.271,1.7a2.02,2.02,0,0,0-.969,1.137H21.708A2.019,2.019,0,0,0,20.445,127.161ZM17.9,128.425H11.443a2.02,2.02,0,0,0-.969-1.137c.076-.574.166-1.142.271-1.7a2.015,2.015,0,0,0,1.668-1.354H17.9a2.019,2.019,0,0,0,1.263,1.263v1.665A2.019,2.019,0,0,0,17.9,128.425Zm11.2-4.106a.727.727,0,1,1,.727-.727A.728.728,0,0,1,29.1,124.318Zm-1.9-1.369H21.708a2.019,2.019,0,0,0-1.263-1.263v-1.665a2.019,2.019,0,0,0,1.263-1.263h3.376a2,2,0,0,0,2.156,1.352c.251.587.483,1.2.695,1.843a2.02,2.02,0,0,0-.741,1ZM19.8,124.318a.727.727,0,1,1,.727-.727A.728.728,0,0,1,19.8,124.318Zm0-6.929a.727.727,0,1,1-.727.727A.728.728,0,0,1,19.8,117.389Zm7.186,1.454a.727.727,0,1,1,.727-.727A.728.728,0,0,1,26.989,118.844Zm-1.9-1.369H21.708a2.019,2.019,0,0,0-1.263-1.263v-2.886c1.381.18,3.2,1,4.992,3.515A2.014,2.014,0,0,0,25.085,117.475Zm-5.923-4.149v2.886a2.019,2.019,0,0,0-1.263,1.263H14.522a2.009,2.009,0,0,0-.352-.634c1.795-2.519,3.611-3.335,4.992-3.515Zm-5.817,4.791a.727.727,0,1,1-.727-.727A.728.728,0,0,1,13.345,118.116Zm-.727,2.01a2.013,2.013,0,0,0,1.9-1.369H17.9a2.019,2.019,0,0,0,1.263,1.263v1.665A2.019,2.019,0,0,0,17.9,122.95H12.412a2.019,2.019,0,0,0-.741-1c.211-.639.444-1.256.695-1.843a2.025,2.025,0,0,0,.251.016Zm-2.11,2.737a.727.727,0,1,1-.727.727A.728.728,0,0,1,10.508,122.864Zm21.033-5.389H28.894a2.008,2.008,0,0,0-2.367-1.315,12.4,12.4,0,0,0-2.036-2.281A18.34,18.34,0,0,1,31.541,117.475ZM13.08,116.16a2.008,2.008,0,0,0-2.367,1.315H8.066a18.34,18.34,0,0,1,7.049-3.6,12.4,12.4,0,0,0-2.036,2.281Zm-6.408,2.585a.646.646,0,0,0,.13.013h3.912a2.015,2.015,0,0,0,.5.792c-.279.647-.535,1.328-.768,2.032A2.014,2.014,0,0,0,8.6,122.95H3.528A18.588,18.588,0,0,1,6.671,118.745Zm-3.78,5.488H8.6a2.02,2.02,0,0,0,.886,1.09c-.109.578-.2,1.166-.283,1.761a2.016,2.016,0,0,0-1.573,1.341H1.59a18.322,18.322,0,0,1,1.3-4.192Zm6.647,5.56a.727.727,0,1,1,.727-.727A.728.728,0,0,1,9.538,129.793Zm10.265,0a.727.727,0,1,1,.727-.727A.728.728,0,0,1,19.8,129.793Zm10.265,0a.727.727,0,1,1,.727-.727A.728.728,0,0,1,30.069,129.793Zm1.9-1.369a2.016,2.016,0,0,0-1.572-1.341c-.079-.594-.174-1.183-.283-1.761a2.02,2.02,0,0,0,.886-1.09h5.712a18.322,18.322,0,0,1,1.3,4.192H31.974Z\" transform=\"translate(0 -112)\"/>\r\n</svg>`"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Card.Dashboardstories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PRINT_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"24.007\" height=\"24.007\"\r\n viewBox=\"0 0 24.007 24.007\">\r\n <defs><style>.print{fill:\"none\";}</style></defs>\r\n<path class=\"print\" d=\"M21.194,7.455H18.8V0H5.2V7.455H2.813A2.816,2.816,0,0,0,0,10.269v7.6a2.816,2.816,0,0,0,2.813,2.813H5.2v3.329H18.8V20.678h2.391a2.816,2.816,0,0,0,2.813-2.813v-7.6A2.816,2.816,0,0,0,21.194,7.455ZM7.08,1.876h9.847v5.58H7.08Zm0,20.256V15.9h9.847v6.236Zm15.051-4.267a.939.939,0,0,1-.938.938H18.8V15.9h1.454V14.02H3.751V15.9H5.2V18.8H2.813a.939.939,0,0,1-.938-.938v-7.6a.939.939,0,0,1,.938-.938h18.38a.939.939,0,0,1,.938.938ZM15.051,3.751V5.627h-6.1V3.751Z\"/>\r\n</svg>`"
            },
            {
                "name": "questions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Question[]",
                "defaultValue": "[\r\n  {\r\n    controlType: 'select',\r\n    key: 'record',\r\n    label: 'סוג רישום',\r\n    options: [\r\n      { label: 'גוש חלקה', value: 'שם נוסף' },\r\n      { label: 'דף ספר', value: 'עוד לקוח' },\r\n      { label: 'מגרש', value: 'לקוח מספר שלוש' },\r\n      { label: 'גוש שומא', value: 'לקוח מספר ארבע' },\r\n    ],\r\n    gridProps: {\r\n      cols: 1,\r\n    },\r\n  },\r\n  {\r\n    controlType: 'number',\r\n    key: 'block',\r\n    label: 'גוש',\r\n  },\r\n  {\r\n    controlType: 'number',\r\n    key: 'section',\r\n    label: 'חלקה',\r\n  },\r\n  {\r\n    controlType: 'text',\r\n    key: 'subSection',\r\n    label: 'תת חלקה',\r\n  },\r\n]"
            },
            {
                "name": "RELOAD_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\r\n<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"39.336\" height=\"33.092\" viewBox=\"0 0 39.336 33.092\"><defs>\r\n<style>.reload{fill:\"none\";}</style></defs>\r\n<g transform=\"translate(-3 -5.063)\">\r\n<path class=\"reload\"\r\nd=\"M4.511,21.143a1.507,1.507,0,0,0,1.2-.59l.658-.855A16.542,16.542,0,0,0,36.454,26.09a1.513,1.513,0,0,0-2.523-1.672,13.509,13.509,0,0,1-24.612-5.5l1.3,1a1.513,1.513,0,0,0,1.846-2.4L8.873,14.757c-.752-.579-1.822-.9-2.5-.017L3.315,18.708a1.511,1.511,0,0,0,1.2,2.434Z\" transform=\"translate(0 4.681)\"/><path class=\"reload\" d=\"M7.4,14.545a1.516,1.516,0,0,0,2.1-.425,13.509,13.509,0,0,1,24.612,5.5l-1.3-1a1.513,1.513,0,0,0-1.846,2.4l3.587,2.761c.766.589,1.811.918,2.5.017l3.056-3.968a1.512,1.512,0,1,0-2.4-1.844l-.658.855A16.545,16.545,0,0,0,6.973,12.447a1.515,1.515,0,0,0,.425,2.1Z\" transform=\"translate(1.909)\"/>\r\n</g>\r\n</svg>\r\n`"
            },
            {
                "name": "REPORTS_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\r\n<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"26.76\" height=\"34.613\"\r\nviewBox=\"0 0 26.76 34.613\">\r\n<defs>\r\n<style>.report{fill:\"none\";}</style></defs>\r\n<g transform=\"translate(0)\"><g transform=\"translate(4.11 28.55)\"><path class=\"report\" d=\"M180.508,422.307h7.1v2.028h-7.1Z\" transform=\"translate(-176.452 -422.307)\"/><path class=\"report\" d=\"M120.508,422.307h2.028v2.028h-2.028Z\" transform=\"translate(-120.508 -422.307)\"/></g><path class=\"report\" d=\"M88.268,0H61.508V34.613H80.475l7.792-8.461V0m-2.06,2.044v22.7H78.982v7.859l-15.41,0V2.044ZM84.914,26.775l-3.869,4.209V26.775Z\" transform=\"translate(-61.508)\"/></g><g transform=\"translate(4.2 5.733)\"><path class=\"reporteport\" d=\"M277.932,91.218a6.418,6.418,0,0,0-6.411-6.411h-1.014v7.609h7.387S277.932,91.281,277.932,91.218Zm-5.4-.83V86.953a4.4,4.4,0,0,1,3.29,3.434Z\" transform=\"translate(-260.366 -84.807)\"/><path class=\"report\" d=\"M132.626,149.425a7.05,7.05,0,0,0,2.079-5.02v-1.014h-6.084v-6.084h-1.014a7.1,7.1,0,1,0,5.019,12.118Zm-10.089-5.02a5.074,5.074,0,0,1,4.056-4.97v5.984h5.984a5.071,5.071,0,0,1-10.04-1.014Z\" transform=\"translate(-120.508 -133.758)\"/></g>\r\n</svg>`"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "RESTAURANT_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\r\n                                                            < svg xmlns = \"http://www.w3.org/2000/svg\" width = \"27.93\" height = \"31.033\" viewBox = \"0 0 27.93 31.033\" >\r\n                                                              <path id=\"Icon_material-restaurant\" data - name=\"Icon material-restaurant\"\r\nd = \"M16.913,13.861h-3.1V3h-3.1V13.861H7.6V3H4.5V13.861a6.185,6.185,0,0,0,5.819,6.16V34.033H14.2V20.021a6.185,6.185,0,0,0,5.819-6.16V3h-3.1Zm7.758-4.655V21.62H28.55V34.033H32.43V3C28.147,3,24.671,6.476,24.671,9.207Z\" transform = \"translate(-4.5 -3)\" fill = \"#37c56b\" />\r\n  </svg>`"
            },
            {
                "name": "Save",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/NavbarBottom.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SAVE_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\r\n<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"24.007\" height=\"24.007\"\r\nviewBox=\"0 0 24.007 24.007\">\r\n<defs><style>.save{fill:\"none\";}</style>\r\n</defs>\r\n\r\n<path class=\"save\" d=\"M19.706,0H2.813A2.816,2.816,0,0,0,0,2.813v18.38a2.816,2.816,0,0,0,2.813,2.813h18.38a2.816,2.816,0,0,0,2.813-2.813V4.3ZM7.361,1.876h5.58V5.439h1.876V1.876h1.876v4.5a.939.939,0,0,1-.938.938H8.3a.939.939,0,0,1-.938-.938ZM18.568,22.131H5.486V13.879a.939.939,0,0,1,.938-.938H17.63a.939.939,0,0,1,.938.938Zm3.564-.938a.939.939,0,0,1-.938.938h-.75V13.879a2.816,2.816,0,0,0-2.813-2.813H6.424A2.816,2.816,0,0,0,3.61,13.879v8.252h-.8a.939.939,0,0,1-.938-.938V2.813a.939.939,0,0,1,.938-.938H5.486v4.5A2.816,2.816,0,0,0,8.3,9.19h7.455a2.816,2.816,0,0,0,2.813-2.813v-4.5h.362l3.2,3.2Z\"/></svg>\r\n`"
            },
            {
                "name": "Select",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/FormInput.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SELECT_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\"width=\"24px\" fill=\"\" style=\"transform: rotate(-90deg)\";>\r\n\r\n\"<rect fill=\"none\" height=\"24\" width=\"24\" /><g><polygon points=\"17.77,3.77 16,2 6,12 16,22 17.77,20.23 9.54,12\"/></g>\r\n</svg>\r\n`"
            },
            {
                "name": "Selectable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SelectMulti",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/FormInput.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SHIELD_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\r\n<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"35.879\" height=\"42.869\"\r\nviewBox=\"0 0 35.879 42.869\"><defs><style>.shield{fill:\"none\";}\r\n</style></defs><g transform=\"translate(-36.592)\">\r\n<path class=\"shield\"\r\nd=\"M104.232,86.7l1.665,14.91a7.55,7.55,0,0,0,1.459,3.694c4.614,6.147,7.664,7.619,8.37,7.65a.984.984,0,0,0,.1-.011V83.956a18.058,18.058,0,0,1-9.816,2.824C105.415,86.78,104.821,86.752,104.232,86.7Z\" transform=\"translate(-61.179 -75.937)\"/><path class=\"shield\" d=\"M71.674,4.145a1.95,1.95,0,0,0-1.943-.21,12.7,12.7,0,0,1-5.144,1.053c-4.2,0-7.8-1.92-9.294-4.642a.666.666,0,0,0-1.168,0A7.9,7.9,0,0,1,51.644,3a10.333,10.333,0,0,1-1.385.785c-.114.055-.237.1-.356.154a11.609,11.609,0,0,1-1.126.427c-.167.054-.336.1-.509.151-.379.1-.769.185-1.169.254-.17.029-.337.066-.512.089a13.466,13.466,0,0,1-1.755.124,12.6,12.6,0,0,1-5.446-1.194,2.2,2.2,0,0,0-1.974.166A1.917,1.917,0,0,0,36.6,5.767L38.9,26.321a13.427,13.427,0,0,0,2.594,6.557c2.926,3.9,8.265,9.991,13.049,9.991,4.96,0,10.25-6.118,13.116-10.015A13.35,13.35,0,0,0,70.175,26.4L72.459,5.933A1.947,1.947,0,0,0,71.674,4.145Zm-4.408,21.93A10.363,10.363,0,0,1,65.3,31.12c-4.062,5.524-8.084,8.822-10.757,8.822-2.52,0-6.622-3.38-10.707-8.821A10.5,10.5,0,0,1,41.807,26L39.7,7.078a15.922,15.922,0,0,0,5.136.838A14.519,14.519,0,0,0,54.71,4.283a14.519,14.519,0,0,0,9.877,3.633,16.055,16.055,0,0,0,4.785-.722Z\"\r\ntransform=\"translate(0 0)\"/></g></svg>\r\n`"
            },
            {
                "name": "SITE_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"51.598\" height=\"41.803\"\r\nviewBox=\"0 0 51.598 41.803\"><defs><style>\r\n.site{fill:\"none\";}</style></defs><g\r\ntransform=\"translate(0 -45.56)\">\r\n<path class=\"site\" d=\"M4.885,323.513,0,334.653H13L16.47,322.8a37.3,37.3,0,0,0-11.585.708Z\" transform=\"translate(0 -247.29)\"/>\r\n<path class=\"site\" d=\"M67.556,248.735a34.185,34.185,0,0,1,3.447.244l1.622-5.539H62.614l-2.544,5.8A43.252,43.252,0,0,1,67.556,248.735Z\" transform=\"translate(-53.613 -176.609)\"/><path class=\"site\" d=\"M203.187,255.64l-1.65-5.33a76.662,76.662,0,0,1-5.862-6.87h-2.45l-1.8,6.131a14.638,14.638,0,0,1,6.9,3.6A9.587,9.587,0,0,0,203.187,255.64Z\" transform=\"translate(-170.852 -176.609)\"/><path class=\"site\" d=\"M161.047,332.051a11.7,11.7,0,0,0-5.527-2.791l-3.31,11.306h18.553l-1.522-4.918A13.473,13.473,0,0,1,161.047,332.051Z\" transform=\"translate(-135.848 -253.203)\"/>\r\n<path class=\"site\" d=\"M331.672,246.9q-.672.89-1.434,1.822a78.786,78.786,0,0,1-6.528,7.055l.99,3.2h12.266Z\" transform=\"translate(-288.912 -179.697)\"/>\r\n<path class=\"site\" d=\"M354.882,389.23H342.2l1.5,4.86h13.308Z\" transform=\"translate(-305.415 -306.727)\"/>\r\n<path class=\"site\" d=\"M300.058,124.136a1.878,1.878,0,1,0-1.878-1.878A1.881,1.881,0,0,0,300.058,124.136Z\" transform=\"translate(-266.127 -66.786)\"/>\r\n<path class=\"site\" d=\"M222.078,66.985c1.76,2.14,3.194,3.693,4.9,5.426,3.627-3.493,10.938-12.271,10.68-16.171a10.68,10.68,0,1,0-21.359,0C216.257,58.551,218.459,62.584,222.078,66.985Zm-.205-11.513a5.1,5.1,0,1,1,5.1,5.1A5.108,5.108,0,0,1,221.873,55.472Z\" transform=\"translate(-193.044)\"/></g>\r\n</svg>`"
            },
            {
                "name": "Status",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Cards.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "CardStatusTemplate.bind({})"
            },
            {
                "name": "Status",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Stepper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Step",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Cards.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "CardStepTemplate.bind({})"
            },
            {
                "name": "Stepper",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Stepper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SUPERVISION_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"32.581\" height=\"31.224\"\r\nviewBox=\"0 0 32.581 31.224\"><defs>\r\n<style>.supervision{fill:\"none\";}</style></defs><g transform=\"translate(0 -10.664)\"><g transform=\"translate(0 10.664)\">\r\n<path class=\"supervision\" d=\"M25.793,28.312a6.752,6.752,0,0,0-3.182.791l-1.488-2.232a8.824,8.824,0,1,0-9.685-.013l-1.5,2.23a6.8,6.8,0,1,0,1.132.749l1.555-2.319a8.844,8.844,0,0,0,7.3.01l1.552,2.329a6.788,6.788,0,1,0,4.311-1.545ZM6.788,40.53a5.389,5.389,0,0,1-3.5-1.28,5.139,5.139,0,0,0,.661-.27c.05-.024.1-.047.122-.056a3.879,3.879,0,0,0,1.66-1.011,2,2,0,0,0,1.059.4,2,2,0,0,0,1.059-.4,3.884,3.884,0,0,0,1.661,1.012c.023.008.071.031.121.055a5.154,5.154,0,0,0,.66.27A5.388,5.388,0,0,1,6.788,40.53ZM5.307,34.767a1.5,1.5,0,1,1,2.962,0,2.458,2.458,0,0,1-.609,1.487,2.17,2.17,0,0,1-.872.692,2.166,2.166,0,0,1-.872-.692A2.455,2.455,0,0,1,5.307,34.767Zm6.911.332a5.39,5.39,0,0,1-.951,3.072A1.207,1.207,0,0,0,11,38.046l-.037-.01a5.855,5.855,0,0,1-.974-.381c-.863-.329-1.087-.566-1.144-.677l-.005-.012v-.019a3.729,3.729,0,0,0,.786-2.18,2.847,2.847,0,1,0-5.677,0,3.724,3.724,0,0,0,.786,2.179v.02a.117.117,0,0,1-.006.012c-.057.111-.281.348-1.144.677a5.841,5.841,0,0,1-.974.381l-.038.01a1.227,1.227,0,0,0-.265.125,5.431,5.431,0,0,1,8.319-6.911A5.393,5.393,0,0,1,12.218,35.1ZM10.865,23.921l-.049.014a1.566,1.566,0,0,0-.381.186,7.467,7.467,0,1,1,11.71,0,1.545,1.545,0,0,0-.382-.186l-.048-.014a7.615,7.615,0,0,1-1.266-.493c-1.121-.427-1.411-.735-1.486-.88a.084.084,0,0,0-.007-.016l-.007-.979a4.844,4.844,0,0,0,1.028-2.84,3.7,3.7,0,1,0-7.374,0,4.844,4.844,0,0,0,1.028,2.84l-.007.979-.007.016c-.075.145-.366.453-1.486.88A7.6,7.6,0,0,1,10.865,23.921Zm7.754-5.209a3.635,3.635,0,0,1-.974,2.3,2.622,2.622,0,0,1-1.354.945,2.618,2.618,0,0,1-1.354-.945,3.634,3.634,0,0,1-.975-2.3,2.738,2.738,0,0,1,.7-1.946,2.306,2.306,0,0,1,3.256,0A2.74,2.74,0,0,1,18.619,18.713ZM16.29,26.954a7.41,7.41,0,0,1-4.846-1.786,6.263,6.263,0,0,0,.982-.386c.079-.038.141-.068.188-.086a3.787,3.787,0,0,0,2.209-1.525c.019-.036.033-.068.043-.09l.109-.242a2.538,2.538,0,0,0,1.315.474A2.53,2.53,0,0,0,17.6,22.84l.113.246c.01.021.023.049.04.082A3.777,3.777,0,0,0,19.968,24.7c.046.017.108.047.187.086a6.278,6.278,0,0,0,.982.386A7.411,7.411,0,0,1,16.29,26.954Zm9.5,13.575a5.387,5.387,0,0,1-3.5-1.28,5.252,5.252,0,0,0,.66-.27c.05-.024.1-.047.121-.056a3.885,3.885,0,0,0,1.66-1.011,2,2,0,0,0,1.059.4,2,2,0,0,0,1.059-.4,3.892,3.892,0,0,0,1.661,1.012c.023.008.071.031.12.055a5.21,5.21,0,0,0,.661.27A5.389,5.389,0,0,1,25.793,40.53Zm-1.48-5.763a1.5,1.5,0,1,1,2.961,0,2.451,2.451,0,0,1-.608,1.487,2.173,2.173,0,0,1-.872.692,2.174,2.174,0,0,1-.872-.692A2.457,2.457,0,0,1,24.313,34.767Zm5.96,3.4a1.215,1.215,0,0,0-.264-.125l-.038-.01A5.854,5.854,0,0,1,29,37.655c-.863-.329-1.087-.566-1.144-.677l0-.012v-.019a3.732,3.732,0,0,0,.786-2.18,2.847,2.847,0,1,0-5.677,0,3.727,3.727,0,0,0,.786,2.179v.02l0,.012c-.058.111-.281.348-1.144.677a5.813,5.813,0,0,1-.974.381l-.038.01a1.211,1.211,0,0,0-.264.125,5.43,5.43,0,1,1,8.958,0Z\" transform=\"translate(0 -10.664)\"/></g></g>\r\n</svg>`"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Card.Dashboardstories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CardDashboardComponent>",
                "defaultValue": "(\r\n  args: CardDashboardComponent\r\n) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/CardUser.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CardUserComponent>",
                "defaultValue": "(args: CardUserComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/DatePicker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<any>",
                "defaultValue": "(args: any) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Calendar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<any>",
                "defaultValue": "(args: any) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/ExpandPanel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ExpandPanelComponent>",
                "defaultValue": "(args: ExpandPanelComponent) => ({\r\n  props: args,\r\n  template: `<kkl-expand-panel>\r\n  <kkl-typography bold=\"600\" title>example</kkl-typography>\r\n  <p content>example</p>\r\n  </kkl-expand-panel>`\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FormExComponent>",
                "defaultValue": "(args: FormExComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/FormAutoComplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FormautocompleteExComponent>",
                "defaultValue": "(\r\n  args: FormautocompleteExComponent\r\n) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Filters.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FiltersExComponent>",
                "defaultValue": "(args: FiltersExComponent) => ({\r\n  props: args,\r\n  template: `<app-filters ${Object.keys(args).reduce(\r\n    (acc, key) =>\r\n      `${acc} [${key}]='${\r\n        typeof args[key] === 'object' ? JSON.stringify(args[key]) : args[key]\r\n      }'`,\r\n    ''\r\n  )} ></app-filters>`,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<IconComponent>",
                "defaultValue": "(args: IconComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<MenuComponent>",
                "defaultValue": "(args: MenuComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<any>",
                "defaultValue": "(args: any) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Navbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<NavbarComponent>",
                "defaultValue": "(args: NavbarComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/NavbarBottom.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<NavbarBottomExComponent>",
                "defaultValue": "(\r\n  args: NavbarBottomExComponent\r\n) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Pagination.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<any>",
                "defaultValue": "(args: any) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Stepper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<StepperExComponent>",
                "defaultValue": "(args: StepperExComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TableExComponent<any>>",
                "defaultValue": "(\r\n  args: TableExComponent<any>\r\n) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TypographyComponent>",
                "defaultValue": "(args: TypographyComponent) => ({\r\n  props: args,\r\n  template: `<kkl-typography ${Object.keys(args).reduce((acc, key) => `${acc} [${key}]='${typeof args[key] === 'object' ? JSON.stringify(args[key]) : args[key]}'`, '')} > Hello World </kkl-typography>`\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/FormInput.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<InputExComponent>",
                "defaultValue": "(args: InputExComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/FormUpLoad.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FormuploadExComponent>",
                "defaultValue": "(\r\n  args: FormuploadExComponent\r\n) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/screens/Dashboard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<DashboardExComponent>",
                "defaultValue": "(args: DashboardExComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/screens/Layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<LayoutExComponent>",
                "defaultValue": "(args: LayoutExComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/screens/Login.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<literal type>",
                "defaultValue": "(args: () => {}) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "TENT_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"64.367\" height=\"41.536\" viewBox=\"0 0 64.367 41.536\"><defs>\r\n<style>.tent{fill:\"none\";}</style></defs><g transform=\"translate(-0.001 -97.247)\">\r\n<g transform=\"translate(0.001 97.247)\">\r\n<path class=\"tent\" d=\"M247.187,97.973a2.069,2.069,0,0,0-1.455-.726H232.823c-.458,0-.474.345-.247.742L255.4,137.62a1,1,0,0,0,1.2.289l12.448-3.935a.692.692,0,0,0,.354-1.042Z\" transform=\"translate(-205.148 -97.247)\"/>\r\n<path class=\"tent\" d=\"M11.1,143.641l11.012-23.506v22.742c0,2.035,2.158,1.919,2.616,1.919H46.188c.458,0,.644-.737.418-1.135l-22.173-39.3a.431.431,0,0,0-.821,0l-5.552,9.749a3.488,3.488,0,0,1-1.135,1.122c-5.616,3.116-13.19,7.278-16.546,8.75A.737.737,0,0,0,.3,125.22a37.463,37.463,0,0,1,3.8,4.409A23.5,23.5,0,0,1,6.3,133.4a1.8,1.8,0,0,1-.068,1.475L1.464,143.66c-.224.4-.037,1.135.421,1.135H9.895C10.352,144.795,10.891,144.049,11.1,143.641Zm-6.4-18.11a.312.312,0,0,1,.062-.552c2.363-1.237,13.542-7.1,16.651-9.005.235-.144.32-.067.2.177l-10.6,20.823c-.125.245-.267.225-.328-.044C10.28,135.17,8.662,129.04,4.695,125.531Z\" transform=\"translate(-0.001 -103.26)\"/></g></g>\r\n</svg>`"
            },
            {
                "name": "Text",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/FormInput.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Textarea",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/FormInput.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "THUMBUP_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24px\" height=\"24px\">\r\n\r\n\r\n\r\n  <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n\r\n  <path d=\"M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.` +\r\n  `44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5` +\r\n  `1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-1.91l-.01-.01L23 10z\"/>\r\n  </svg>\r\n`"
            },
            {
                "name": "Title",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TRANSACTION_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\"\r\n  width=\"76.498\" height=\"50.999\"\r\n  viewBox=\"0 0 76.498 50.999\">\r\n  <defs><style>.transactions{fill:\"none\";}</style></defs><g transform=\"translate(0 -85.333)\"><g transform=\"translate(0 85.333)\">\r\n  <path class=\"transactions\" d=\"M75.818,88.808a1.581,1.581,0,0,0-1.458-.191L61.368,93.342a6.328,6.328,0,0,0-3.611,3.321,6.4,6.4,0,0,0-.311.9,58.9,58.9,0,0,1-10.5-4.082c-6.226-3.208-10.983-1.624-15.063,1.488-2.067.041-4.917.285-7.717.532-1.787.158-3.475.3-4.844.386a6.376,6.376,0,0,0-4.192-5.731L2.139,85.429A1.593,1.593,0,0,0,0,86.926V118.8a1.593,1.593,0,0,0,1.594,1.594H6.249a6.41,6.41,0,0,0,5.012-2.442c.634.482,1.385,1.047,2.173,1.639,1.86,1.4,3.9,2.926,4.789,3.675,5.934,4.968,13.069,10.333,14.49,11.267a11.7,11.7,0,0,0,5.536,1.8,5.851,5.851,0,0,0,3.76-1.063A5.121,5.121,0,0,0,46,135.18a5.974,5.974,0,0,0,2.956-2.957,6.2,6.2,0,0,0,3.972-.582,5.433,5.433,0,0,0,2.59-2.607A5.008,5.008,0,0,0,59,127.923,5.164,5.164,0,0,0,61.09,123.2l4.043-2.237a6.385,6.385,0,0,0,5.117,2.623H74.9a1.593,1.593,0,0,0,1.594-1.594V90.114A1.594,1.594,0,0,0,75.818,88.808ZM9.234,115.139a3.2,3.2,0,0,1-2.985,2.068H3.187V89.2l10.854,3.947a3.188,3.188,0,0,1,1.9,4.113Zm47.833,10.252c-.54.414-1.3.644-1.633.308-.017-.017-.044-.016-.061-.032s-.046-.066-.079-.093c-1.139-.9-6.244-6.123-9.4-9.413a1.593,1.593,0,0,0-2.3,2.2c.74.773,6.685,6.964,9.064,9.129a2.2,2.2,0,0,1-1.156,1.3,2.456,2.456,0,0,1-2.484.056c-.012-.011-.029-.01-.042-.021s-.028-.042-.049-.058c-1.911-1.527-6.706-6.622-7.791-7.8a1.594,1.594,0,0,0-2.347,2.157c.052.057,4.752,5.126,7.391,7.48a2.8,2.8,0,0,1-1.466,1.662,2.081,2.081,0,0,1-2.177-.325c-2.289-1.941-6.882-6.83-7.785-7.8a1.593,1.593,0,1,0-2.328,2.176c1.071,1.146,4.237,4.5,6.643,6.773a6.9,6.9,0,0,1-.819.051,8.76,8.76,0,0,1-3.785-1.276c-1.117-.735-8.134-5.97-14.193-11.044-.917-.769-3.008-2.342-4.923-3.78-1.026-.77-1.971-1.48-2.668-2.016l5.967-15.915c1.549-.068,3.614-.246,5.8-.439,1.236-.109,2.474-.215,3.656-.307-1.817,1.866-4.52,5.207-4.163,8.34a4.593,4.593,0,0,0,2.258,3.435c2.6,1.629,7.424.263,9.746-2.593a11.08,11.08,0,0,0,3.617-1.147c1.868,1.756,4.372,3.819,7,5.987,4.579,3.773,9.769,8.05,11.142,10.448A1.921,1.921,0,0,1,57.067,125.391Zm2.734-5.125c-2.123-2.841-6.726-6.641-11.212-10.337-2.99-2.464-5.813-4.791-7.62-6.6a1.6,1.6,0,0,0-1.879-.279,9.211,9.211,0,0,1-4.188,1.413,1.6,1.6,0,0,0-1.189.736c-1.25,1.983-4.724,2.926-5.826,2.238a1.416,1.416,0,0,1-.781-1.094c-.154-1.356,1.219-3.7,3.5-5.981,5.639-5.639,9.67-6.742,14.885-4.053a61.83,61.83,0,0,0,11.9,4.545,6.4,6.4,0,0,0,.19.714l6.188,16.5Zm13.51.129H70.25a3.2,3.2,0,0,1-2.985-2.068l-6.7-17.875a3.189,3.189,0,0,1,1.9-4.115l10.854-3.947v28.005Z\" transform=\"translate(0 -85.333)\"/></g></g>\r\n  </svg>`"
            },
            {
                "name": "transport",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/examples/form-ex/mock-qustions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Question[]",
                "defaultValue": "[\r\n  {\r\n    key: 'pickUpDate',\r\n    icon: 'date_range',\r\n    label: 'תאריך איסוף',\r\n    controlType: 'select',\r\n    options: [\r\n      { label: 'יום 1', value: '1' },\r\n      { label: 'יום 2', value: '2' },\r\n      { label: 'יום 3', value: '3' },\r\n      { label: 'יום 4', value: '4' },\r\n    ],\r\n  },\r\n  {\r\n    key: 'pickUpHour',\r\n    label: 'שעת איסוף',\r\n    icon: 'schedule',\r\n    controlType: 'time',\r\n  },\r\n\r\n  {\r\n    key: 'pickUpLocation',\r\n    label: 'מקום איסוף',\r\n    value: '',\r\n    icon: 'location',\r\n  },\r\n\r\n  {\r\n    key: 'pickUpAddress',\r\n    label: 'כתובת איסוף',\r\n    value: '',\r\n    icon: 'location',\r\n  },\r\n\r\n  {\r\n    key: 'dropDownDate',\r\n    label: 'תאריך פיזור',\r\n    icon: 'date_range',\r\n    controlType: 'select',\r\n    options: [\r\n      { label: 'יום 1', value: '1' },\r\n      { label: 'יום 2', value: '2' },\r\n      { label: 'יום 3', value: '3' },\r\n      { label: 'יום 4', value: '4' },\r\n    ],\r\n  },\r\n\r\n  {\r\n    key: 'dropDownHour',\r\n    label: 'שעת פיזור',\r\n    icon: 'schedule',\r\n    controlType: 'time',\r\n     },\r\n  {\r\n    key: 'comments',\r\n    label: 'הערות',\r\n    controlType: 'textarea',\r\n    gridProps: {\r\n      cols: 16,\r\n      rows: 3,\r\n      offset : 6\r\n    },\r\n  },\r\n]"
            },
            {
                "name": "TREE_GRADIENT_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\r\n\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"31.883\" height=\"40.875\" viewBox=\"0 0 31.883 40.875\">\r\n  <defs>\r\n  <linearGradient id=\"linear-gradient\" x1=\"0.5\" x2=\"0.5\" y2=\"1\" gradientUnits=\"objectBoundingBox\">\r\n  <stop offset=\"0\" stop-color=\"#448ecd\" stop-opacity=\"0.161\"/>\r\n  <stop offset=\"1\" stop-color=\"#448ecd\"/>\r\n</linearGradient>\r\n  </defs>\r\n\r\n  <path id=\r\n  \"path270\" d=\"M572.514,50.36h1.8V39.817L577.83,36.3h3.678l1.227-1.225h-4.007l3.025-3.025h5.886l1.473-1.473h-5.885l2.208-2.208h3.351V27.063H586.74l2.616-2.616V22.566l-2.943,2.943V22l-1.391,1.389v3.27L582.9,28.78V25.756l-1.472,1.47v3.19L578.4,33.441v-3.19l-1.473,1.473v3.27l-2.779,2.779c.082-.079,0-6.457,0-6.457l2.943-2.945h2.945V27.144h-2.045l6.049-6.049h4.416V19.87H585.1l1.965-1.963-.493-1.064-.9.9V15.21l-1.391-1.391v5.314l-6.7,6.7V22.484l-1.228,1.228v3.433l-2.29,2.289V23.14l1.8-1.8H580.2l1.307-1.307h-4.742l2.371-2.371h3.6V16.353h-2.371L583.716,13l-1.143-1.064-2.289,2.289V11.121l-1.146-1.146v5.967l-2.126,2.126V13.982l-1.388,1.391V19.3l-1.473,1.47V14.309l4.17-4.17H576.6l-2.453,2.453V9.485h-1.47v3.106l-2.453-2.453h-1.718l4.17,4.17v6.457l-1.473-1.47V15.373l-1.388-1.391v4.086l-2.126-2.126V9.975l-1.146,1.146v3.106l-2.287-2.289L563.114,13l3.351,3.351H564.1v1.309h3.6l2.371,2.371h-4.742l1.307,1.307h4.334l1.8,1.8v6.294l-2.29-2.289V23.712l-1.228-1.228v3.354l-6.7-6.7V13.819l-1.391,1.391v2.534l-.9-.9-.49,1.064,1.963,1.963h-3.354V21.1h4.415l6.049,6.049h-2.045V28.37h2.945l2.943,2.945s-.084,6.378,0,6.457L569.9,34.993v-3.27l-1.473-1.473v3.19L565.4,30.416v-3.19l-1.473-1.47V28.78l-2.124-2.126v-3.27L560.416,22v3.512l-2.943-2.943v1.881l2.616,2.616h-2.044V28.37H561.4l2.208,2.208h-5.888l1.473,1.473h5.888l3.025,3.025h-4l1.225,1.225H569l3.515,3.517V50.36Z\" transform=\"translate(-557.473 -9.485)\"\r\n  fill=\"url(#linear-gradient)\"/>\r\n</svg>\r\n`"
            },
            {
                "name": "TREE_GRADIENT_LANDS_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\r\n<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nxmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\nwidth=\"31.883\" height=\"40.875\"\r\nviewBox=\"0 0 31.883 40.875\">\r\n<defs>\r\n<style>.tree-gradient-land{fill:url(#tree-gradient-land);}</style>\r\n<linearGradient id=\"tree-gradient-land\" x1=\"0.5\" x2=\"0.5\" y2=\"1\" gradientUnits=\"objectBoundingBox\"><stop offset=\"0\" stop-color=\"#fff\"/><stop offset=\"1\" stop-color=\"#d6a348\"/></linearGradient>\r\n</defs>\r\n<path class=\"tree-gradient-land\" d=\"M572.514,50.36h1.8V39.817L577.83,36.3h3.678l1.227-1.225h-4.007l3.025-3.025h5.886l1.473-1.473h-5.885l2.208-2.208h3.351V27.063H586.74l2.616-2.616V22.566l-2.943,2.943V22l-1.391,1.389v3.27L582.9,28.78V25.756l-1.472,1.47v3.19L578.4,33.441v-3.19l-1.473,1.473v3.27l-2.779,2.779c.082-.079,0-6.457,0-6.457l2.943-2.945h2.945V27.144h-2.045l6.049-6.049h4.416V19.87H585.1l1.965-1.963-.493-1.064-.9.9V15.21l-1.391-1.391v5.314l-6.7,6.7V22.484l-1.228,1.228v3.433l-2.29,2.289V23.14l1.8-1.8H580.2l1.307-1.307h-4.742l2.371-2.371h3.6V16.353h-2.371L583.716,13l-1.143-1.064-2.289,2.289V11.121l-1.146-1.146v5.967l-2.126,2.126V13.982l-1.388,1.391V19.3l-1.473,1.47V14.309l4.17-4.17H576.6l-2.453,2.453V9.485h-1.47v3.106l-2.453-2.453h-1.718l4.17,4.17v6.457l-1.473-1.47V15.373l-1.388-1.391v4.086l-2.126-2.126V9.975l-1.146,1.146v3.106l-2.287-2.289L563.114,13l3.351,3.351H564.1v1.309h3.6l2.371,2.371h-4.742l1.307,1.307h4.334l1.8,1.8v6.294l-2.29-2.289V23.712l-1.228-1.228v3.354l-6.7-6.7V13.819l-1.391,1.391v2.534l-.9-.9-.49,1.064,1.963,1.963h-3.354V21.1h4.415l6.049,6.049h-2.045V28.37h2.945l2.943,2.945s-.084,6.378,0,6.457L569.9,34.993v-3.27l-1.473-1.473v3.19L565.4,30.416v-3.19l-1.473-1.47V28.78l-2.124-2.126v-3.27L560.416,22v3.512l-2.943-2.943v1.881l2.616,2.616h-2.044V28.37H561.4l2.208,2.208h-5.888l1.473,1.473h5.888l3.025,3.025h-4l1.225,1.225H569l3.515,3.517V50.36Z\" transform=\"translate(-557.473 -9.485)\"/>\r\n</svg>\r\n`"
            },
            {
                "name": "TREE_ICON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\r\n<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nxmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"31.883\" height=\"40.875\"\r\nviewBox=\"0 0 31.883 40.875\"><defs>\r\n<style>.tree{fill:\"none\";}</style>\r\n<linearGradient id=\"a\" x1=\"0.5\" x2=\"0.5\" y2=\"1\" gradientUnits=\"objectBoundingBox\"><stop offset=\"0\" stop-color=\"#08954e\" stop-opacity=\"0.161\"/><stop offset=\"1\" stop-color=\"#08954e\"/>\r\n</linearGradient></defs><path class=\"tree\" d=\"M572.514,50.36h1.8V39.817L577.83,36.3h3.678l1.227-1.225h-4.007l3.025-3.025h5.886l1.473-1.473h-5.885l2.208-2.208h3.351V27.063H586.74l2.616-2.616V22.566l-2.943,2.943V22l-1.391,1.389v3.27L582.9,28.78V25.756l-1.472,1.47v3.19L578.4,33.441v-3.19l-1.473,1.473v3.27l-2.779,2.779c.082-.079,0-6.457,0-6.457l2.943-2.945h2.945V27.144h-2.045l6.049-6.049h4.416V19.87H585.1l1.965-1.963-.493-1.064-.9.9V15.21l-1.391-1.391v5.314l-6.7,6.7V22.484l-1.228,1.228v3.433l-2.29,2.289V23.14l1.8-1.8H580.2l1.307-1.307h-4.742l2.371-2.371h3.6V16.353h-2.371L583.716,13l-1.143-1.064-2.289,2.289V11.121l-1.146-1.146v5.967l-2.126,2.126V13.982l-1.388,1.391V19.3l-1.473,1.47V14.309l4.17-4.17H576.6l-2.453,2.453V9.485h-1.47v3.106l-2.453-2.453h-1.718l4.17,4.17v6.457l-1.473-1.47V15.373l-1.388-1.391v4.086l-2.126-2.126V9.975l-1.146,1.146v3.106l-2.287-2.289L563.114,13l3.351,3.351H564.1v1.309h3.6l2.371,2.371h-4.742l1.307,1.307h4.334l1.8,1.8v6.294l-2.29-2.289V23.712l-1.228-1.228v3.354l-6.7-6.7V13.819l-1.391,1.391v2.534l-.9-.9-.49,1.064,1.963,1.963h-3.354V21.1h4.415l6.049,6.049h-2.045V28.37h2.945l2.943,2.945s-.084,6.378,0,6.457L569.9,34.993v-3.27l-1.473-1.473v3.19L565.4,30.416v-3.19l-1.473-1.47V28.78l-2.124-2.126v-3.27L560.416,22v3.512l-2.943-2.943v1.881l2.616,2.616h-2.044V28.37H561.4l2.208,2.208h-5.888l1.473,1.473h5.888l3.025,3.025h-4l1.225,1.225H569l3.515,3.517V50.36Z\" transform=\"translate(-557.473 -9.485)\"/>\r\n</svg>\r\n`"
            },
            {
                "name": "TREE_LOGO",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\r\n  < svg xmlns = \"http://www.w3.org/2000/svg\" width = \"45\" height = \"55.625\"\r\nviewBox = \"0 0 45 55.625\" > <defs>\r\n  <style>.tree - logo{ fill:#008f63; }.b,.d{ fill:#e85625; }.c{ fill:#1b9bdc; }.d{ stroke:#6f1500; stroke - width: 0.2px; }.e{ fill:#6f1500; }.f{ fill:#2b1b28; }.g{ fill:#1a231e; }.h,.j{ fill:#0b6f55; font - size: 5px; }.h{ font - family: LucidaGrande - Bold, Lucida Grande; font - weight: 700; }.i,.j{ font - family: OpenSans - Semibold, Open Sans; font - weight: 600; }.k,.m{ stroke: none; }.l{ fill: none; }.m{ fill:#2b1b28; } </style></defs > <g transform=\"translate(-1760 -16.375)\" >\r\n  <path class=\"tree-logo\" d = \"M-5572.5-231.625l-3.1,6.83-1.288,2.837-10.363,22.833h28.75Z\" transform = \"translate(7355.25 248)\" />\r\n  <path class=\"b\" d = \"M-5578.25-192.687h10.625v-6.437h-10.625\" transform = \"translate(7355.25 248)\" />\r\n  <path class=\"c\" d = \"M-5580.781-189.8a4.331,4.331,0,0,1,3.266-3.172c-.218.035,10.212,0,10.212,0a5.055,5.055,0,0,1,2.835,3.172Z\" transform = \"translate(7354.781 248.156)\" />\r\n  <path class=\"b\" d = \"M-5585.437-211.5l12.5,4.5a5.384,5.384,0,0,1-4.375,3.125c-3.135.188-8.094-4.031-8.375-4.922A6.477,6.477,0,0,1-5585.437-211.5Z\" transform = \"translate(7356.354 247.869)\" />\r\n  <path class=\"c\" d = \"M-5567.2-221.222s3.75-1.062,5.875,4.25c-.84,1.064-3.375,1.75-3.375,1.75Z\" transform = \"translate(7354.516 248.222)\" />\r\n  <path class=\"b\" d = \"M-5573.812-211.931-5586-205.869a6.6,6.6,0,0,0,4.605,1.994c3.135.188,7.777-3.984,8.375-4.922S-5573.812-211.931-5573.812-211.931Z\" transform = \"translate(7366.87 242.869)\" />\r\n  <path class=\"c\" d = \"M-5583-215.094c-.051,0,.754-.082.4,0a4.033,4.033,0,0,0-2.834,3.4c-.031,0,2.438.834,2.438.834l1.568-3.531A2.344,2.344,0,0,0-5583-215.094Z\" transform = \"translate(7356.354 248.098)\" />\r\n  <path class=\"b\" d = \"M-5583.687-216.9s1.359,4.512,6.984,3.832,4.945-7.973,4.945-7.973l-.556-1.607-5.625-2.225Z\" transform = \"translate(7356.149 248)\" /> <g class=\"d\" transform = \"translate(1775.438 31)\" > <circle class=\"k\" cx = \"1.5\" cy = \"1.5\" r = \"1.5\" /> <circle class=\"l\" cx = \"1.5\" cy = \"1.5\" r = \"1.4\" /> </g><g class=\"d\" transform=\"translate(1780.87 27.563)\"><circle class=\"k\" cx=\"1.5\" cy=\"1.5\" r=\"1.5\"/ > <circle class=\"l\" cx = \"1.5\" cy = \"1.5\" r = \"1.4\" /> </g>\r\n  <path class=\"e\" d=\"M-5577.228-215.945c1.84,1.334,3.363.841,3.227-1.184a.28.28,0,0,0,.175.02s.275,1.664-1.053,2.062a2.866,2.866,0,0,1-2.517-.753S-5577.211-215.957-5577.228-215.945Z\" transform=\"translate(7295.079 -819.314) rotate(-11)\"/ > <g class=\"f\" transform = \"translate(-5592.482 -606.884) rotate(3)\" >\r\n  <path class=\"k\" d = \"M 7392.79052734375 254.2174987792969 C 7392.2705078125 254.2174987792969 7391.79150390625 253.9266357421875 7391.55029296875 253.4706573486328 L 7393.52783203125 251.6287841796875 C 7393.93798828125 251.8837127685547 7394.18994140625 252.3330078125 7394.18994140625 252.8180694580078 C 7394.18994140625 253.5897216796875 7393.56201171875 254.2174987792969 7392.79052734375 254.2174987792969 Z\" />\r\n  <path class=\"m\" d = \"M 7392.79052734375 254.1175079345703 C 7393.5068359375 254.1175079345703 7394.08984375 253.5345764160156 7394.08984375 252.8180694580078 C 7394.08984375 252.3931732177734 7393.8818359375 251.9978332519531 7393.53857421875 251.7556610107422 L 7391.67626953125 253.4900512695312 C 7391.91015625 253.8752899169922 7392.33349609375 254.1175079345703 7392.79052734375 254.1175079345703 M 7392.79052734375 254.3175048828125 C 7392.2080078125 254.3175048828125 7391.6728515625 253.976318359375 7391.427734375 253.4482879638672 L 7393.51416015625 251.5048675537109 C 7393.9931640625 251.7696533203125 7394.2900390625 252.2728881835938 7394.2900390625 252.8180694580078 C 7394.2900390625 253.6448669433594 7393.6171875 254.3175048828125 7392.79052734375 254.3175048828125 Z\" /> </g><g class=\"f\" transform=\"translate(-5524.492 -1122.833) rotate(7)\">\r\n  <path class=\"k\" d=\"M 7392.79052734375 254.2174987792969 C 7392.2705078125 254.2174987792969 7391.79150390625 253.9266357421875 7391.55029296875 253.4706573486328 L 7393.52783203125 251.6287841796875 C 7393.93798828125 251.8837127685547 7394.18994140625 252.3330078125 7394.18994140625 252.8180694580078 C 7394.18994140625 253.5897216796875 7393.56201171875 254.2174987792969 7392.79052734375 254.2174987792969 Z\"/ >\r\n  <path class=\"m\" d = \"M 7392.79052734375 254.1175079345703 C 7393.5068359375 254.1175079345703 7394.08984375 253.5345764160156 7394.08984375 252.8180694580078 C 7394.08984375 252.3931732177734 7393.8818359375 251.9978332519531 7393.53857421875 251.7556610107422 L 7391.67626953125 253.4900512695312 C 7391.91015625 253.8752899169922 7392.33349609375 254.1175079345703 7392.79052734375 254.1175079345703 M 7392.79052734375 254.3175048828125 C 7392.2080078125 254.3175048828125 7391.6728515625 253.976318359375 7391.427734375 253.4482879638672 L 7393.51416015625 251.5048675537109 C 7393.9931640625 251.7696533203125 7394.2900390625 252.2728881835938 7394.2900390625 252.8180694580078 C 7394.2900390625 253.6448669433594 7393.6171875 254.3175048828125 7392.79052734375 254.3175048828125 Z\" /> </g>\r\n  <path class=\"g\" d=\"M-5583.417-216.98l11.245-5.739s.6-.142.6.279a1.1,1.1,0,0,1-.469,1.047c-1.437.8-2.062.375-2.641.875s-2.411,2.531-2.411,2.531c-.433.188.083-.151,0-.734s-1.344,1.987-3.479,2.438S-5583.417-216.98-5583.417-216.98Z\" transform=\"translate(7355.573 247.721)\"/ >\r\n  <path class=\"c\" d = \"M-5584.587-217.1c1.313,1.063,6.938-2.875,6.938-2.875a62.717,62.717,0,0,1,6.125-3.125c-3.469-4.844-7.381-5.933-7.381-5.933a5.044,5.044,0,0,0-4.75,1.094C-5585.906-225.969-5584.587-219.661-5584.587-217.1Z\" transform = \"translate(7355.962 247.973)\" /> <text class=\"h\" transform = \"translate(1771 65)\" > <tspan x=\"0\" y = \"0\" > ונוער < /tspan><tspan class=\"i\" y=\"0\"> </tspan > <tspan y=\"0\" > חינוך < /tspan></text > <text class=\"j\" transform = \"translate(1760 71)\" > <tspan x=\"0\" y = \"0\" > Youth & amp; Education < /tspan></text > </g>\r\n    < /svg>\r\n      `"
            },
            {
                "name": "User",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Cards.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "CardUserTemplate.bind({})"
            },
            {
                "name": "Wizard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Cards.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "CardWizardTemplate.bind({})"
            },
            {
                "name": "Wizard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Stepper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/Table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  data: [\r\n    {\r\n      id: 1,\r\n      block: 20,\r\n      division: 10,\r\n      subdivision: 0,\r\n      area: 2692,\r\n      areaOwn: 748,\r\n      property: '',\r\n      status: {\r\n        label: 'ממתין לטיפול עורך דין',\r\n        value: 4,\r\n      },\r\n      description: '',\r\n      location: 'קריית שמונה',\r\n    },\r\n    {\r\n      id: 2,\r\n      block: 20,\r\n      division: 20,\r\n      subdivision: 0,\r\n      area: 2692,\r\n      areaOwn: null,\r\n      property: '',\r\n      status: {\r\n        label: 'שוריין ע\"י פיננסים',\r\n        value: 5,\r\n      },\r\n      description: '',\r\n      location: 'קריית שמונה',\r\n    },\r\n    {\r\n      id: 3,\r\n      block: 24,\r\n      division: 20,\r\n      subdivision: 0,\r\n      area: 2692,\r\n      areaOwn: null,\r\n      property: '',\r\n      status: {\r\n        label: 'ממתין לרו\"ח',\r\n        value: 3,\r\n      },\r\n      description: '',\r\n      location: 'קריית שמונה',\r\n    },\r\n    {\r\n      id: 4,\r\n      block: 20,\r\n      division: 54,\r\n      subdivision: 0,\r\n      area: 1037,\r\n      areaOwn: null,\r\n      property: '',\r\n      status: {\r\n        label: 'התקבלה עסקה חדשה',\r\n        value: 1,\r\n      },\r\n      description: '',\r\n      location: 'קריית שמונה',\r\n    },\r\n    {\r\n      id: 5,\r\n      block: 20,\r\n      division: 20,\r\n      subdivision: 0,\r\n      area: 680,\r\n      areaOwn: null,\r\n      property: '',\r\n      status: {\r\n        label: 'ממתין לפיננסים',\r\n        value: 1,\r\n      },\r\n      description: '',\r\n      location: 'קריית שמונה',\r\n    },\r\n    {\r\n      id: 6,\r\n      block: 20,\r\n      division: 20,\r\n      subdivision: 0,\r\n      area: 2692,\r\n      areaOwn: 748,\r\n      property: '',\r\n      status: {\r\n        label: 'ממתין לטיפול עורך דין',\r\n        value: 4,\r\n      },\r\n      description: '',\r\n      location: 'קריית שמונה',\r\n    },\r\n  ],\r\n  columns: [\r\n    new ColumnModel({ label: 'גוש', type: 'number', control: 'text' }),\r\n    new ColumnModel({ label: 'חלקה', type: 'number', control: 'number' }),\r\n    new ColumnModel({ label: 'תת חלקה', type: 'number', control: 'number' }),\r\n    new ColumnModel({ label: 'שטח מ\"ר', type: 'number', control: 'number' }),\r\n    new ColumnModel({\r\n      label: 'שטח בבעלות הימנותא',\r\n      type: 'number',\r\n      control: 'number',\r\n    }),\r\n    new ColumnModel({ label: 'זכות במס', type: 'text', control: 'text' }),\r\n    new ColumnModel({\r\n      label: 'סטטוס',\r\n      type: 'custom',\r\n      center: true,\r\n      control: 'text',\r\n    }),\r\n    new ColumnModel({ label: 'תיאור', type: 'text', control: 'text' }),\r\n    new ColumnModel({ label: 'יישוב', type: 'text', control: 'text', icon : 'location' }),\r\n  ],\r\n  options: {\r\n    pagination: pagination,\r\n    filters: ['id', '_constructor-name_'],\r\n  },\r\n}"
            },
            {
                "name": "V_SIGN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\"\r\n width=\"17.956\" height=\"17.331\" viewBox=\"0 0 17.956 17.331\">\r\n <defs>\r\n <style>.v-sign{fill:\"none\";opacity:0;}\r\n .b-v-sign{fill:none;stroke:#6dc066;stroke-linecap:round;stroke-linejoin:round;stroke-width:1.5px;}\r\n .c,.d{stroke:none;}.d{fill:#dfdfdf;}</style></defs><g transform=\"translate(0.332 0.331)\">\r\n <g class=\"v-sign\">\r\n\r\n\r\n <path class=\"c\" d=\"M 8.5 16.25 C 4.226640224456787 16.25 0.75 12.77336025238037 0.75 8.5 C 0.75 6.115330219268799 1.804280042648315 3.984380006790161 3.798870086669922 2.337510108947754 C 4.990379810333252 1.342460036277771 6.746600151062012 0.75 8.5 0.75 C 12.77336025238037 0.75 16.25 4.226640224456787 16.25 8.5 C 16.25 12.77336025238037 12.77336025238037 16.25 8.5 16.25 Z\"/>\r\n\r\n <path class=\"d\" d=\"M 8.5 1.5 C 6.916910171508789 1.5 5.340410232543945 2.027279853820801 4.28285026550293 2.910479545593262 L 4.276379585266113 2.915849685668945 C 2.460060119628906 4.415530204772949 1.5 6.346500396728516 1.5 8.5 C 1.5 12.35980987548828 4.640190124511719 15.5 8.5 15.5 C 12.35980987548828 15.5 15.5 12.35980987548828 15.5 8.5 C 15.5 4.640190124511719 12.35980987548828 1.5 8.5 1.5 M 8.5 0 C 13.19441986083984 0 17 3.805580139160156 17 8.5 C 17 13.19441986083984 13.19441986083984 17 8.5 17 C 3.805580139160156 17 0 13.19441986083984 0 8.5 C 0 5.866430282592773 1.197699546813965 3.512599945068359 3.32135009765625 1.759169578552246 C 4.549599647521973 0.7334194183349609 6.439149856567383 0 8.5 0 Z\"/></g><g transform=\"translate(0.631 0.581)\">\r\n\r\n <path class=\"b-v-sign\" d=\"M18.933,9.965v.706a7.72,7.72,0,0,1-5.708,7.357,8.116,8.116,0,0,1-8.942-3.183A7.456,7.456,0,0,1,4.911,5.68a8.171,8.171,0,0,1,9.3-2.024\" transform=\"translate(-3 -2.991)\"/>\r\n <path class=\"b-v-sign\" d=\"M23.856,6,15.89,13.974l-2.39-2.39\"\r\n transform=\"translate(-7.923 -4.402)\"/></g></g></svg>`"
            },
            {
                "name": "WithMenu",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/screens/Layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithStatus",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/screens/Layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithWizard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-kakal-ui/src/lib/stories/screens/Layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Color",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/lib-kakal-ui/src/lib/styles/theme.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 191
            },
            {
                "name": "ColumnDef",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": " | \"select\" | \"actions\" | \"accordion\" | string",
                "file": "projects/lib-kakal-ui/src/lib/app/components/columns/column.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "ColumnType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"number\" | \"date\" | \"text\" | \"custom\" | \"actions\" | \"select\" | \"expend\"",
                "file": "projects/lib-kakal-ui/src/lib/app/components/columns/column.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "ControlTemplate",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "[, , ]",
                "file": "projects/lib-kakal-ui/src/lib/app/components/form/services/form.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "ControlType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"text\" | \"password\" | \"number\" | \"textarea\" | \"select\" | \"calendar\" | \"radio\" | \"date\" | \"time\" | \"group\" | \"custom\" | \"autocomplete\"",
                "file": "projects/lib-kakal-ui/src/lib/app/components/form/models/question.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "GroupType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"default\" | \"group\" | \"custom\"",
                "file": "projects/lib-kakal-ui/src/lib/app/components/form/models/question-group.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "IconType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"mat\" | \"svg\"",
                "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icon.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "id",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "string | number",
                "file": "projects/lib-kakal-ui/src/lib/app/components/table/table.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "ListItemKeys",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"path\" | \"label\" | \"svgUrl\"",
                "file": "projects/lib-kakal-ui/src/lib/app/components/list-item/list-item.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Palette",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "ThemePalette | \"paper\" | \"default\" | \"disable\" | \"table\" | \"text\" | \"success\"",
                "file": "projects/lib-kakal-ui/src/lib/styles/theme.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Question",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "QuestionSelectModel | QuestionTextModel | QuestionCalendar | QuestionTextareaModel | QuestionNumberModel | QuestionAutocompleteModel",
                "file": "projects/lib-kakal-ui/src/lib/app/components/form/services/form.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "QuestionBase",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "QuestionBaseModel<string | number | Date>",
                "file": "projects/lib-kakal-ui/src/lib/app/components/form/services/form.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 174
            },
            {
                "name": "QuestionType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"default\" | \"group\" | \"custom\"",
                "file": "projects/lib-kakal-ui/src/lib/app/components/form/models/question.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "SortDir",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"desc\" | \"asc\"",
                "file": "projects/lib-kakal-ui/src/lib/app/components/columns/column.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "state",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"add\" | \"save\" | \"edit\" | \"expand\" | \"cancel\" | \"delete\" | \"form\" | string",
                "file": "projects/lib-kakal-ui/src/lib/app/components/table/table.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "StepperDirection",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"column\" | \"row\"",
                "file": "projects/lib-kakal-ui/src/lib/app/components/cards/card-step/card-step.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "StepType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"wizard\" | \"status\" | \"step\" | \"info\" | \"card\"",
                "file": "projects/lib-kakal-ui/src/lib/app/components/cards/card-step/card-step.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "StepVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"circle\" | \"square\"",
                "file": "projects/lib-kakal-ui/src/lib/app/components/cards/card-step/card-step.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Theme",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/lib-kakal-ui/src/lib/styles/theme.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/lib-kakal-ui/src/lib/stories/Table.stories.ts": [
                {
                    "name": "Accordion",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Actions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ExpandByCell",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Form",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "pagination",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PaginationInstance",
                    "defaultValue": "{\r\n  itemsPerPage: 6,\r\n  currentPage: 1,\r\n  totalItems: 6,\r\n}"
                },
                {
                    "name": "Selectable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TableExComponent<any>>",
                    "defaultValue": "(\r\n  args: TableExComponent<any>\r\n) => ({\r\n  props: args,\r\n})"
                },
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  data: [\r\n    {\r\n      id: 1,\r\n      block: 20,\r\n      division: 10,\r\n      subdivision: 0,\r\n      area: 2692,\r\n      areaOwn: 748,\r\n      property: '',\r\n      status: {\r\n        label: 'ממתין לטיפול עורך דין',\r\n        value: 4,\r\n      },\r\n      description: '',\r\n      location: 'קריית שמונה',\r\n    },\r\n    {\r\n      id: 2,\r\n      block: 20,\r\n      division: 20,\r\n      subdivision: 0,\r\n      area: 2692,\r\n      areaOwn: null,\r\n      property: '',\r\n      status: {\r\n        label: 'שוריין ע\"י פיננסים',\r\n        value: 5,\r\n      },\r\n      description: '',\r\n      location: 'קריית שמונה',\r\n    },\r\n    {\r\n      id: 3,\r\n      block: 24,\r\n      division: 20,\r\n      subdivision: 0,\r\n      area: 2692,\r\n      areaOwn: null,\r\n      property: '',\r\n      status: {\r\n        label: 'ממתין לרו\"ח',\r\n        value: 3,\r\n      },\r\n      description: '',\r\n      location: 'קריית שמונה',\r\n    },\r\n    {\r\n      id: 4,\r\n      block: 20,\r\n      division: 54,\r\n      subdivision: 0,\r\n      area: 1037,\r\n      areaOwn: null,\r\n      property: '',\r\n      status: {\r\n        label: 'התקבלה עסקה חדשה',\r\n        value: 1,\r\n      },\r\n      description: '',\r\n      location: 'קריית שמונה',\r\n    },\r\n    {\r\n      id: 5,\r\n      block: 20,\r\n      division: 20,\r\n      subdivision: 0,\r\n      area: 680,\r\n      areaOwn: null,\r\n      property: '',\r\n      status: {\r\n        label: 'ממתין לפיננסים',\r\n        value: 1,\r\n      },\r\n      description: '',\r\n      location: 'קריית שמונה',\r\n    },\r\n    {\r\n      id: 6,\r\n      block: 20,\r\n      division: 20,\r\n      subdivision: 0,\r\n      area: 2692,\r\n      areaOwn: 748,\r\n      property: '',\r\n      status: {\r\n        label: 'ממתין לטיפול עורך דין',\r\n        value: 4,\r\n      },\r\n      description: '',\r\n      location: 'קריית שמונה',\r\n    },\r\n  ],\r\n  columns: [\r\n    new ColumnModel({ label: 'גוש', type: 'number', control: 'text' }),\r\n    new ColumnModel({ label: 'חלקה', type: 'number', control: 'number' }),\r\n    new ColumnModel({ label: 'תת חלקה', type: 'number', control: 'number' }),\r\n    new ColumnModel({ label: 'שטח מ\"ר', type: 'number', control: 'number' }),\r\n    new ColumnModel({\r\n      label: 'שטח בבעלות הימנותא',\r\n      type: 'number',\r\n      control: 'number',\r\n    }),\r\n    new ColumnModel({ label: 'זכות במס', type: 'text', control: 'text' }),\r\n    new ColumnModel({\r\n      label: 'סטטוס',\r\n      type: 'custom',\r\n      center: true,\r\n      control: 'text',\r\n    }),\r\n    new ColumnModel({ label: 'תיאור', type: 'text', control: 'text' }),\r\n    new ColumnModel({ label: 'יישוב', type: 'text', control: 'text', icon : 'location' }),\r\n  ],\r\n  options: {\r\n    pagination: pagination,\r\n    filters: ['id', '_constructor-name_'],\r\n  },\r\n}"
                }
            ],
            "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts": [
                {
                    "name": "ADD_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\r\n<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"27.481\" height=\"27.481\"\r\nviewBox=\"0 0 27.481 27.481\"><defs>\r\n<style>.add{fill:\"none\";}</style></defs>\r\n<path class=\"add\" d=\"M9.993,0H2.5A2.5,2.5,0,0,0,0,2.5V9.993a2.5,2.5,0,0,0,2.5,2.5H9.993a2.5,2.5,0,0,0,2.5-2.5V2.5A2.5,2.5,0,0,0,9.993,0Zm1.249,9.993a1.251,1.251,0,0,1-1.249,1.249H2.5A1.251,1.251,0,0,1,1.249,9.993V2.5A1.251,1.251,0,0,1,2.5,1.249H9.993A1.251,1.251,0,0,1,11.242,2.5Z\"/>\r\n<path class=\"add\" d=\"M265.993,0H258.5A2.5,2.5,0,0,0,256,2.5V9.993a2.5,2.5,0,0,0,2.5,2.5h7.495a2.5,2.5,0,0,0,2.5-2.5V2.5A2.5,2.5,0,0,0,265.993,0Zm1.249,9.993a1.251,1.251,0,0,1-1.249,1.249H258.5a1.251,1.251,0,0,1-1.249-1.249V2.5A1.251,1.251,0,0,1,258.5,1.249h7.495A1.251,1.251,0,0,1,267.242,2.5Z\" transform=\"translate(-241.01)\"/>\r\n<path class=\"add\" d=\"M9.993,256H2.5A2.5,2.5,0,0,0,0,258.5v7.495a2.5,2.5,0,0,0,2.5,2.5H9.993a2.5,2.5,0,0,0,2.5-2.5V258.5A2.5,2.5,0,0,0,9.993,256Zm1.249,9.993a1.251,1.251,0,0,1-1.249,1.249H2.5a1.251,1.251,0,0,1-1.249-1.249V258.5A1.251,1.251,0,0,1,2.5,257.249H9.993a1.251,1.251,0,0,1,1.249,1.249Z\" transform=\"translate(0 -241.01)\"/>\r\n<path class=\"add\" d=\"M305.535,301.789h-2.5v-2.5a.625.625,0,0,0-1.249,0v2.5h-2.5a.625.625,0,0,0,0,1.249h2.5v2.5a.625.625,0,0,0,1.249,0v-2.5h2.5a.625.625,0,1,0,0-1.249Z\" transform=\"translate(-281.177 -281.178)\"/>\r\n</svg>`"
                },
                {
                    "name": "ASSETS_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\r\n<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"76.154\" height=\"55\" viewBox=\"0 0 76.154 55\"><defs>\r\n<style>.a-assets{fill:\"none\";}.b-assets{fill:none;stroke:\"none\";stroke-width:2px;}</style>\r\n</defs><g transform=\"translate(-112 -88)\">\r\n<path class=\"a-assets\" d=\"M188.154,138.769h-6.346V109.154H164.885V88H135.269v21.154H118.346v29.615H112V143h76.154Zm-10.577-25.385v25.385H164.885V113.385ZM160.654,92.231v46.538h-4.231V121.846H143.731v16.923H139.5V92.231Zm-8.462,46.538h-4.231V126.077h4.231Zm-29.615-25.385h12.692v25.385H122.577Z\" transform=\"translate(0 0)\"/>\r\n<path class=\"b-assets\" d=\"M232,120h4.278v4.278H232Z\" transform=\"translate(-88.29 -23.546)\"/>\r\n<path class=\"b-assets\" d=\"M264,120h4.278v4.278H264Z\" transform=\"translate(-111.834 -23.546)\"/>\r\n<path class=\"b-assets\" d=\"M232,152h4.278v4.278H232Z\" transform=\"translate(-88.29 -47.093)\"/>\r\n<path class=\"b-assets\" d=\"M264,152h4.278v4.278H264Z\" transform=\"translate(-111.834 -47.093)\"/>\r\n<path class=\"b-assets\" d=\"M232,184h4.278v4.278H232Z\" transform=\"translate(-88.29 -70.639)\"/>\r\n<path class=\"b-assets\" d=\"M264,184h4.278v4.278H264Z\" transform=\"translate(-111.834 -70.639)\"/></g></svg>\r\n`"
                },
                {
                    "name": "BED_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"36\" height=\"27.316\"\r\nviewBox=\"0 0 36 27.316\"><defs>\r\n<style>.bed{fill:\"none\";}</style></defs><g transform=\"translate(-4 -62.751)\">\r\n<path class=\"bed\" d=\"M35.106,74.882H34.6a2.45,2.45,0,0,0-1.409.444V74.169a2.4,2.4,0,0,0-2.395-2.395H23.9c-.291,0-.012,1.1,0,1.055h6.894a1.341,1.341,0,0,1,1.34,1.34v3.745H13.178V74.169a1.341,1.341,0,0,1,1.34-1.34H23.9c.291,0,.291-1.055,0-1.055l-15.944.04c.621-1.126.39-3.8.187-4.556-.075-.281-.043-.065,0,0l-.372-1.388a2.524,2.524,0,0,0-3.9-1.4v-.256A2.467,2.467,0,0,0,1.4,61.751H.894A.9.9,0,0,0,0,62.645V88.174a.9.9,0,0,0,.894.894h2.08a.9.9,0,0,0,.894-.894V83.311h.6c.291,0,.291-1.055,0-1.055h-.6V78.969H32.133v3.287H4.464c-.291,0-.291,1.055,0,1.055H32.133v4.862a.9.9,0,0,0,.894.894h2.08A.9.9,0,0,0,36,88.174v-12.4A.894.894,0,0,0,35.106,74.882ZM3.913,70.96a2.508,2.508,0,0,0,.491.953,2.388,2.388,0,0,0-.537.272v-1.4Zm-1.1,17.052H1.055V62.806H1.4a1.411,1.411,0,0,1,1.409,1.409ZM3.867,74.169a1.341,1.341,0,0,1,1.34-1.34H9.745a2.381,2.381,0,0,0-.411,1.34v3.745H3.867ZM34.945,88.013H33.187V77.346A1.411,1.411,0,0,1,34.6,75.937h.349Z\" transform=\"translate(4 1)\"/></g>\r\n</svg>`"
                },
                {
                    "name": "BELL_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\"\r\n width=\"20.107\" height=\"22.307\" viewBox=\"0 0 20.107 22.307\">\r\n <defs><style>.bell{fill:#448ecd;}</style></defs>\r\n <g transform=\"translate(-25.25)\"><g transform=\"translate(32.336)\"><path class=\"bell\"\r\n  d=\"M190.857,0a2.971,2.971,0,0,0-2.968,2.968v.9h1.535v-.9a1.433,1.433,0,0,1,2.865,0v.9h1.535v-.9A2.971,2.971,0,0,0,190.857,0Z\"\r\n   transform=\"translate(-187.89)\"/></g><g transform=\"translate(31.671 18.7)\"><path class=\"bell\"\r\n    d=\"M178.354,429.2a2.075,2.075,0,0,1-2.072,2.072h-.051a2.075,2.075,0,0,1-2.072-2.072h-1.535a3.611,3.611,0,0,0,3.607,3.607h.051a3.611,3.611,0,0,0,3.607-3.607Z\" transform=\"translate(-172.624 -429.205)\"/>\r\n    </g><g transform=\"translate(25.25 2.84)\"><path class=\"bell\" d=\"M45.235,80.748l-2.18-3.392V73a7.752,7.752,0,1,0-15.5,0v4.354l-2.18,3.392a.768.768,0,0,0,.645,1.183H44.59a.767.767,0,0,0,.645-1.182ZM27.423,80.4,28.965,78a.767.767,0,0,0,.122-.415V73A6.217,6.217,0,1,1,41.52,73v4.579a.768.768,0,0,0,.122.415l1.542,2.4Z\"\r\n    transform=\"translate(-25.25 -65.174)\"/></g></g></svg>`"
                },
                {
                    "name": "BOTTOM_TREE_LOGO",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\r\n    < svg xmlns = \"http://www.w3.org/2000/svg\" xmlns: xlink = \"http://www.w3.org/1999/xlink\"\r\nwidth = \"251.827\" height = \"97.18\" viewBox = \"0 0 251.827 97.18\" >\r\n  <defs><style>.bottom-tree{ opacity: 0.2; fill:#448ecd; }\r\n</style><linearGradient id=\"a\" x1=\"0.5\" x2=\"0.5\" y2=\"1\" gradientUnits=\"objectBoundingBox\">\r\n  < stop offset = \"0\" stop - color=\"#fff\" /> <stop offset=\"1\" stop - color=\"#448ecd\" />\r\n    </linearGradient></defs >\r\n    <path class=\"bottom-tree\" d = \"M813.255,106.665V96.41H785.183l16.449-16.428-4.123-8.908-7.52,7.541V57.4L778.348,45.759V90.237l-23.264,7.541H715.391l19.847-19.846h30.12V66.972H745.512l28.05-28.05-9.571-8.908L744.828,49.177v-26l-9.59-9.592V63.534l-17.8,17.8v-34.2L705.82,58.769V91.6l-12.327,12.305V49.861L728.4,14.954H714.024l-20.53,20.53v-26H681.189v26l-20.53-20.53H646.282l34.907,34.907v54.049L668.862,91.6V58.769L657.241,47.126v34.2l-17.8-17.8V13.587l-9.592,9.592v26L610.712,30.015l-9.592,8.908,28.05,28.05H609.344V77.931h30.1L659.29,97.777H619.6l-23.264-7.541V45.759L584.691,57.4V78.615l-7.519-7.541-4.1,8.908L589.5,96.41H561.428v10.255Z\"\r\ntransform = \"translate(-561.428 -9.485)\" />\r\n  </svg>\r\n    `"
                },
                {
                    "name": "BOTTOM_TREE_LOGO_LANDS_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\nwidth=\"251.827\" height=\"97.18\" viewBox=\"0 0 251.827 97.18\"><defs>\r\n<style> .bottom-tree-lands{opacity:0.2;fill:url(#bottom-tree-lands);}</style><linearGradient id=\"bottom-tree-lands\" x1=\"0.5\" x2=\"0.5\" y2=\"1\" gradientUnits=\"objectBoundingBox\">\r\n<stop offset=\"0\" stop-color=\"#fff\"/><stop offset=\"1\" stop-color=\"#d6a348\"/></linearGradient></defs>\r\n<path class=\"bottom-tree-lands\" d=\"M813.255,106.665V96.41H785.183l16.449-16.428-4.123-8.908-7.52,7.541V57.4L778.348,45.759V90.237l-23.264,7.541H715.391l19.847-19.846h30.12V66.972H745.512l28.05-28.05-9.571-8.908L744.828,49.177v-26l-9.59-9.592V63.534l-17.8,17.8v-34.2L705.82,58.769V91.6l-12.327,12.305V49.861L728.4,14.954H714.024l-20.53,20.53v-26H681.189v26l-20.53-20.53H646.282l34.907,34.907v54.049L668.862,91.6V58.769L657.241,47.126v34.2l-17.8-17.8V13.587l-9.592,9.592v26L610.712,30.015l-9.592,8.908,28.05,28.05H609.344V77.931h30.1L659.29,97.777H619.6l-23.264-7.541V45.759L584.691,57.4V78.615l-7.519-7.541-4.1,8.908L589.5,96.41H561.428v10.255Z\" transform=\"translate(-561.428 -9.485)\"/>\r\n</svg>\r\n    `"
                },
                {
                    "name": "BUILDING_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\r\n<svg xmlns=\"http://www.w3.org/2000/svg\"\r\n width=\"23.862\" height=\"26.279\"\r\n viewBox=\"0 0 23.862 26.279\">\r\n <defs>\r\n <style>.building{fill\"none\";}</style></defs>\r\n <g transform=\"translate(0.03 0.028)\">\r\n <path class=\"building\" d=\"M25.855,8.861c0-.062-3.944,0-12.933,0-.067-.133,0,1.342,0,6.962-.219-.051-2.727.123-10.891,0-.052-.158-.052-.033,0,17.946-.042.061.079,1.457,0,1.336H25.855ZM3.665,17.437c9.065-.085,9.257-.081,9.257,0V33.769H3.665S3.667,17.353,3.665,17.437Zm10.627-7.178H24.517V33.769H14.292Z\" transform=\"translate(-2.023 -8.861)\"/>\r\n <path class=\"building\" d=\"M298.076,55.12h-.964a.565.565,0,0,0-.565.565v.964a.565.565,0,0,0,.565.565h.964a.565.565,0,0,0,.565-.565v-.964A.564.564,0,0,0,298.076,55.12Z\" transform=\"translate(-278.183 -51.941)\"/>\r\n <path class=\"building\" d=\"M298.076,55.12h-.964a.565.565,0,0,0-.565.565v.964a.565.565,0,0,0,.565.565h.964a.565.565,0,0,0,.565-.565v-.964A.564.564,0,0,0,298.076,55.12Z\" transform=\"translate(-281.949 -51.941)\"/>\r\n <path class=\"building\" d=\"M298.076,55.12h-.964a.565.565,0,0,0-.565.565v.964a.565.565,0,0,0,.565.565h.964a.565.565,0,0,0,.565-.565v-.964A.564.564,0,0,0,298.076,55.12Z\" transform=\"translate(-278.183 -48.941)\"/>\r\n <path class=\"building\" d=\"M298.076,55.12h-.964a.565.565,0,0,0-.565.565v.964a.565.565,0,0,0,.565.565h.964a.565.565,0,0,0,.565-.565v-.964A.564.564,0,0,0,298.076,55.12Z\" transform=\"translate(-281.949 -48.941)\"/>\r\n <path class=\"building\" d=\"M298.076,55.12h-.964a.565.565,0,0,0-.565.565v.964a.565.565,0,0,0,.565.565h.964a.565.565,0,0,0,.565-.565v-.964A.564.564,0,0,0,298.076,55.12Z\" transform=\"translate(-278.183 -45.941)\"/>\r\n <path class=\"building\" d=\"M298.076,55.12h-.964a.565.565,0,0,0-.565.565v.964a.565.565,0,0,0,.565.565h.964a.565.565,0,0,0,.565-.565v-.964A.564.564,0,0,0,298.076,55.12Z\" transform=\"translate(-281.949 -45.941)\"/>\r\n <path class=\"building\" d=\"M298.076,55.12h-.964a.565.565,0,0,0-.565.565v.964a.565.565,0,0,0,.565.565h.964a.565.565,0,0,0,.565-.565v-.964A.564.564,0,0,0,298.076,55.12Z\" transform=\"translate(-278.183 -42.941)\"/>\r\n <path class=\"building\" d=\"M298.076,55.12h-.964a.565.565,0,0,0-.565.565v.964a.565.565,0,0,0,.565.565h.964a.565.565,0,0,0,.565-.565v-.964A.564.564,0,0,0,298.076,55.12Z\" transform=\"translate(-278.183 -39.941)\"/>\r\n <path class=\"building\" d=\"M298.076,55.12h-.964a.565.565,0,0,0-.565.565v.964a.565.565,0,0,0,.565.565h.964a.565.565,0,0,0,.565-.565v-.964A.564.564,0,0,0,298.076,55.12Z\" transform=\"translate(-278.183 -36.941)\"/>\r\n <path class=\"building\" d=\"M298.076,55.12h-.964a.565.565,0,0,0-.565.565v.964a.565.565,0,0,0,.565.565h.964a.565.565,0,0,0,.565-.565v-.964A.564.564,0,0,0,298.076,55.12Z\" transform=\"translate(-281.949 -42.941)\"/>\r\n <path class=\"building\" d=\"M298.076,55.12h-.964a.565.565,0,0,0-.565.565v.964a.565.565,0,0,0,.565.565h.964a.565.565,0,0,0,.565-.565v-.964A.564.564,0,0,0,298.076,55.12Z\" transform=\"translate(-281.949 -39.941)\"/>\r\n <path class=\"building\" d=\"M298.076,55.12h-.964a.565.565,0,0,0-.565.565v.964a.565.565,0,0,0,.565.565h.964a.565.565,0,0,0,.565-.565v-.964A.564.564,0,0,0,298.076,55.12Z\" transform=\"translate(-281.949 -36.941)\"/>\r\n <path class=\"building\" d=\"M75.823,168.92h-.917a.537.537,0,0,0-.537.537v.917a.537.537,0,0,0,.537.537h.917a.537.537,0,0,0,.537-.537v-.917A.537.537,0,0,0,75.823,168.92Z\" transform=\"translate(-70.912 -158.669)\"/>\r\n <path class=\"building\" d=\"M75.823,168.92h-.917a.537.537,0,0,0-.537.537v.917a.537.537,0,0,0,.537.537h.917a.537.537,0,0,0,.537-.537v-.917A.537.537,0,0,0,75.823,168.92Z\" transform=\"translate(-70.912 -150.879)\"/>\r\n <path class=\"building\" d=\"M135.429,168.92h-.917a.537.537,0,0,0-.537.537v.917a.537.537,0,0,0,.537.537h.917a.537.537,0,0,0,.537-.537v-.917A.537.537,0,0,0,135.429,168.92Z\" transform=\"translate(-127.009 -158.669)\"/>\r\n <path class=\"building\" d=\"M135.429,168.92h-.917a.537.537,0,0,0-.537.537v.917a.537.537,0,0,0,.537.537h.917a.537.537,0,0,0,.537-.537v-.917A.537.537,0,0,0,135.429,168.92Z\" transform=\"translate(-127.009 -150.879)\"/>\r\n <path class=\"building\" d=\"M75.823,225.82h-.917a.537.537,0,0,0-.537.537v.917a.537.537,0,0,0,.537.537h.917a.537.537,0,0,0,.537-.537v-.917A.537.537,0,0,0,75.823,225.82Z\" transform=\"translate(-70.912 -212.972)\"/>\r\n <path class=\"building\" d=\"M75.823,282.72h-.917a.537.537,0,0,0-.537.537v.917a.537.537,0,0,0,.537.537h.917a.537.537,0,0,0,.537-.537v-.917A.537.537,0,0,0,75.823,282.72Z\" transform=\"translate(-70.912 -267.275)\"/>\r\n <path class=\"building\" d=\"M135.429,225.82h-.917a.537.537,0,0,0-.537.537v.917a.537.537,0,0,0,.537.537h.917a.537.537,0,0,0,.537-.537v-.917A.537.537,0,0,0,135.429,225.82Z\" transform=\"translate(-127.009 -212.972)\"/>\r\n <path class=\"building\" d=\"M135.429,282.72h-.917a.537.537,0,0,0-.537.537v.917a.537.537,0,0,0,.537.537h.917a.537.537,0,0,0,.537-.537v-.917A.537.537,0,0,0,135.429,282.72Z\" transform=\"translate(-127.009 -267.275)\"/></g></svg>\r\n`"
                },
                {
                    "name": "BUS_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"35.137\" height=\"41.803\"\r\nviewBox=\"0 0 35.137 41.803\"><defs><style>\r\n.bus{fill:\"none\";}</style></defs><path\r\nclass=\"bus\" d=\"M33.969,20.911H7.182a1.451,1.451,0,0,1-1.423-1.434,1.865,1.865,0,0,1,.049-.387L7.234,9.136c.121-.647.7-.774,1.4-.774H32.521c.692,0,1.279.116,1.4.76l1.426,10.136a1.479,1.479,0,0,1,.05.315A1.374,1.374,0,0,1,33.969,20.911ZM32.9,32.075a2.662,2.662,0,1,1,2.724-2.667A2.7,2.7,0,0,1,32.9,32.075Zm-24.68,0a2.662,2.662,0,1,1,2.734-2.667A2.694,2.694,0,0,1,8.217,32.075Zm4.7-29.569H29.651v2.51H12.919A1.255,1.255,0,1,1,12.919,2.506Zm23.594,3.84c-.489-2.353-1.916-3.3-4.244-4.248A38.547,38.547,0,0,0,20.508.023,38.822,38.822,0,0,0,8.7,2.1c-2.327.948-3.731,1.895-4.216,4.248l-1.6,13.1v18.2H5.39v1.673c0,3.346,4.183,3.346,4.183,0V37.643H30.488v1.673a2.51,2.51,0,1,0,5.02,0V37.643h2.51v-18.2l-1.5-13.1Z\" transform=\"translate(-2.88 -0.023)\"/>\r\n</svg>`"
                },
                {
                    "name": "BUTTON_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\"\r\n  width=\"26.76\" height=\"26.76\"\r\n  viewBox=\"0 0 26.76 26.76\"><defs>\r\n  <style>.button-icon{fill:\"none\";}</style>\r\n  </defs><g transform=\"translate(0 -1)\">\r\n  <g transform=\"translate(0 1)\">\r\n  <path class=\"button-icon\"\r\n   d=\"M156,161.285a1.057,1.057,0,0,0,1.057,1.057h3.171v3.171a1.057,1.057,0,0,0,2.114,0v-3.171h3.171a1.057,1.057,0,0,0,0-2.114h-3.171v-3.171a1.057,1.057,0,1,0-2.114,0v3.171h-3.171A1.057,1.057,0,0,0,156,161.285Z\" transform=\"translate(-147.905 -147.905)\"/><path class=\"button-icon\" d=\"M134.208,15.2l1.367-.566a1.057,1.057,0,0,0-.809-1.953l-1.367.566a1.057,1.057,0,0,0,.809,1.953Z\" transform=\"translate(-125.819 -11.934)\"/><path class=\"button-icon\" d=\"M13.38,0a1.045,1.045,0,1,0,0,2.091A11.289,11.289,0,1,1,2.091,13.38,1.045,1.045,0,1,0,0,13.38,13.38,13.38,0,1,0,13.38,0Z\"/><path class=\"button-icon\" d=\"M61.027,62.074l1.046-1.046a1.057,1.057,0,1,0-1.495-1.495l-1.046,1.046a1.057,1.057,0,0,0,1.495,1.495Z\" transform=\"translate(-56.093 -56.093)\"/><path class=\"button-icon\" d=\"M13.254,136.148a1.057,1.057,0,0,0,1.381-.572l.566-1.367a1.057,1.057,0,1,0-1.953-.809l-.566,1.367A1.057,1.057,0,0,0,13.254,136.148Z\"\r\n   transform=\"translate(-11.935 -125.82)\"/>\r\n   </svg>`"
                },
                {
                    "name": "CALENDAR_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\r\n<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"20.094\" height=\"20.094\" viewBox=\"0 0 20.094 20.094\"><defs>\r\n<style>.calender{fill:\"none\";}</style></defs><g transform=\"translate(21)\">\r\n<g transform=\"translate(-21)\">\r\n<ellipse class=\"calender\" cx=\"0.913\" cy=\"0.609\" rx=\"0.913\" ry=\"0.609\" transform=\"translate(14.208 7.415)\"/>\r\n<path class=\"calender\" d=\"M16.954,1.57h-1.02V.785a.785.785,0,0,0-1.57,0V1.57H10.792V.785a.785.785,0,1,0-1.57,0V1.57H5.691V.785a.785.785,0,0,0-1.57,0V1.57H3.14A3.143,3.143,0,0,0,0,4.709V16.954a3.143,3.143,0,0,0,3.14,3.14h6a.785.785,0,0,0,0-1.57h-6a1.572,1.572,0,0,1-1.57-1.57V4.709A1.572,1.572,0,0,1,3.14,3.14h.981v.785a.785.785,0,0,0,1.57,0V3.14H9.223v.785a.785.785,0,1,0,1.57,0V3.14h3.571v.785a.785.785,0,1,0,1.57,0V3.14h1.02a1.572,1.572,0,0,1,1.57,1.57V9.183a.785.785,0,1,0,1.57,0V4.709A3.143,3.143,0,0,0,16.954,1.57Z\"/>\r\n<path class=\"calender\" d=\"M274.317,270a4.317,4.317,0,1,0,4.317,4.317A4.322,4.322,0,0,0,274.317,270Zm0,7.207a2.89,2.89,0,1,1,2.89-2.89A2.893,2.893,0,0,1,274.317,277.207Z\" transform=\"translate(-258.54 -258.54)\"/>\r\n<path class=\"calender\" d=\"M372.748,331.463h-.321v-.749a.714.714,0,1,0-1.427,0v1.463a.714.714,0,0,0,.714.714h1.035a.714.714,0,1,0,0-1.427Z\" transform=\"translate(-355.937 -316.828)\"/>\r\n<ellipse class=\"calender\" cx=\"0.913\" cy=\"0.609\" rx=\"0.913\" ry=\"0.609\" transform=\"translate(10.825 7.415)\"/>\r\n<circle class=\"calender\" cx=\"0.913\" cy=\"0.913\" r=\"0.913\" transform=\"translate(7.442 10.825)\"/>\r\n<circle class=\"calender\" cx=\"0.609\" cy=\"0.609\" r=\"0.609\" transform=\"translate(4.045 7.415)\"/>\r\n<ellipse class=\"calender\" cx=\"0.609\" cy=\"0.913\" rx=\"0.609\" ry=\"0.913\" transform=\"translate(4.045 10.825)\"/>\r\n<ellipse class=\"calender\" cx=\"0.609\" cy=\"0.913\" rx=\"0.609\" ry=\"0.913\" transform=\"translate(4.045 14.208)\"/>\r\n<circle class=\"calender\" cx=\"0.913\" cy=\"0.913\" r=\"0.913\" transform=\"translate(7.442 14.208)\"/>\r\n<ellipse class=\"calender\" cx=\"0.913\" cy=\"0.609\" rx=\"0.913\" ry=\"0.609\" transform=\"translate(7.442 7.415)\"/></g></g></svg>\r\n`"
                },
                {
                    "name": "DESTINATION_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\r\n<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"26.76\" height=\"26.76\"\r\nviewBox=\"0 0 26.76 26.76\"><defs>\r\n<style>.destination{fill:\"none\";}</style>\r\n</defs>\r\n<g transform=\"translate(0 -2.388)\">\r\n<g transform=\"translate(0 2.388)\"><path\r\nd=\"M325.218,255.626v-1.493h.32a.32.32,0,0,0,.32-.32V252.32a.32.32,0,0,0-.32-.32H322.6a.32.32,0,0,0-.25.12l-.6.747a.32.32,0,0,0,0,.4l.6.747a.32.32,0,0,0,.25.12h1.339v1.493Z\" transform=\"translate(-304.835 -238.895)\"/><path class=\"destination\" d=\"M213.108,181.28h6.318a.64.64,0,0,0,0-1.28h-7.919A7.864,7.864,0,0,1,213.108,181.28Z\" transform=\"translate(-200.495 -170.711)\"/><path class=\"destination\" d=\"M199.491,332h-6.65a9.1,9.1,0,0,1-.4,1.28h7.052a3.419,3.419,0,1,1,.009,6.838l-10.885.042a.64.64,0,1,0,0,1.28h0l10.884-.042a4.7,4.7,0,0,0-.014-9.4Z\" transform=\"translate(-178.337 -314.68)\"/><path class=\"destination\" d=\"M281.154,109.68a1.454,1.454,0,0,0,1.454-1.454c0-.8-.789-2.226-1.454-2.226s-1.454,1.423-1.454,2.226A1.454,1.454,0,0,0,281.154,109.68Z\" transform=\"translate(-265.053 -100.641)\"/><path class=\"destination\" d=\"M223.235,109.68a1.454,1.454,0,0,0,1.454-1.454c0-.8-.789-2.226-1.454-2.226s-1.454,1.423-1.454,2.226A1.454,1.454,0,0,0,223.235,109.68Z\" transform=\"translate(-210.185 -100.641)\"/><path class=\"destination\" d=\"M328.219,388c0-1.082-1.064-3-1.959-3s-1.959,1.918-1.959,3a1.959,1.959,0,0,0,3.919,0Z\" transform=\"translate(-307.313 -364.854)\"/><path class=\"destination\" d=\"M248.178,389.96A1.959,1.959,0,0,0,250.137,388c0-1.082-1.064-3-1.959-3s-1.959,1.918-1.959,3A1.959,1.959,0,0,0,248.178,389.96Z\" transform=\"translate(-233.341 -364.854)\"/><path class=\"destination\" d=\"M8.749,170.984a7.177,7.177,0,0,0-7.168,7.168c0,4.488,6.462,10.44,6.737,10.691a.64.64,0,0,0,.863,0c.275-.251,6.737-6.2,6.737-10.691A7.177,7.177,0,0,0,8.749,170.984Zm0,11.861a4.693,4.693,0,1,1,4.693-4.693,4.693,4.693,0,0,1-4.693,4.693Z\" transform=\"translate(-1.581 -162.251)\"/><path class=\"destination\" d=\"M345.087,15.531a.64.64,0,0,0,.786,0,17.239,17.239,0,0,0,2-1.89,6.659,6.659,0,0,0,2.084-4.161,4.48,4.48,0,0,0-8.959,0,6.659,6.659,0,0,0,2.084,4.161A17.234,17.234,0,0,0,345.087,15.531Zm.393-8.185a2.133,2.133,0,1,1-2.133,2.133A2.133,2.133,0,0,1,345.48,7.346Z\"\r\ntransform=\"translate(-323.2 -5)\"/>\r\n</svg>`"
                },
                {
                    "name": "DINNER_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"53.276\" height=\"42.869\"\r\nviewBox=\"0 0 53.276 42.869\"><defs>\r\n<style>.dinner{fill:\"none\";}</style></defs><g transform=\"translate(0 -50.008)\">\r\n<g transform=\"translate(9.846 52.807)\">\r\n<path class=\"dinner\" d=\"M112.264,76.909a17.644,17.644,0,1,0,17.644,17.644A17.644,17.644,0,0,0,112.264,76.909Zm0,31.031a13.388,13.388,0,1,1,13.388-13.388A13.4,13.4,0,0,1,112.264,107.94Z\" transform=\"translate(-94.62 -76.909)\"/></g><g transform=\"translate(17.69 60.652)\">\r\n<path class=\"dinner\" d=\"M179.808,152.3a9.8,9.8,0,1,0,9.8,9.8A9.81,9.81,0,0,0,179.808,152.3Z\" transform=\"translate(-170.009 -152.299)\"/></g><g transform=\"translate(47.176 50.008)\">\r\n<path class=\"dinner\" d=\"M458.361,71.93V50.49a.482.482,0,0,0-.866-.291,20.292,20.292,0,0,0-4.123,12.261V70.3A1.629,1.629,0,0,0,455,71.932h.679c-.669,6.914-1.112,16.583-1.112,17.716,0,1.784,1.1,3.23,2.452,3.23s2.452-1.446,2.452-3.23C459.473,88.515,459.03,78.844,458.361,71.93Z\" transform=\"translate(-453.372 -50.008)\"/></g><g transform=\"translate(0 51.929)\">\r\n<path class=\"dinner\" d=\"M7.119,84.222a4.688,4.688,0,0,0,2.264-4.015l-.672-10.99a.794.794,0,0,0-1.586.088l.437,8.814a.9.9,0,1,1-1.794,0L5.55,69.308a.858.858,0,0,0-1.716,0l-.218,8.811a.9.9,0,1,1-1.794,0L2.258,69.3a.794.794,0,0,0-1.586-.088L0,80.207a4.688,4.688,0,0,0,2.264,4.015,2.653,2.653,0,0,1,1.262,2.562c-.766,6.9-1.286,18.178-1.286,19.406,0,1.784,1.1,3.23,2.452,3.23s2.452-1.446,2.452-3.23c0-1.228-.52-12.5-1.286-19.406A2.654,2.654,0,0,1,7.119,84.222Z\" transform=\"translate(0 -68.471)\"/></g></g></svg>`"
                },
                {
                    "name": "EDIT_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\"\r\n width=\"12.228\" height=\"12.228\"\r\n viewBox=\"0 0 12.228 12.228\"><defs><style>.edit{fill:\"none\";}</style></defs><path class=\"edit\"\r\n  d=\"M4.5,14.177v2.547H7.047L14.56,9.212,12.013,6.665ZM16.53,7.242a.676.676,0,0,0,0-.958L14.94,4.695a.676.676,0,0,0-.958,0L12.739,5.938l2.547,2.547L16.53,7.242Z\"\r\n   transform=\"translate(-4.5 -4.496)\"/></svg>`"
                },
                {
                    "name": "EVALUATION_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"50\" height=\"28.626\" viewBox=\"0 0 28.626 28.626\" style=\"transform: translateX(.24rem)\">\r\n<defs><style>.evaluation{fill:\"none\" } </style></defs><g >\r\n<g>\r\n<path class=\"evaluation\" d=\"M27.9,9.009a2.519,2.519,0,0,0-3.558,0l-2.523,2.525V4.888a2.5,2.5,0,0,0-.737-1.779L18.714.737A2.5,2.5,0,0,0,16.935,0H2.534A2.519,2.519,0,0,0,.018,2.516V26.11a2.519,2.519,0,0,0,2.516,2.516H19.307a2.519,2.519,0,0,0,2.516-2.516V18.653L27.9,12.567A2.514,2.514,0,0,0,27.9,9.009ZM16.791,1.677a.915.915,0,0,1,.737.246L19.9,4.295a.915.915,0,0,1,.246.737H16.791ZM20.146,26.11a.84.84,0,0,1-.839.839H2.534A.84.84,0,0,1,1.7,26.11V2.516a.84.84,0,0,1,.839-.839h12.58V5.871a.839.839,0,0,0,.839.839h4.193v6.5l-2.474,2.476-1.185,1.186a.839.839,0,0,0-.2.328L15.1,20.761a.839.839,0,0,0,1.061,1.061l3.558-1.186a.838.838,0,0,0,.328-.2l.1-.1V26.11Zm-1.881-8.642,1.186,1.186L19,19.107l-1.779.593.593-1.779Zm2.372,0-1.186-1.186,4.031-4.035,1.186,1.186Zm6.081-6.087-.865.865L24.667,11.06l.865-.866a.839.839,0,1,1,1.186,1.186Z\" transform=\"translate(-0.018 0)\"/></g><g transform=\"translate(3.373 8.386)\">\r\n<path class=\"evaluation\" d=\"M72.6,150H60.857a.839.839,0,1,0,0,1.677H72.6a.839.839,0,1,0,0-1.677Z\" transform=\"translate(-60.018 -150)\"/></g><g transform=\"translate(3.373 11.741)\">\r\n<path class=\"evaluation\" d=\"M69.243,210H60.857a.839.839,0,0,0,0,1.677h8.386a.839.839,0,1,0,0-1.677Z\" transform=\"translate(-60.018 -210)\"/></g><g transform=\"translate(3.373 15.096)\">\r\n<path class=\"evaluation\" d=\"M69.243,270H60.857a.839.839,0,1,0,0,1.677h8.386a.839.839,0,1,0,0-1.677Z\" transform=\"translate(-60.018 -270)\"/></g><g transform=\"translate(3.373 18.45)\">\r\n<path class=\"evaluation\" d=\"M69.243,330H60.857a.839.839,0,1,0,0,1.677h8.386a.839.839,0,1,0,0-1.677Z\" transform=\"translate(-60.018 -330)\"/></g><g transform=\"translate(10.082 23.594)\">\r\n<path class=\"evaluation\" d=\"M185.889,422h-5.032a.839.839,0,1,0,0,1.677h5.032a.839.839,0,1,0,0-1.677Z\" transform=\"translate(-180.018 -422)\"/></g></g>\r\n</svg>`"
                },
                {
                    "name": "FLAG_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\r\n<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"38.03\" height=\"34.092\" viewBox=\"0 0 38.03 34.092\"><defs>\r\n<style>.flag{fill:\"none\";}</style>\r\n</defs><g transform=\"translate(0 -26.508)\"><path class=\"flag\" d=\"M194.809,168.062c-.291,0-.579.011-.869.017l1.316,4.05c.514-.018,1.023-.029,1.528-.037,1.032-.016,2.05-.043,3.1-.149l-1.329-4.089A34.4,34.4,0,0,1,194.809,168.062Z\" transform=\"translate(-179.535 -130.847)\"/><path class=\"flag\" d=\"M167.565,80.907c-.557.009-1.036.07-1.554.106l1.357,4.177c.522-.018,1.039-.03,1.552-.038,1.024-.016,2.035-.043,3.074-.147l-1.4-4.307A27.432,27.432,0,0,1,167.565,80.907Z\" transform=\"translate(-153.68 -50.165)\"/><path class=\"flag\" d=\"M263.084,58.926l-1.363-4.2a16.944,16.944,0,0,1-4.188,1.532l1.409,4.337A16.786,16.786,0,0,0,263.084,58.926Z\" transform=\"translate(-238.404 -26.127)\"/><path class=\"flag\" d=\"M104.7,173.841l1.341,4.126a17.394,17.394,0,0,1,4.319-1.129l-1.33-4.092A15.394,15.394,0,0,0,104.7,173.841Z\" transform=\"translate(-96.927 -135.376)\"/><path class=\"flag\" d=\"M26.758,207.232a33.535,33.535,0,0,1,3.885-2.467l-1.332-4.1a43.371,43.371,0,0,0-3.862,2.536Z\" transform=\"translate(-23.559 -161.222)\"/><path class=\"flag\" d=\"M291.272,144.245l-1.332-4.1a18.792,18.792,0,0,1-4.151,1.648l1.342,4.129A16.8,16.8,0,0,0,291.272,144.245Z\" transform=\"translate(-264.562 -105.197)\"/><path class=\"flag\" d=\"M225.929,252.063a34.285,34.285,0,0,1-3.767.212c-.283,0-.563.011-.844.017l1.379,4.245c.273-.006.546-.013.821-.017a34.256,34.256,0,0,0,3.789-.219Z\" transform=\"translate(-204.878 -208.801)\"/><path class=\"flag\" d=\"M318.664,228.5l-1.382-4.252a18.825,18.825,0,0,1-4.149,1.651l1.372,4.224A15.651,15.651,0,0,0,318.664,228.5Z\" transform=\"translate(-289.874 -183.051)\"/><path class=\"flag\" d=\"M132.054,258.088l1.377,4.238a15.478,15.478,0,0,1,4.334-1.084L136.386,257A15.466,15.466,0,0,0,132.054,258.088Z\" transform=\"translate(-122.245 -213.37)\"/><path class=\"flag\" d=\"M52.764,287.331l.91,2.8a1.115,1.115,0,0,0,1.7.574A26.418,26.418,0,0,1,58,289.034L56.627,284.8A42.314,42.314,0,0,0,52.764,287.331Z\" transform=\"translate(-48.845 -239.106)\"/><path class=\"flag\" d=\"M77.053,89.109l1.364,4.2a17.406,17.406,0,0,1,4.317-1.136l-1.341-4.128A22.977,22.977,0,0,0,77.053,89.109Z\" transform=\"translate(-71.33 -56.964)\"/><path class=\"flag\" d=\"M1.171,121.138a34,34,0,0,1,3.884-2.469L3.67,114.409a28.24,28.24,0,0,0-3.193,2,1.114,1.114,0,0,0-.424,1.255Z\" transform=\"translate(0 -81.372)\"/><path class=\"flag\" d=\"M353.8,60.545a1.114,1.114,0,0,0,.715-1.4l-10.4-31.863a1.114,1.114,0,0,0-2.119.689l10.4,31.863a1.114,1.114,0,0,0,1.4.715Z\" transform=\"translate(-316.536)\"/></g>\r\n</svg>\r\n`"
                },
                {
                    "name": "GENDER_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\r\n  < svg xmlns = \"http://www.w3.org/2000/svg\" xmlns: xlink = \"http://www.w3.org/1999/xlink\"\r\nwidth = \"47\" height = \"47\" viewBox = \"0 0 47 47\" > <defs>\r\n  <style>\r\n .a - gender{ fill:#fff; opacity: 0.74; }\r\n .b - gender{ fill:#009eee; }\r\n .c - gender{ fill:#d220ba; }\r\n .d - gender{ filter: url(#a); }\r\n</style>\r\n  < filter id = \"a\" x = \"0\" y = \"0\" width = \"47\" height = \"47\" filterUnits = \"userSpaceOnUse\" > <feOffset dy=\"3\" input = \"SourceAlpha\" />\r\n    <feGaussianBlur stdDeviation=\"3\" result = \"b\" /> <feFlood flood - opacity=\"0.161\" /> <feComposite operator=\"in\" in2 = \"b\" /> <feComposite in=\"SourceGraphic\" />\r\n      </filter></defs > <g transform=\"translate(-19 -821.175)\" > <g class=\"d-gender\" transform = \"matrix(1, 0, 0, 1, 19, 821.18)\" >\r\n        <rect class=\"a-gender\" width = \"29\" height = \"29\" rx = \"5\" transform = \"translate(9 6)\" /> </g><g transform=\"translate(35.331 834.183)\">\r\n          < rect class=\"b-gender\" width = \"4\" height = \"4\" transform = \"translate(-0.331 0.993)\" /> <rect class=\"c\" width = \"4\" height = \"4\" transform = \"translate(4.669 0.993)\" />\r\n            <rect class=\"c-gender\" width = \"4\" height = \"4\" transform = \"translate(9.669 0.993)\" /> <rect class=\"b-gender\" width = \"4\" height = \"4\" transform = \"translate(-0.331 5.993)\" />\r\n              <rect class=\"c-gender\" width = \"4\" height = \"4\" transform = \"translate(4.669 5.993)\" /> <rect class=\"c-gender\" width = \"4\" height = \"4\" transform = \"translate(9.669 5.993)\" />\r\n                <rect class=\"b-gender\" width = \"4\" height = \"4\" transform = \"translate(-0.331 10.993)\" /> <rect class=\"b-gender\" width = \"4\" height = \"4\" transform = \"translate(4.669 10.993)\" />\r\n                  <rect class=\"c-gender\" width = \"4\" height = \"4\" transform = \"translate(9.669 10.993)\" /> </g></g >\r\n                    </svg>\r\n                      `"
                },
                {
                    "name": "GROUP_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\r\n                    < svg xmlns = \"http://www.w3.org/2000/svg\" width = \"40.377\" height = \"26.333\" viewBox = \"0 0 40.377 26.333\" >\r\n                      <g id=\"user\" transform = \"translate(0 -85.333)\" >\r\n                        <g id=\"Group_950\" data - name=\"Group 950\" transform = \"translate(14.044 85.333)\" >\r\n                          <g id=\"Group_949\" data - name=\"Group 949\" transform = \"translate(0 0)\" >\r\n                            <path id=\"Path_694\" data - name=\"Path 694\" d = \"M176.81,85.333a6.144,6.144,0,1,0,6.144,6.144A6.151,6.151,0,0,0,176.81,85.333Zm0,10.533a4.389,4.389,0,1,1,4.389-4.389A4.395,4.395,0,0,1,176.81,95.866Z\" transform = \"translate(-170.666 -85.333)\" fill = \"'none'\" />\r\n                              </g>\r\n                              < /g>\r\n                              < g id = \"Group_952\" data - name=\"Group 952\" transform = \"translate(28.088 92.355)\" >\r\n                                <g id=\"Group_951\" data - name=\"Group 951\" transform = \"translate(0 0)\" >\r\n                                  <path id=\"Path_695\" data - name=\"Path 695\" d = \"M345.723,170.667a4.389,4.389,0,1,0,4.389,4.389A4.395,4.395,0,0,0,345.723,170.667Zm0,7.022a2.633,2.633,0,1,1,2.633-2.633A2.636,2.636,0,0,1,345.723,177.689Z\" transform = \"translate(-341.334 -170.667)\" fill = \"'none'\" />\r\n                                    </g>\r\n                                    < /g>\r\n                                    < g id = \"Group_954\" data - name=\"Group 954\" transform = \"translate(3.636 92.355)\" >\r\n                                      <g id=\"Group_953\" data - name=\"Group 953\" transform = \"translate(0 0)\" >\r\n                                        <path id=\"Path_696\" data - name=\"Path 696\" d = \"M48.571,170.667a4.389,4.389,0,1,0,4.389,4.389A4.394,4.394,0,0,0,48.571,170.667Zm0,7.022a2.633,2.633,0,1,1,2.633-2.633A2.636,2.636,0,0,1,48.571,177.689Z\" transform = \"translate(-44.182 -170.667)\" fill = \"'none'\" />\r\n                                          </g>\r\n                                          < /g>\r\n                                          < g id = \"Group_956\" data - name=\"Group 956\" transform = \"translate(8.778 99.377)\" >\r\n                                            <g id=\"Group_955\" data - name=\"Group 955\" transform = \"translate(0 0)\" >\r\n                                              <path id=\"Path_697\" data - name=\"Path 697\" d = \"M118.077,256a11.424,11.424,0,0,0-11.411,11.411.878.878,0,1,0,1.756,0,9.655,9.655,0,0,1,19.311,0,.878.878,0,1,0,1.756,0A11.424,11.424,0,0,0,118.077,256Z\" transform = \"translate(-106.666 -256)\" fill = \"'none'\" />\r\n                                                </g>\r\n                                                < /g>\r\n                                                < g id = \"Group_958\" data - name=\"Group 958\" transform = \"translate(27.963 102.888)\" >\r\n                                                  <g id=\"Group_957\" data - name=\"Group 957\" >\r\n                                                    <path id=\"Path_698\" data - name=\"Path 698\" d = \"M344.327,298.667a7.9,7.9,0,0,0-4.092,1.141.878.878,0,1,0,.911,1.5,6.145,6.145,0,0,1,9.325,5.258.878.878,0,1,0,1.756,0A7.91,7.91,0,0,0,344.327,298.667Z\" transform = \"translate(-339.813 -298.667)\" fill = \"'none'\" />\r\n                                                      </g>\r\n                                                      < /g>\r\n                                                      < g id = \"Group_960\" data - name=\"Group 960\" transform = \"translate(0 102.888)\" >\r\n                                                        <g id=\"Group_959\" data - name=\"Group 959\" >\r\n                                                          <path id=\"Path_699\" data - name=\"Path 699\" d = \"M11.99,299.806A7.9,7.9,0,0,0,0,306.567a.878.878,0,1,0,1.756,0,6.146,6.146,0,0,1,9.324-5.26.878.878,0,1,0,.911-1.5Z\" transform = \"translate(0 -298.667)\" fill = \"'none'\" />\r\n                                                            </g>\r\n                                                            < /g>\r\n                                                            < /g>\r\n                                                            < /svg>\r\n                                                              `"
                },
                {
                    "name": "GUIDE_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"34.105\" height=\"48.367\" viewBox=\"0 0 34.105 48.367\"><defs>\r\n<style>.guide{fill:\"none\";}.b-guide{fill:none;stroke:#bababa;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:10;stroke-width:1.142px;}</style>\r\n</defs><ellipse class=\"guide\" cx=\"4.456\" cy=\"4.456\" rx=\"4.456\" ry=\"4.456\" transform=\"translate(10.162 0)\"/>\r\n<path class=\"guide\" d=\"M16.223,7.266c-.165-1.131-1.043-1.811-1.683-1.632l-4.649,1.3c-.639.182-.858,1.666-.678,2.311l3.83,15.727c.188.646.573.966,1.214.781l3.141-.68c2.53-2.083,2.515-3.9,2-6.4Z\" transform=\"translate(4.558 4.924)\"/>\r\n<path class=\"guide\" d=\"M10.428,16.109l.8,5.57s2.049,4.867,3.458,7.726c1.065,2.166,1.567,3.727.834,4.118-1.123.6-2.634-.742-4.215-3.209-2.652-4.137-4.018-6.2-4.529-7.21l-.8-2.626S9.91,17.873,10.428,16.109Z\" transform=\"translate(14.341 14.152)\"/>\r\n<path class=\"guide\" d=\"M10.729,20.474l6.2-6.162c.979-.986,2.44-.522,3.43.458s2.923,1.894,1.948,2.885L14.421,24.3l.874,8.513c.064,2.1-.06,3.317-1.394,3.456-1.245.13-1.794-2.461-1.924-3.116,0,0-1.595-8.155-1.788-9.3S9.878,21.343,10.729,20.474Z\" transform=\"translate(-0.038 12.092)\"/>\r\n<path class=\"guide\" d=\"M16.143,8.78l4.678,2.2,5.893-4.3a2.1,2.1,0,0,1,2.455,3.4l-6.355,4.6a2.4,2.4,0,0,1-2.188.364s-4.364-2.651-5.534-3.413c-1.227-.8-2.51-1.86-2.036-2.746C13.728,7.613,14.952,8.205,16.143,8.78Z\" transform=\"translate(-12.954 5.517)\"/><line class=\"b-guide\" y2=\"35.692\" transform=\"translate(3.347 11.972)\"/>\r\n<path class=\"guide\" d=\"M4.048,7.594s2.788,8.652,3.21,10.028,1.9,2.329,3.981,1.694,4.245-1.51,3.907-3.945c-.37-2.652-2.876-6.175-5.049-8.44S2.96,3.881,4.048,7.594Z\" transform=\"translate(18.923 4.411)\"/>\r\n</svg>`"
                },
                {
                    "name": "HOME_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30.237\" height=\"26.954\" viewBox=\"0 0 30.237 26.954\">\r\n  <g id=\"home\" transform=\"translate(0.001 -27.798)\">\r\n    <g id=\"Group_891\" data-name=\"Group 891\" transform=\"translate(-0.001 27.798)\">\r\n      <g id=\"Group_890\" data-name=\"Group 890\" transform=\"translate(0 0)\">\r\n        <path id=\"Path_639\" data-name=\"Path 639\" d=\"M29.915,38.443,15.582,27.949a.785.785,0,0,0-.928,0L.321,38.443a.786.786,0,1,0,.928,1.268L15.118,29.557,28.986,39.711a.786.786,0,0,0,.928-1.268Z\" transform=\"translate(0.001 -27.798)\"\r\n        fill=\"'none'\"/>\r\n      </g>\r\n    </g>\r\n    <g id=\"Group_893\" data-name=\"Group 893\" transform=\"translate(3.333 39.889)\">\r\n      <g id=\"Group_892\" data-name=\"Group 892\" transform=\"translate(0 0)\">\r\n        <path id=\"Path_640\" data-name=\"Path 640\" d=\"M79.235,232.543a.786.786,0,0,0-.786.786v12.505H72.165v-6.826a3.928,3.928,0,0,0-7.857,0v6.826H58.023V233.329a.786.786,0,0,0-1.571,0v13.291a.786.786,0,0,0,.786.786h7.856a.785.785,0,0,0,.783-.724.592.592,0,0,0,0-.061v-7.612a2.357,2.357,0,0,1,4.714,0v7.612a.578.578,0,0,0,0,.06.785.785,0,0,0,.783.725h7.856a.786.786,0,0,0,.786-.786V233.329A.786.786,0,0,0,79.235,232.543Z\" transform=\"translate(-56.452 -232.543)\"\r\n        fill=\"'none'\"/>\r\n      </g>\r\n    </g>\r\n  </g>\r\n</svg>\r\n`"
                },
                {
                    "name": "LIST_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"29.56\" height=\"32.535\" viewBox=\"0 0 29.56 32.535\"><defs>\r\n<style>.list{fill:\"\"none\";}</style></defs><g transform=\"translate(-22.3)\"><g transform=\"translate(22.3 0)\">\r\n<path class=\"list\" d=\"M26.163,4.183a.819.819,0,0,0-1.154-.007A.807.807,0,0,0,25,5.33L26.95,7.291a.817.817,0,0,0,.58.24h0a.814.814,0,0,0,.574-.24l5.931-5.9A.814.814,0,1,0,32.887.24L31.092,2.021A5.115,5.115,0,1,0,32.32,7.065a.819.819,0,0,0-1.568-.474,3.492,3.492,0,1,1-.821-3.409L27.537,5.564Z\" transform=\"translate(-22.3 0)\"/>\r\n<path class=\"list\" d=\"M27.417,170.6a5.117,5.117,0,1,0,5.117,5.117A5.122,5.122,0,0,0,27.417,170.6Zm0,8.6a3.482,3.482,0,1,1,3.482-3.482A3.485,3.485,0,0,1,27.417,179.2Z\" transform=\"translate(-22.3 -159.219)\"/>\r\n<path class=\"list\" d=\"M32.533,339.417a5.117,5.117,0,1,0-5.117,5.117A5.122,5.122,0,0,0,32.533,339.417Zm-5.117,3.489a3.482,3.482,0,1,1,3.482-3.482A3.485,3.485,0,0,1,27.417,342.906Z\" transform=\"translate(-22.3 -311.999)\"/>\r\n<path class=\"list\" d=\"M219.218,235h-15.9a.821.821,0,0,0,0,1.641h15.9a.821.821,0,1,0,0-1.641Z\" transform=\"translate(-190.479 -219.323)\"/>\r\n<path class=\"list\" d=\"M219.218,71.5h-15.9a.821.821,0,0,0,0,1.641h15.9a.821.821,0,1,0,0-1.641Z\" transform=\"translate(-190.479 -66.73)\"/>\r\n<path class=\"list\" d=\"M219.218,398.8h-15.9a.821.821,0,1,0,0,1.641h15.9a.821.821,0,1,0,0-1.641Z\" transform=\"translate(-190.479 -372.196)\"/></g></g>\r\n</svg>`"
                },
                {
                    "name": "LOCATION_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\r\n<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"18\" height=\"25.609\"\r\nviewBox=\"0 0 18 25.609\">\r\n<defs><style>.location{fill:\"none\";}</style></defs>\r\n<path class=\"location\" d=\"M170.592,99a4.5,4.5,0,1,0-4.5-4.5A4.505,4.505,0,0,0,170.592,99Zm0-7.5a3,3,0,1,1-3,3A3,3,0,0,1,170.592,91.5Z\" transform=\"translate(-161.592 -85.5)\"/>\r\n<path class=\"location\" d=\"M92.562,14.021a9,9,0,1,0-14.941,0l7.47,11.588ZM85.092,1.5a7.5,7.5,0,0,1,6.36,11.475l-6.36,9.866-6.36-9.866A7.5,7.5,0,0,1,85.092,1.5Z\" transform=\"translate(-76.092 0)\"/>\r\n</svg>\r\n`"
                },
                {
                    "name": "LOGO_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\r\n\r\n<svg id=\"a40f30f4-7b59-4cc2-b8ab-2f75bedc37aa\" data-name=\"svg2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 285.66 372.46\">\r\n  <defs>\r\n    <style>\r\n      .b2a1ef2a-6793-434d-a7e0-20c88af27ed9 {\r\n        fill: #221f20;\r\n      }\r\n\r\n      .f046d93e-32f3-4ce4-9af7-9ca16d569ad3 {\r\n        fill: #fff;\r\n      }\r\n\r\n      .ee0ddef0-4399-47a0-9b46-7f47d1f34c28 {\r\n        fill: #51b848;\r\n      }\r\n\r\n      .be161e8d-927e-4327-82ae-5dfb3ea4f0d6 {\r\n        fill: #926427;\r\n      }\r\n\r\n      .e0610833-ce90-473b-b097-3aa4f8c2dfec {\r\n        fill: #0572ba;\r\n      }\r\n    </style>\r\n  </defs>\r\n  <g id=\"b5d28e50-a32d-405e-a2b4-83744c5d9f68\" data-name=\"g12\">\r\n    <g id=\"a143c8ea-b8d3-4ff5-9188-125edf6a6c82\" data-name=\"g3312\">\r\n      <path id=\"b29c9843-4db3-4d85-bd5c-514ef3ee3669\" data-name=\"path224\" class=\"b2a1ef2a-6793-434d-a7e0-20c88af27ed9\" d=\"M266.84,305.57h16l-8,18.23h2.92l7.8-18.23v-2.18H266.84ZM270,330.86v-20.5l-2.73,1.6v18.9Zm-17.2-27.47h-6.94v2.17h6.78c3.51,0,5.3,2.5,5.3,6.12V323.8h2.73V312.08c0-6.9-4.06-8.69-7.87-8.69m-12.57,0h-2.72v27.47h2.72Zm-43,2.18h16l-8,18.23h2.92l7.79-18.23v-2.18H197.26Zm3.16,25.29v-20.5L197.7,312v18.9Zm-9.24-16.37v-11.1h-2.72V316l2.72-1.48Zm-28.86-11.1c1.37,3.15,2.73,7.79,2.5,9.7-.08.66-.28,1.4-.35,1.91,0,0-1.52,7.52-1.68,8.8h2.73l1.52-7.6c1.09-5.41,3.27-11.1,7.4-11.1,3.19,0,5.11,4.79,5.11,8.8,0,4.52-1.72,8.23-5.5,8.23a6.42,6.42,0,0,1-3.58-.9v2.34a10.55,10.55,0,0,0,3.7.82c3.31,0,8.18-2.26,8.18-10.56,0-5.42-2.26-10.92-7.67-10.92-4.37,0-6.12,3.31-7.6,6.2a47.66,47.66,0,0,0-1.84-5.72Zm-20.21,16.28v-14.1h6c3.74,0,5,2.76,5,5.88V323.8h2.73V310.6c0-4.1-3-7.21-7.52-7.21H135.48v2.18h3.9V319.2c0,3.75-3.47,2.5-4.33,2.11v2.1c1.37.82,7.06,1.64,7.06-3.74m-29.72-14.1-7.56,18.23h3l7.56-17.88v-2.53H103.24v-6.94H100.5v9.12ZM95,314.49v-11.1H92.28V316L95,314.49Zm-12.55-11.1v9.89c0,6.78-3.74,8.81-8.81,8.81s-6.9-3.43-7.09-5.22a15.29,15.29,0,0,0,6.66-1.8c1-.62,2.53-1.9,2.53-5.21v-6.47H73v6.66c0,2.72-.7,3.12-2,3.9A11.59,11.59,0,0,1,66.32,315V303.39H63.6V315c0,5.46,3.78,9.19,10.13,9.19,7.21,0,11.46-3.08,11.46-11.1v-9.74Zm-33.73,0H41.8v2.17h6.78c3.5,0,5.29,2.5,5.29,6.13V323.8h2.74V312.08c0-6.9-4.06-8.69-7.88-8.69M32.21,315c3.79-2.68,4-5.95,4-9.19v-2.41h-2.8v2.8c0,2.11,0,5.53-2.49,7.13-.59-.59-3.71-4.72-8.34-9.93H19c3.08,3.31,5.65,6.5,5.65,6.5A12.74,12.74,0,0,0,21,314.61c-1.28,3-1,5.65-1.05,9.19h2.77s-.16-6.12.93-8.81a9.23,9.23,0,0,1,2.34-3.5,71.56,71.56,0,0,1,8.65,12.31h3.08A76,76,0,0,0,32.21,315m-20.07-9.42L4.58,323.8h3l7.56-17.88v-2.53H3v-6.94H.26v9.12Z\" transform=\"translate(0 0)\"/>\r\n      <path id=\"edc77653-564b-4e52-b936-af1f34f3da02\" data-name=\"path226\" class=\"f046d93e-32f3-4ce4-9af7-9ca16d569ad3\" d=\"M.27,0H285.66V285.39H.27Z\" transform=\"translate(0 0)\"/>\r\n      <path id=\"a3a1c636-2859-45bb-b8a9-237b3d094d91\" data-name=\"path234\" class=\"ee0ddef0-4399-47a0-9b46-7f47d1f34c28\" d=\"M97.89,171.45,197.41,0h88.25L186.14,171.45ZM31.74,285.39,92.41,180.9v11.57h61.15l-39.23,69V205.77H92.41v79.62Z\" transform=\"translate(0 0)\"/>\r\n      <path id=\"ffc24ad4-3130-4414-807b-83899d7ff7a4\" data-name=\"path238\" class=\"ee0ddef0-4399-47a0-9b46-7f47d1f34c28\" d=\"M114.33,285.39V262.48h19L120,285.39Z\" transform=\"translate(0 0)\"/>\r\n      <path id=\"a1603cb4-0041-4e52-a8e5-cad044e2ebc0\" data-name=\"path250\" class=\"be161e8d-927e-4327-82ae-5dfb3ea4f0d6\" d=\"M211.29,285.39V262.48h22.44l51.93-89.88V285.39Zm74.37-113.94H193.1L285.66,12ZM127,285.39l62.4-107.51v14.59h61.16l-39.23,69V205.77H189.36v79.62Z\" transform=\"translate(0 0)\"/>\r\n      <path id=\"facfbe89-2f5b-4ac9-92b9-4862caab4c9e\" data-name=\"path258\" class=\"e0610833-ce90-473b-b097-3aa4f8c2dfec\" d=\"M.27,0H190.65L91.11,171.45h-72v-23H.27Zm38,262.48L25,285.39H.27V192.47h58l-39.82,70Z\" transform=\"translate(0 0)\"/>\r\n      <path id=\"fad46169-dc8d-4b7f-af28-a69e6185b0c8\" data-name=\"path270\" class=\"f046d93e-32f3-4ce4-9af7-9ca16d569ad3\" d=\"M68.84,161.59h6.38V124.24l12.44-12.45h13l4.34-4.34H90.85l10.72-10.71h20.84l5.22-5.22H106.78l7.82-7.82h11.87V79.07h-7.24l9.26-9.26V63.15L118.07,73.57V61.12L113.15,66V77.63l-7.53,7.52V74.44l-5.21,5.21V91L89.69,101.66V90.36l-5.21,5.22v11.58L74.63,117c.29-.29,0-22.88,0-22.88L85.06,83.7H95.48V79.36H88.25l21.43-21.42h15.63V53.59H113.44l7-7-1.74-3.77-3.19,3.19v-9l-4.92-4.92V51L86.8,74.73V62.86L82.45,67.2V79.36l-8.1,8.11V65.17l6.37-6.37H96.06l4.64-4.63H83.9l8.4-8.4H105V41.14h-8.4l11.88-11.88-4-3.76-8.12,8.11v-11l-4-4.05V39.69l-7.53,7.53V32.74l-4.92,4.92v13.9l-5.22,5.21V33.9L89.4,19.13H83.32l-8.69,8.69v-11H69.42v11l-8.68-8.69H54.65L69.42,33.9V56.77l-5.21-5.21V37.66l-4.92-4.92V47.22l-7.53-7.53V18.55L47.7,22.6v11L39.6,25.5l-4.06,3.76L47.41,41.14H39v4.63H51.76l8.39,8.4H43.36L48,58.8H63.34l6.37,6.37v22.3L61.6,79.36V67.2l-4.34-4.34V74.73L33.52,51V32.16l-4.93,4.92v9l-3.18-3.19-1.74,3.77,7,7H18.75v4.35H34.38L55.81,79.36H48.57V83.7H59L69.42,94.13s-.29,22.59,0,22.88l-9.84-9.85V95.58l-5.21-5.22v11.3L43.65,91V79.65l-5.21-5.21V85.16l-7.53-7.53V66L26,61.12V73.57L15.56,63.15v6.66l9.27,9.26H17.59V83.7H29.46l7.82,7.82H16.43l5.21,5.22H42.49l10.72,10.71H39l4.34,4.34h13l12.45,12.45v37.35Z\" transform=\"translate(0 0)\"/>\r\n      <path id=\"e031cbcf-7fbd-41f6-a7b7-c8e4b48cfbbe\" data-name=\"path278\" d=\"M0,371.83H3.11v-8.2L6.94,360l8.43,11.82h4.17l-10.26-14,10-9.49H14.88L3.11,359.82V348.31H0v23.52Zm47.83,0h3.1v-8.2L54.77,360l8.43,11.82h4.17l-10.26-14,10-9.49H62.7L50.93,359.82V348.31h-3.1v23.52Zm47.82,0h15V369H98.84V348.31H95.65v23.52Zm43.06-7.65h8v-3h-8Zm49.57-15.87h-3.16V364a11.46,11.46,0,0,1-.47,4.05c-.53,1.16-1.64,1.74-3.34,1.74a3.4,3.4,0,0,1-2.67-1,4.23,4.23,0,0,1-.86-2.89v-1.69h-3v1.69c0,2.44.62,4.14,1.88,5.1a7.26,7.26,0,0,0,4.52,1.43c3,0,5.13-1,6.22-3a9.92,9.92,0,0,0,.88-4.63V348.31Zm30.79,23.52h3v-19l11.91,19h3.58V348.31h-3v19l-11.73-19h-3.75v23.52Zm49.94,0h3.19v-10.7h11.54v-2.8H272.2v-7.14h13.13v-2.88H269v23.52Zm-269,0H3.11v-8.2L6.94,360l8.43,11.82h4.17l-10.26-14,10-9.49H14.88L3.11,359.82V348.31H0v23.52Zm47.83,0h3.1v-8.2L54.77,360l8.43,11.82h4.17l-10.26-14,10-9.49H62.7L50.93,359.82V348.31h-3.1v23.52Zm47.82,0h15V369H98.84V348.31H95.65v23.52Zm43.06-7.65h8v-3h-8Zm49.57-15.87h-3.16V364a11.46,11.46,0,0,1-.47,4.05c-.53,1.16-1.64,1.74-3.34,1.74a3.4,3.4,0,0,1-2.67-1,4.21,4.21,0,0,1-.86-2.89v-1.69h-3v1.69c0,2.44.62,4.14,1.88,5.1a7.26,7.26,0,0,0,4.52,1.43c3,0,5.13-1,6.22-3a9.92,9.92,0,0,0,.88-4.63V348.31Zm30.79,23.52h3v-19l11.91,19h3.58V348.31h-3v19l-11.73-19h-3.75v23.52Zm49.94,0h3.19V361.14h11.54v-2.81H272.2v-7.14h13.13v-2.88H269v23.52Z\" transform=\"translate(0 0)\"/>\r\n    </g>\r\n  </g>\r\n</svg>\r\n`"
                },
                {
                    "name": "LOYER_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"63.498\" height=\"61.46\"\r\nviewBox=\"0 0 63.498 61.46\">\r\n<defs><style>.a-loyer{fill:\"none\";}</style></defs>\r\n<g transform=\"translate(0 -8.081)\"><g transform=\"translate(0 8.081)\">\r\n<path class=\"a-loyer\" d=\"M137.058,31.6,138,32.853c.314.314.627.627.941.627h0a1.152,1.152,0,0,0,.941-.314l6.9-6.271a1.515,1.515,0,0,0,0-2.2L132.041,8.708c-.314-.314-.627-.627-.941-.627a1.885,1.885,0,0,0-1.254.314l-6.9,6.271a1.516,1.516,0,0,0,0,2.2l.941,1.254L112.6,28.463l-.941-1.254a1.516,1.516,0,0,0-2.2,0l-6.9,6.271c-.314.314-.627.627-.627.941a1.885,1.885,0,0,0,.314,1.254l14.738,16.306c.314.314.627.627.941.627h0a1.152,1.152,0,0,0,.941-.314l6.9-6.271c.314-.314.627-.627.627-.941a1.885,1.885,0,0,0-.314-1.254l-.941-1.254,2.2-2.195,18.187,19.755c.314.314.627.627.941.627h0a1.152,1.152,0,0,0,.941-.314l4.7-4.39a1.516,1.516,0,0,0,0-2.2L133.922,34.107ZM131.1,11.53l12.857,13.8-4.7,4.076-.941-1.254h0l-10.662-11.6h0l-.941-1.254Zm-12.543,37L105.7,34.735l4.7-4.39,2.195,2.509L122.007,43.2h0l.941,1.254Zm-3.763-17.874L126.4,20l8.467,9.094-3.449,3.136h0l-4.7,4.7h0l-3.449,3.136ZM149.287,54.49l-2.2,2.2-16.933-18.5,2.2-2.195Z\" transform=\"translate(-89.082 -8.081)\"/>\r\n<path class=\"a-loyer\" d=\"M43.9,385.189v-6.271a1.481,1.481,0,0,0-1.568-1.568h-4.7v-4.7a1.481,1.481,0,0,0-1.568-1.568H7.839a1.481,1.481,0,0,0-1.568,1.568v4.7h-4.7A1.481,1.481,0,0,0,0,378.917v6.271a1.481,1.481,0,0,0,1.568,1.568H42.332A1.481,1.481,0,0,0,43.9,385.189ZM9.407,374.214H34.493v3.136H9.407Zm31.357,9.407H3.136v-3.136H40.764v3.136Z\" transform=\"translate(0 -325.296)\"/></g></g>\r\n</svg>`"
                },
                {
                    "name": "MAIL_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"60.081\" height=\"60.317\" viewBox=\"0 0 60.081 60.317\"><defs>\r\n<style>.a-mail{fill:\"none\";}</style>\r\n</defs><g transform=\"translate(-1 0)\">\r\n<path class=\"a-mail\" d=\"M60.446,24.206l-8.789-7.324V7.893A1.767,1.767,0,0,0,49.89,6.126H38.768L32.2.432a1.767,1.767,0,0,0-2.315,0l-6.57,5.694H12.192a1.767,1.767,0,0,0-1.767,1.767v8.989L1.636,24.206A1.767,1.767,0,0,0,1,25.564V58.55a1.767,1.767,0,0,0,1.767,1.767H59.314a1.767,1.767,0,0,0,1.767-1.767V25.564a1.767,1.767,0,0,0-.636-1.357ZM21.094,42.057,4.534,54.937V29.177Zm3.485,1.767H37.5L54.164,56.783H7.917Zm16.409-1.767,16.56-12.88v25.76ZM56.5,25.516l-4.84,3.765v-7.8ZM31.041,4.105l2.331,2.02H28.709ZM48.123,9.66V32.03L37.5,40.29H24.579l-10.62-8.26V9.66Zm-37.7,19.621-4.84-3.765,4.84-4.033Z\" transform=\"translate(0 0)\"/>\r\n<path class=\"a-mail\" d=\"M151.645,125.149a13.063,13.063,0,0,0,7.612,2.739h.05a1.767,1.767,0,0,0,.048-3.533,9.426,9.426,0,0,1-2.6-18.4,9.424,9.424,0,0,1,11.875,6.228,8.227,8.227,0,0,1-.522,5.457,2.48,2.48,0,0,1-2.256,1.7.57.57,0,0,1-.368-.188,1.151,1.151,0,0,1-.319-.8l.049-9.817a1.767,1.767,0,0,0-1.758-1.776h-.009a1.767,1.767,0,0,0-1.735,1.438,5.59,5.59,0,0,0-2.618-.642,6.194,6.194,0,0,0-4.561,2.093,7.659,7.659,0,0,0-1.889,5.167,8.217,8.217,0,0,0,1.775,5.223,5.947,5.947,0,0,0,4.556,2.275,5.5,5.5,0,0,0,3.5-1.272,4.53,4.53,0,0,0,.505.608,4.045,4.045,0,0,0,2.873,1.229,5.976,5.976,0,0,0,5.541-3.929,11.633,11.633,0,0,0,.645-7.7c0-.018-.01-.037-.016-.055a12.958,12.958,0,1,0-20.377,13.961Zm7.33-6.374c-1.351,0-2.8-1.593-2.8-3.964,0-2.332,1.483-3.726,2.916-3.726,1.459,0,2.492,1.424,2.556,3.488l0,.444C161.564,117.11,160.4,118.775,158.975,118.775Z\" transform=\"translate(-128.498 -89.955)\"/></g>\r\n</svg>\r\n`"
                },
                {
                    "name": "MEASUREMENTS_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"25.264\" height=\"25.264\"\r\nviewBox=\"0 0 25.264 25.264\">\r\n<defs><style>.measurements{fill:\"none\";}</style></defs>\r\n<path class=\"measurements\" d=\"M25.264,4.458V0H20.806V1.486H4.458V0H0V4.458H1.486V20.806H0v4.458H4.458V23.778H20.806v1.486h4.458V20.806H23.778V4.458ZM22.292,20.806H20.806v1.486H4.458V20.806H2.972V4.458H4.458V2.972H20.806V4.458h1.486Z\"/>\r\n<path class=\"measurements\" d=\"M0,0H6.717V1.343H0Z\" transform=\"translate(6.528 11.278) rotate(-45)\"/>\r\n<path class=\"measurements\" d=\"M0,0H6.717V1.343H0Z\" transform=\"translate(13.033 17.785) rotate(-45)\"/>\r\n<path class=\"measurements\" d=\"M0,0H10.746V1.343H0Z\" transform=\"translate(8.355 15.956) rotate(-45)\"/>\r\n</svg>`"
                },
                {
                    "name": "MUSIC_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"46.508\" height=\"46.507\" viewBox=\"0 0 46.508 46.507\"><defs>\r\n<style>.music{fill:\"none\";}</style></defs>\r\n<g transform=\"translate(0 -0.003)\">\r\n<g transform=\"translate(0 0.003)\">\r\n<path class=\"music\" d=\"M19.012,9.674a27.765,27.765,0,0,1-6.77-6.71L10.671.609a1.362,1.362,0,0,0-2.5.756V22.742a5.388,5.388,0,0,0-2.725-.758,5.45,5.45,0,1,0,5.45,5.45V5.838a33.585,33.585,0,0,0,6.5,6.033,4.088,4.088,0,0,1-2.412,7.387,1.363,1.363,0,0,0,0,2.725A6.813,6.813,0,0,0,19.012,9.674Z\" transform=\"translate(0 -0.003)\"/></g><g transform=\"translate(16.35 11.084)\">\r\n<path class=\"music\" d=\"M208.421,122.044l-19.257,5.45a1.364,1.364,0,0,0-.989,1.311v18.471a5.388,5.388,0,0,0-2.725-.758,5.45,5.45,0,1,0,5.45,5.45V135.283l16.532-4.672v11.214a5.388,5.388,0,0,0-2.725-.758,5.45,5.45,0,1,0,5.45,5.45V123.355A1.364,1.364,0,0,0,208.421,122.044Z\" transform=\"translate(-180 -121.991)\"/></g></g>\r\n</svg>`"
                },
                {
                    "name": "OPEN_PLUS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"8.667\" height=\"8.667\" viewBox=\"0 0 8.667 8.667\">\r\n<path id=\"Icon_open-plus\" data-name=\"Icon open-plus\" d=\"M3.25,0V3.25H0V5.417H3.25v3.25H5.417V5.417h3.25V3.25H5.417V0Z\"/>\r\n</svg>\r\n`"
                },
                {
                    "name": "PLANING_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"31\" height=\"31\" viewBox=\"0 0 31 31\">\r\n<g id=\"planning\">\r\n  <path id=\"Path_647\" data-name=\"Path 647\" d=\"M28.442,0H2.559A2.561,2.561,0,0,0,0,2.559v.007A2.562,2.562,0,0,0,1.656,4.959v18a2.457,2.457,0,0,0,2.455,2.453h9.716L11.106,29.6a.908.908,0,1,0,1.523.99l1.963-3.02v2.5a.908.908,0,1,0,1.816,0v-2.5l1.963,3.02a.908.908,0,1,0,1.523-.99l-2.721-4.185H26.89a2.457,2.457,0,0,0,2.455-2.453v-18A2.562,2.562,0,0,0,31,2.565V2.559A2.561,2.561,0,0,0,28.442,0ZM1.817,2.559a.743.743,0,0,1,.742-.742H28.442a.743.743,0,0,1,.742.742v.007a.743.743,0,0,1-.742.742H2.559a.743.743,0,0,1-.742-.742Zm25.712,20.4a.638.638,0,0,1-.638.636H4.11a.638.638,0,0,1-.638-.636V5.124H27.528Zm0,0\" transform=\"translate(0)\" fill=\"'none'\"/>\r\n  <path id=\"Path_648\" data-name=\"Path 648\" d=\"M91.317,121.514a2.89,2.89,0,1,0-2.891-2.89A2.894,2.894,0,0,0,91.317,121.514Zm0-3.964a1.074,1.074,0,1,1-1.074,1.074A1.075,1.075,0,0,1,91.317,117.551Zm0,0\" transform=\"translate(-83.072 -108.727)\" fill=\"'none'\"/>\r\n  <path id=\"Path_649\" data-name=\"Path 649\" d=\"M356.761,276.781a.908.908,0,0,0-1.284,1.285l.809.809-.809.809a.908.908,0,0,0,1.284,1.284l.809-.809.81.809a.908.908,0,1,0,1.284-1.284l-.809-.809.809-.809a.908.908,0,1,0-1.284-1.285l-.81.809Zm0,0\" transform=\"translate(-333.704 -259.773)\" fill=\"'none'\"/>\r\n  <path id=\"Path_650\" data-name=\"Path 650\" d=\"M105.46,159.361a.909.909,0,0,0,1.284.032l5.64-5.368,3.13,3.265a1.414,1.414,0,0,0,2.143-.119l4.077-5.026a.909.909,0,0,0,.826.531h.052a.908.908,0,0,0,.856-.958l-.1-1.7a1.127,1.127,0,0,0-1.223-1.059l-1.847.16a.908.908,0,0,0,.08,1.813l-3.872,4.773-3.092-3.225a1.417,1.417,0,0,0-1.928-.106l-.022.018-5.975,5.687a.908.908,0,0,0-.032,1.284Zm0,0\" transform=\"translate(-98.839 -139.933)\" fill=\"'none'\"/>\r\n</g>\r\n</svg>\r\n`"
                },
                {
                    "name": "PLAYGROUND_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\r\n<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"39.607\" height=\"20.445\"\r\nviewBox=\"0 0 39.607 20.445\"><defs>\r\n<style>.playground{fill:\"none\";}</style></defs>\r\n<path class=\"playground\" d=\"M33.807,117.8A19.8,19.8,0,0,0,0,131.8a.642.642,0,1,0,1.283,0,18.839,18.839,0,0,1,.118-2.1H7.633a2.019,2.019,0,0,0,1.273,1.267c-.006.276-.01.553-.01.829a.642.642,0,1,0,1.283,0c0-.278,0-.558.011-.836a2.019,2.019,0,0,0,1.252-1.259H17.9a2.019,2.019,0,0,0,1.263,1.263v.833a.642.642,0,1,0,1.283,0v-.833a2.019,2.019,0,0,0,1.263-1.263h6.456a2.019,2.019,0,0,0,1.252,1.259c.007.279.011.558.011.836a.642.642,0,1,0,1.283,0c0-.276,0-.553-.01-.829a2.019,2.019,0,0,0,1.273-1.267h6.232a18.838,18.838,0,0,1,.118,2.1.642.642,0,1,0,1.283,0,19.673,19.673,0,0,0-5.8-14Zm2.272,5.149H31a2.013,2.013,0,0,0-1.84-1.367c-.232-.7-.489-1.386-.767-2.032a2.013,2.013,0,0,0,.5-.792h3.912a.646.646,0,0,0,.13-.013A18.588,18.588,0,0,1,36.079,122.95Zm-15.634,4.212V125.5a2.019,2.019,0,0,0,1.263-1.263h5.486a2.015,2.015,0,0,0,1.668,1.354c.1.558.2,1.126.271,1.7a2.02,2.02,0,0,0-.969,1.137H21.708A2.019,2.019,0,0,0,20.445,127.161ZM17.9,128.425H11.443a2.02,2.02,0,0,0-.969-1.137c.076-.574.166-1.142.271-1.7a2.015,2.015,0,0,0,1.668-1.354H17.9a2.019,2.019,0,0,0,1.263,1.263v1.665A2.019,2.019,0,0,0,17.9,128.425Zm11.2-4.106a.727.727,0,1,1,.727-.727A.728.728,0,0,1,29.1,124.318Zm-1.9-1.369H21.708a2.019,2.019,0,0,0-1.263-1.263v-1.665a2.019,2.019,0,0,0,1.263-1.263h3.376a2,2,0,0,0,2.156,1.352c.251.587.483,1.2.695,1.843a2.02,2.02,0,0,0-.741,1ZM19.8,124.318a.727.727,0,1,1,.727-.727A.728.728,0,0,1,19.8,124.318Zm0-6.929a.727.727,0,1,1-.727.727A.728.728,0,0,1,19.8,117.389Zm7.186,1.454a.727.727,0,1,1,.727-.727A.728.728,0,0,1,26.989,118.844Zm-1.9-1.369H21.708a2.019,2.019,0,0,0-1.263-1.263v-2.886c1.381.18,3.2,1,4.992,3.515A2.014,2.014,0,0,0,25.085,117.475Zm-5.923-4.149v2.886a2.019,2.019,0,0,0-1.263,1.263H14.522a2.009,2.009,0,0,0-.352-.634c1.795-2.519,3.611-3.335,4.992-3.515Zm-5.817,4.791a.727.727,0,1,1-.727-.727A.728.728,0,0,1,13.345,118.116Zm-.727,2.01a2.013,2.013,0,0,0,1.9-1.369H17.9a2.019,2.019,0,0,0,1.263,1.263v1.665A2.019,2.019,0,0,0,17.9,122.95H12.412a2.019,2.019,0,0,0-.741-1c.211-.639.444-1.256.695-1.843a2.025,2.025,0,0,0,.251.016Zm-2.11,2.737a.727.727,0,1,1-.727.727A.728.728,0,0,1,10.508,122.864Zm21.033-5.389H28.894a2.008,2.008,0,0,0-2.367-1.315,12.4,12.4,0,0,0-2.036-2.281A18.34,18.34,0,0,1,31.541,117.475ZM13.08,116.16a2.008,2.008,0,0,0-2.367,1.315H8.066a18.34,18.34,0,0,1,7.049-3.6,12.4,12.4,0,0,0-2.036,2.281Zm-6.408,2.585a.646.646,0,0,0,.13.013h3.912a2.015,2.015,0,0,0,.5.792c-.279.647-.535,1.328-.768,2.032A2.014,2.014,0,0,0,8.6,122.95H3.528A18.588,18.588,0,0,1,6.671,118.745Zm-3.78,5.488H8.6a2.02,2.02,0,0,0,.886,1.09c-.109.578-.2,1.166-.283,1.761a2.016,2.016,0,0,0-1.573,1.341H1.59a18.322,18.322,0,0,1,1.3-4.192Zm6.647,5.56a.727.727,0,1,1,.727-.727A.728.728,0,0,1,9.538,129.793Zm10.265,0a.727.727,0,1,1,.727-.727A.728.728,0,0,1,19.8,129.793Zm10.265,0a.727.727,0,1,1,.727-.727A.728.728,0,0,1,30.069,129.793Zm1.9-1.369a2.016,2.016,0,0,0-1.572-1.341c-.079-.594-.174-1.183-.283-1.761a2.02,2.02,0,0,0,.886-1.09h5.712a18.322,18.322,0,0,1,1.3,4.192H31.974Z\" transform=\"translate(0 -112)\"/>\r\n</svg>`"
                },
                {
                    "name": "PRINT_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"24.007\" height=\"24.007\"\r\n viewBox=\"0 0 24.007 24.007\">\r\n <defs><style>.print{fill:\"none\";}</style></defs>\r\n<path class=\"print\" d=\"M21.194,7.455H18.8V0H5.2V7.455H2.813A2.816,2.816,0,0,0,0,10.269v7.6a2.816,2.816,0,0,0,2.813,2.813H5.2v3.329H18.8V20.678h2.391a2.816,2.816,0,0,0,2.813-2.813v-7.6A2.816,2.816,0,0,0,21.194,7.455ZM7.08,1.876h9.847v5.58H7.08Zm0,20.256V15.9h9.847v6.236Zm15.051-4.267a.939.939,0,0,1-.938.938H18.8V15.9h1.454V14.02H3.751V15.9H5.2V18.8H2.813a.939.939,0,0,1-.938-.938v-7.6a.939.939,0,0,1,.938-.938h18.38a.939.939,0,0,1,.938.938ZM15.051,3.751V5.627h-6.1V3.751Z\"/>\r\n</svg>`"
                },
                {
                    "name": "RELOAD_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\r\n<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"39.336\" height=\"33.092\" viewBox=\"0 0 39.336 33.092\"><defs>\r\n<style>.reload{fill:\"none\";}</style></defs>\r\n<g transform=\"translate(-3 -5.063)\">\r\n<path class=\"reload\"\r\nd=\"M4.511,21.143a1.507,1.507,0,0,0,1.2-.59l.658-.855A16.542,16.542,0,0,0,36.454,26.09a1.513,1.513,0,0,0-2.523-1.672,13.509,13.509,0,0,1-24.612-5.5l1.3,1a1.513,1.513,0,0,0,1.846-2.4L8.873,14.757c-.752-.579-1.822-.9-2.5-.017L3.315,18.708a1.511,1.511,0,0,0,1.2,2.434Z\" transform=\"translate(0 4.681)\"/><path class=\"reload\" d=\"M7.4,14.545a1.516,1.516,0,0,0,2.1-.425,13.509,13.509,0,0,1,24.612,5.5l-1.3-1a1.513,1.513,0,0,0-1.846,2.4l3.587,2.761c.766.589,1.811.918,2.5.017l3.056-3.968a1.512,1.512,0,1,0-2.4-1.844l-.658.855A16.545,16.545,0,0,0,6.973,12.447a1.515,1.515,0,0,0,.425,2.1Z\" transform=\"translate(1.909)\"/>\r\n</g>\r\n</svg>\r\n`"
                },
                {
                    "name": "REPORTS_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\r\n<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"26.76\" height=\"34.613\"\r\nviewBox=\"0 0 26.76 34.613\">\r\n<defs>\r\n<style>.report{fill:\"none\";}</style></defs>\r\n<g transform=\"translate(0)\"><g transform=\"translate(4.11 28.55)\"><path class=\"report\" d=\"M180.508,422.307h7.1v2.028h-7.1Z\" transform=\"translate(-176.452 -422.307)\"/><path class=\"report\" d=\"M120.508,422.307h2.028v2.028h-2.028Z\" transform=\"translate(-120.508 -422.307)\"/></g><path class=\"report\" d=\"M88.268,0H61.508V34.613H80.475l7.792-8.461V0m-2.06,2.044v22.7H78.982v7.859l-15.41,0V2.044ZM84.914,26.775l-3.869,4.209V26.775Z\" transform=\"translate(-61.508)\"/></g><g transform=\"translate(4.2 5.733)\"><path class=\"reporteport\" d=\"M277.932,91.218a6.418,6.418,0,0,0-6.411-6.411h-1.014v7.609h7.387S277.932,91.281,277.932,91.218Zm-5.4-.83V86.953a4.4,4.4,0,0,1,3.29,3.434Z\" transform=\"translate(-260.366 -84.807)\"/><path class=\"report\" d=\"M132.626,149.425a7.05,7.05,0,0,0,2.079-5.02v-1.014h-6.084v-6.084h-1.014a7.1,7.1,0,1,0,5.019,12.118Zm-10.089-5.02a5.074,5.074,0,0,1,4.056-4.97v5.984h5.984a5.071,5.071,0,0,1-10.04-1.014Z\" transform=\"translate(-120.508 -133.758)\"/></g>\r\n</svg>`"
                },
                {
                    "name": "RESTAURANT_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\r\n                                                            < svg xmlns = \"http://www.w3.org/2000/svg\" width = \"27.93\" height = \"31.033\" viewBox = \"0 0 27.93 31.033\" >\r\n                                                              <path id=\"Icon_material-restaurant\" data - name=\"Icon material-restaurant\"\r\nd = \"M16.913,13.861h-3.1V3h-3.1V13.861H7.6V3H4.5V13.861a6.185,6.185,0,0,0,5.819,6.16V34.033H14.2V20.021a6.185,6.185,0,0,0,5.819-6.16V3h-3.1Zm7.758-4.655V21.62H28.55V34.033H32.43V3C28.147,3,24.671,6.476,24.671,9.207Z\" transform = \"translate(-4.5 -3)\" fill = \"#37c56b\" />\r\n  </svg>`"
                },
                {
                    "name": "SAVE_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\r\n<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"24.007\" height=\"24.007\"\r\nviewBox=\"0 0 24.007 24.007\">\r\n<defs><style>.save{fill:\"none\";}</style>\r\n</defs>\r\n\r\n<path class=\"save\" d=\"M19.706,0H2.813A2.816,2.816,0,0,0,0,2.813v18.38a2.816,2.816,0,0,0,2.813,2.813h18.38a2.816,2.816,0,0,0,2.813-2.813V4.3ZM7.361,1.876h5.58V5.439h1.876V1.876h1.876v4.5a.939.939,0,0,1-.938.938H8.3a.939.939,0,0,1-.938-.938ZM18.568,22.131H5.486V13.879a.939.939,0,0,1,.938-.938H17.63a.939.939,0,0,1,.938.938Zm3.564-.938a.939.939,0,0,1-.938.938h-.75V13.879a2.816,2.816,0,0,0-2.813-2.813H6.424A2.816,2.816,0,0,0,3.61,13.879v8.252h-.8a.939.939,0,0,1-.938-.938V2.813a.939.939,0,0,1,.938-.938H5.486v4.5A2.816,2.816,0,0,0,8.3,9.19h7.455a2.816,2.816,0,0,0,2.813-2.813v-4.5h.362l3.2,3.2Z\"/></svg>\r\n`"
                },
                {
                    "name": "SELECT_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\"width=\"24px\" fill=\"\" style=\"transform: rotate(-90deg)\";>\r\n\r\n\"<rect fill=\"none\" height=\"24\" width=\"24\" /><g><polygon points=\"17.77,3.77 16,2 6,12 16,22 17.77,20.23 9.54,12\"/></g>\r\n</svg>\r\n`"
                },
                {
                    "name": "SHIELD_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\r\n<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"35.879\" height=\"42.869\"\r\nviewBox=\"0 0 35.879 42.869\"><defs><style>.shield{fill:\"none\";}\r\n</style></defs><g transform=\"translate(-36.592)\">\r\n<path class=\"shield\"\r\nd=\"M104.232,86.7l1.665,14.91a7.55,7.55,0,0,0,1.459,3.694c4.614,6.147,7.664,7.619,8.37,7.65a.984.984,0,0,0,.1-.011V83.956a18.058,18.058,0,0,1-9.816,2.824C105.415,86.78,104.821,86.752,104.232,86.7Z\" transform=\"translate(-61.179 -75.937)\"/><path class=\"shield\" d=\"M71.674,4.145a1.95,1.95,0,0,0-1.943-.21,12.7,12.7,0,0,1-5.144,1.053c-4.2,0-7.8-1.92-9.294-4.642a.666.666,0,0,0-1.168,0A7.9,7.9,0,0,1,51.644,3a10.333,10.333,0,0,1-1.385.785c-.114.055-.237.1-.356.154a11.609,11.609,0,0,1-1.126.427c-.167.054-.336.1-.509.151-.379.1-.769.185-1.169.254-.17.029-.337.066-.512.089a13.466,13.466,0,0,1-1.755.124,12.6,12.6,0,0,1-5.446-1.194,2.2,2.2,0,0,0-1.974.166A1.917,1.917,0,0,0,36.6,5.767L38.9,26.321a13.427,13.427,0,0,0,2.594,6.557c2.926,3.9,8.265,9.991,13.049,9.991,4.96,0,10.25-6.118,13.116-10.015A13.35,13.35,0,0,0,70.175,26.4L72.459,5.933A1.947,1.947,0,0,0,71.674,4.145Zm-4.408,21.93A10.363,10.363,0,0,1,65.3,31.12c-4.062,5.524-8.084,8.822-10.757,8.822-2.52,0-6.622-3.38-10.707-8.821A10.5,10.5,0,0,1,41.807,26L39.7,7.078a15.922,15.922,0,0,0,5.136.838A14.519,14.519,0,0,0,54.71,4.283a14.519,14.519,0,0,0,9.877,3.633,16.055,16.055,0,0,0,4.785-.722Z\"\r\ntransform=\"translate(0 0)\"/></g></svg>\r\n`"
                },
                {
                    "name": "SITE_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"51.598\" height=\"41.803\"\r\nviewBox=\"0 0 51.598 41.803\"><defs><style>\r\n.site{fill:\"none\";}</style></defs><g\r\ntransform=\"translate(0 -45.56)\">\r\n<path class=\"site\" d=\"M4.885,323.513,0,334.653H13L16.47,322.8a37.3,37.3,0,0,0-11.585.708Z\" transform=\"translate(0 -247.29)\"/>\r\n<path class=\"site\" d=\"M67.556,248.735a34.185,34.185,0,0,1,3.447.244l1.622-5.539H62.614l-2.544,5.8A43.252,43.252,0,0,1,67.556,248.735Z\" transform=\"translate(-53.613 -176.609)\"/><path class=\"site\" d=\"M203.187,255.64l-1.65-5.33a76.662,76.662,0,0,1-5.862-6.87h-2.45l-1.8,6.131a14.638,14.638,0,0,1,6.9,3.6A9.587,9.587,0,0,0,203.187,255.64Z\" transform=\"translate(-170.852 -176.609)\"/><path class=\"site\" d=\"M161.047,332.051a11.7,11.7,0,0,0-5.527-2.791l-3.31,11.306h18.553l-1.522-4.918A13.473,13.473,0,0,1,161.047,332.051Z\" transform=\"translate(-135.848 -253.203)\"/>\r\n<path class=\"site\" d=\"M331.672,246.9q-.672.89-1.434,1.822a78.786,78.786,0,0,1-6.528,7.055l.99,3.2h12.266Z\" transform=\"translate(-288.912 -179.697)\"/>\r\n<path class=\"site\" d=\"M354.882,389.23H342.2l1.5,4.86h13.308Z\" transform=\"translate(-305.415 -306.727)\"/>\r\n<path class=\"site\" d=\"M300.058,124.136a1.878,1.878,0,1,0-1.878-1.878A1.881,1.881,0,0,0,300.058,124.136Z\" transform=\"translate(-266.127 -66.786)\"/>\r\n<path class=\"site\" d=\"M222.078,66.985c1.76,2.14,3.194,3.693,4.9,5.426,3.627-3.493,10.938-12.271,10.68-16.171a10.68,10.68,0,1,0-21.359,0C216.257,58.551,218.459,62.584,222.078,66.985Zm-.205-11.513a5.1,5.1,0,1,1,5.1,5.1A5.108,5.108,0,0,1,221.873,55.472Z\" transform=\"translate(-193.044)\"/></g>\r\n</svg>`"
                },
                {
                    "name": "SUPERVISION_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"32.581\" height=\"31.224\"\r\nviewBox=\"0 0 32.581 31.224\"><defs>\r\n<style>.supervision{fill:\"none\";}</style></defs><g transform=\"translate(0 -10.664)\"><g transform=\"translate(0 10.664)\">\r\n<path class=\"supervision\" d=\"M25.793,28.312a6.752,6.752,0,0,0-3.182.791l-1.488-2.232a8.824,8.824,0,1,0-9.685-.013l-1.5,2.23a6.8,6.8,0,1,0,1.132.749l1.555-2.319a8.844,8.844,0,0,0,7.3.01l1.552,2.329a6.788,6.788,0,1,0,4.311-1.545ZM6.788,40.53a5.389,5.389,0,0,1-3.5-1.28,5.139,5.139,0,0,0,.661-.27c.05-.024.1-.047.122-.056a3.879,3.879,0,0,0,1.66-1.011,2,2,0,0,0,1.059.4,2,2,0,0,0,1.059-.4,3.884,3.884,0,0,0,1.661,1.012c.023.008.071.031.121.055a5.154,5.154,0,0,0,.66.27A5.388,5.388,0,0,1,6.788,40.53ZM5.307,34.767a1.5,1.5,0,1,1,2.962,0,2.458,2.458,0,0,1-.609,1.487,2.17,2.17,0,0,1-.872.692,2.166,2.166,0,0,1-.872-.692A2.455,2.455,0,0,1,5.307,34.767Zm6.911.332a5.39,5.39,0,0,1-.951,3.072A1.207,1.207,0,0,0,11,38.046l-.037-.01a5.855,5.855,0,0,1-.974-.381c-.863-.329-1.087-.566-1.144-.677l-.005-.012v-.019a3.729,3.729,0,0,0,.786-2.18,2.847,2.847,0,1,0-5.677,0,3.724,3.724,0,0,0,.786,2.179v.02a.117.117,0,0,1-.006.012c-.057.111-.281.348-1.144.677a5.841,5.841,0,0,1-.974.381l-.038.01a1.227,1.227,0,0,0-.265.125,5.431,5.431,0,0,1,8.319-6.911A5.393,5.393,0,0,1,12.218,35.1ZM10.865,23.921l-.049.014a1.566,1.566,0,0,0-.381.186,7.467,7.467,0,1,1,11.71,0,1.545,1.545,0,0,0-.382-.186l-.048-.014a7.615,7.615,0,0,1-1.266-.493c-1.121-.427-1.411-.735-1.486-.88a.084.084,0,0,0-.007-.016l-.007-.979a4.844,4.844,0,0,0,1.028-2.84,3.7,3.7,0,1,0-7.374,0,4.844,4.844,0,0,0,1.028,2.84l-.007.979-.007.016c-.075.145-.366.453-1.486.88A7.6,7.6,0,0,1,10.865,23.921Zm7.754-5.209a3.635,3.635,0,0,1-.974,2.3,2.622,2.622,0,0,1-1.354.945,2.618,2.618,0,0,1-1.354-.945,3.634,3.634,0,0,1-.975-2.3,2.738,2.738,0,0,1,.7-1.946,2.306,2.306,0,0,1,3.256,0A2.74,2.74,0,0,1,18.619,18.713ZM16.29,26.954a7.41,7.41,0,0,1-4.846-1.786,6.263,6.263,0,0,0,.982-.386c.079-.038.141-.068.188-.086a3.787,3.787,0,0,0,2.209-1.525c.019-.036.033-.068.043-.09l.109-.242a2.538,2.538,0,0,0,1.315.474A2.53,2.53,0,0,0,17.6,22.84l.113.246c.01.021.023.049.04.082A3.777,3.777,0,0,0,19.968,24.7c.046.017.108.047.187.086a6.278,6.278,0,0,0,.982.386A7.411,7.411,0,0,1,16.29,26.954Zm9.5,13.575a5.387,5.387,0,0,1-3.5-1.28,5.252,5.252,0,0,0,.66-.27c.05-.024.1-.047.121-.056a3.885,3.885,0,0,0,1.66-1.011,2,2,0,0,0,1.059.4,2,2,0,0,0,1.059-.4,3.892,3.892,0,0,0,1.661,1.012c.023.008.071.031.12.055a5.21,5.21,0,0,0,.661.27A5.389,5.389,0,0,1,25.793,40.53Zm-1.48-5.763a1.5,1.5,0,1,1,2.961,0,2.451,2.451,0,0,1-.608,1.487,2.173,2.173,0,0,1-.872.692,2.174,2.174,0,0,1-.872-.692A2.457,2.457,0,0,1,24.313,34.767Zm5.96,3.4a1.215,1.215,0,0,0-.264-.125l-.038-.01A5.854,5.854,0,0,1,29,37.655c-.863-.329-1.087-.566-1.144-.677l0-.012v-.019a3.732,3.732,0,0,0,.786-2.18,2.847,2.847,0,1,0-5.677,0,3.727,3.727,0,0,0,.786,2.179v.02l0,.012c-.058.111-.281.348-1.144.677a5.813,5.813,0,0,1-.974.381l-.038.01a1.211,1.211,0,0,0-.264.125,5.43,5.43,0,1,1,8.958,0Z\" transform=\"translate(0 -10.664)\"/></g></g>\r\n</svg>`"
                },
                {
                    "name": "TENT_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"64.367\" height=\"41.536\" viewBox=\"0 0 64.367 41.536\"><defs>\r\n<style>.tent{fill:\"none\";}</style></defs><g transform=\"translate(-0.001 -97.247)\">\r\n<g transform=\"translate(0.001 97.247)\">\r\n<path class=\"tent\" d=\"M247.187,97.973a2.069,2.069,0,0,0-1.455-.726H232.823c-.458,0-.474.345-.247.742L255.4,137.62a1,1,0,0,0,1.2.289l12.448-3.935a.692.692,0,0,0,.354-1.042Z\" transform=\"translate(-205.148 -97.247)\"/>\r\n<path class=\"tent\" d=\"M11.1,143.641l11.012-23.506v22.742c0,2.035,2.158,1.919,2.616,1.919H46.188c.458,0,.644-.737.418-1.135l-22.173-39.3a.431.431,0,0,0-.821,0l-5.552,9.749a3.488,3.488,0,0,1-1.135,1.122c-5.616,3.116-13.19,7.278-16.546,8.75A.737.737,0,0,0,.3,125.22a37.463,37.463,0,0,1,3.8,4.409A23.5,23.5,0,0,1,6.3,133.4a1.8,1.8,0,0,1-.068,1.475L1.464,143.66c-.224.4-.037,1.135.421,1.135H9.895C10.352,144.795,10.891,144.049,11.1,143.641Zm-6.4-18.11a.312.312,0,0,1,.062-.552c2.363-1.237,13.542-7.1,16.651-9.005.235-.144.32-.067.2.177l-10.6,20.823c-.125.245-.267.225-.328-.044C10.28,135.17,8.662,129.04,4.695,125.531Z\" transform=\"translate(-0.001 -103.26)\"/></g></g>\r\n</svg>`"
                },
                {
                    "name": "THUMBUP_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24px\" height=\"24px\">\r\n\r\n\r\n\r\n  <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n\r\n  <path d=\"M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.` +\r\n  `44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5` +\r\n  `1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-1.91l-.01-.01L23 10z\"/>\r\n  </svg>\r\n`"
                },
                {
                    "name": "TRANSACTION_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\"\r\n  width=\"76.498\" height=\"50.999\"\r\n  viewBox=\"0 0 76.498 50.999\">\r\n  <defs><style>.transactions{fill:\"none\";}</style></defs><g transform=\"translate(0 -85.333)\"><g transform=\"translate(0 85.333)\">\r\n  <path class=\"transactions\" d=\"M75.818,88.808a1.581,1.581,0,0,0-1.458-.191L61.368,93.342a6.328,6.328,0,0,0-3.611,3.321,6.4,6.4,0,0,0-.311.9,58.9,58.9,0,0,1-10.5-4.082c-6.226-3.208-10.983-1.624-15.063,1.488-2.067.041-4.917.285-7.717.532-1.787.158-3.475.3-4.844.386a6.376,6.376,0,0,0-4.192-5.731L2.139,85.429A1.593,1.593,0,0,0,0,86.926V118.8a1.593,1.593,0,0,0,1.594,1.594H6.249a6.41,6.41,0,0,0,5.012-2.442c.634.482,1.385,1.047,2.173,1.639,1.86,1.4,3.9,2.926,4.789,3.675,5.934,4.968,13.069,10.333,14.49,11.267a11.7,11.7,0,0,0,5.536,1.8,5.851,5.851,0,0,0,3.76-1.063A5.121,5.121,0,0,0,46,135.18a5.974,5.974,0,0,0,2.956-2.957,6.2,6.2,0,0,0,3.972-.582,5.433,5.433,0,0,0,2.59-2.607A5.008,5.008,0,0,0,59,127.923,5.164,5.164,0,0,0,61.09,123.2l4.043-2.237a6.385,6.385,0,0,0,5.117,2.623H74.9a1.593,1.593,0,0,0,1.594-1.594V90.114A1.594,1.594,0,0,0,75.818,88.808ZM9.234,115.139a3.2,3.2,0,0,1-2.985,2.068H3.187V89.2l10.854,3.947a3.188,3.188,0,0,1,1.9,4.113Zm47.833,10.252c-.54.414-1.3.644-1.633.308-.017-.017-.044-.016-.061-.032s-.046-.066-.079-.093c-1.139-.9-6.244-6.123-9.4-9.413a1.593,1.593,0,0,0-2.3,2.2c.74.773,6.685,6.964,9.064,9.129a2.2,2.2,0,0,1-1.156,1.3,2.456,2.456,0,0,1-2.484.056c-.012-.011-.029-.01-.042-.021s-.028-.042-.049-.058c-1.911-1.527-6.706-6.622-7.791-7.8a1.594,1.594,0,0,0-2.347,2.157c.052.057,4.752,5.126,7.391,7.48a2.8,2.8,0,0,1-1.466,1.662,2.081,2.081,0,0,1-2.177-.325c-2.289-1.941-6.882-6.83-7.785-7.8a1.593,1.593,0,1,0-2.328,2.176c1.071,1.146,4.237,4.5,6.643,6.773a6.9,6.9,0,0,1-.819.051,8.76,8.76,0,0,1-3.785-1.276c-1.117-.735-8.134-5.97-14.193-11.044-.917-.769-3.008-2.342-4.923-3.78-1.026-.77-1.971-1.48-2.668-2.016l5.967-15.915c1.549-.068,3.614-.246,5.8-.439,1.236-.109,2.474-.215,3.656-.307-1.817,1.866-4.52,5.207-4.163,8.34a4.593,4.593,0,0,0,2.258,3.435c2.6,1.629,7.424.263,9.746-2.593a11.08,11.08,0,0,0,3.617-1.147c1.868,1.756,4.372,3.819,7,5.987,4.579,3.773,9.769,8.05,11.142,10.448A1.921,1.921,0,0,1,57.067,125.391Zm2.734-5.125c-2.123-2.841-6.726-6.641-11.212-10.337-2.99-2.464-5.813-4.791-7.62-6.6a1.6,1.6,0,0,0-1.879-.279,9.211,9.211,0,0,1-4.188,1.413,1.6,1.6,0,0,0-1.189.736c-1.25,1.983-4.724,2.926-5.826,2.238a1.416,1.416,0,0,1-.781-1.094c-.154-1.356,1.219-3.7,3.5-5.981,5.639-5.639,9.67-6.742,14.885-4.053a61.83,61.83,0,0,0,11.9,4.545,6.4,6.4,0,0,0,.19.714l6.188,16.5Zm13.51.129H70.25a3.2,3.2,0,0,1-2.985-2.068l-6.7-17.875a3.189,3.189,0,0,1,1.9-4.115l10.854-3.947v28.005Z\" transform=\"translate(0 -85.333)\"/></g></g>\r\n  </svg>`"
                },
                {
                    "name": "TREE_GRADIENT_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\r\n\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"31.883\" height=\"40.875\" viewBox=\"0 0 31.883 40.875\">\r\n  <defs>\r\n  <linearGradient id=\"linear-gradient\" x1=\"0.5\" x2=\"0.5\" y2=\"1\" gradientUnits=\"objectBoundingBox\">\r\n  <stop offset=\"0\" stop-color=\"#448ecd\" stop-opacity=\"0.161\"/>\r\n  <stop offset=\"1\" stop-color=\"#448ecd\"/>\r\n</linearGradient>\r\n  </defs>\r\n\r\n  <path id=\r\n  \"path270\" d=\"M572.514,50.36h1.8V39.817L577.83,36.3h3.678l1.227-1.225h-4.007l3.025-3.025h5.886l1.473-1.473h-5.885l2.208-2.208h3.351V27.063H586.74l2.616-2.616V22.566l-2.943,2.943V22l-1.391,1.389v3.27L582.9,28.78V25.756l-1.472,1.47v3.19L578.4,33.441v-3.19l-1.473,1.473v3.27l-2.779,2.779c.082-.079,0-6.457,0-6.457l2.943-2.945h2.945V27.144h-2.045l6.049-6.049h4.416V19.87H585.1l1.965-1.963-.493-1.064-.9.9V15.21l-1.391-1.391v5.314l-6.7,6.7V22.484l-1.228,1.228v3.433l-2.29,2.289V23.14l1.8-1.8H580.2l1.307-1.307h-4.742l2.371-2.371h3.6V16.353h-2.371L583.716,13l-1.143-1.064-2.289,2.289V11.121l-1.146-1.146v5.967l-2.126,2.126V13.982l-1.388,1.391V19.3l-1.473,1.47V14.309l4.17-4.17H576.6l-2.453,2.453V9.485h-1.47v3.106l-2.453-2.453h-1.718l4.17,4.17v6.457l-1.473-1.47V15.373l-1.388-1.391v4.086l-2.126-2.126V9.975l-1.146,1.146v3.106l-2.287-2.289L563.114,13l3.351,3.351H564.1v1.309h3.6l2.371,2.371h-4.742l1.307,1.307h4.334l1.8,1.8v6.294l-2.29-2.289V23.712l-1.228-1.228v3.354l-6.7-6.7V13.819l-1.391,1.391v2.534l-.9-.9-.49,1.064,1.963,1.963h-3.354V21.1h4.415l6.049,6.049h-2.045V28.37h2.945l2.943,2.945s-.084,6.378,0,6.457L569.9,34.993v-3.27l-1.473-1.473v3.19L565.4,30.416v-3.19l-1.473-1.47V28.78l-2.124-2.126v-3.27L560.416,22v3.512l-2.943-2.943v1.881l2.616,2.616h-2.044V28.37H561.4l2.208,2.208h-5.888l1.473,1.473h5.888l3.025,3.025h-4l1.225,1.225H569l3.515,3.517V50.36Z\" transform=\"translate(-557.473 -9.485)\"\r\n  fill=\"url(#linear-gradient)\"/>\r\n</svg>\r\n`"
                },
                {
                    "name": "TREE_GRADIENT_LANDS_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\r\n<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nxmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\nwidth=\"31.883\" height=\"40.875\"\r\nviewBox=\"0 0 31.883 40.875\">\r\n<defs>\r\n<style>.tree-gradient-land{fill:url(#tree-gradient-land);}</style>\r\n<linearGradient id=\"tree-gradient-land\" x1=\"0.5\" x2=\"0.5\" y2=\"1\" gradientUnits=\"objectBoundingBox\"><stop offset=\"0\" stop-color=\"#fff\"/><stop offset=\"1\" stop-color=\"#d6a348\"/></linearGradient>\r\n</defs>\r\n<path class=\"tree-gradient-land\" d=\"M572.514,50.36h1.8V39.817L577.83,36.3h3.678l1.227-1.225h-4.007l3.025-3.025h5.886l1.473-1.473h-5.885l2.208-2.208h3.351V27.063H586.74l2.616-2.616V22.566l-2.943,2.943V22l-1.391,1.389v3.27L582.9,28.78V25.756l-1.472,1.47v3.19L578.4,33.441v-3.19l-1.473,1.473v3.27l-2.779,2.779c.082-.079,0-6.457,0-6.457l2.943-2.945h2.945V27.144h-2.045l6.049-6.049h4.416V19.87H585.1l1.965-1.963-.493-1.064-.9.9V15.21l-1.391-1.391v5.314l-6.7,6.7V22.484l-1.228,1.228v3.433l-2.29,2.289V23.14l1.8-1.8H580.2l1.307-1.307h-4.742l2.371-2.371h3.6V16.353h-2.371L583.716,13l-1.143-1.064-2.289,2.289V11.121l-1.146-1.146v5.967l-2.126,2.126V13.982l-1.388,1.391V19.3l-1.473,1.47V14.309l4.17-4.17H576.6l-2.453,2.453V9.485h-1.47v3.106l-2.453-2.453h-1.718l4.17,4.17v6.457l-1.473-1.47V15.373l-1.388-1.391v4.086l-2.126-2.126V9.975l-1.146,1.146v3.106l-2.287-2.289L563.114,13l3.351,3.351H564.1v1.309h3.6l2.371,2.371h-4.742l1.307,1.307h4.334l1.8,1.8v6.294l-2.29-2.289V23.712l-1.228-1.228v3.354l-6.7-6.7V13.819l-1.391,1.391v2.534l-.9-.9-.49,1.064,1.963,1.963h-3.354V21.1h4.415l6.049,6.049h-2.045V28.37h2.945l2.943,2.945s-.084,6.378,0,6.457L569.9,34.993v-3.27l-1.473-1.473v3.19L565.4,30.416v-3.19l-1.473-1.47V28.78l-2.124-2.126v-3.27L560.416,22v3.512l-2.943-2.943v1.881l2.616,2.616h-2.044V28.37H561.4l2.208,2.208h-5.888l1.473,1.473h5.888l3.025,3.025h-4l1.225,1.225H569l3.515,3.517V50.36Z\" transform=\"translate(-557.473 -9.485)\"/>\r\n</svg>\r\n`"
                },
                {
                    "name": "TREE_ICON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\r\n<svg xmlns=\"http://www.w3.org/2000/svg\"\r\nxmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"31.883\" height=\"40.875\"\r\nviewBox=\"0 0 31.883 40.875\"><defs>\r\n<style>.tree{fill:\"none\";}</style>\r\n<linearGradient id=\"a\" x1=\"0.5\" x2=\"0.5\" y2=\"1\" gradientUnits=\"objectBoundingBox\"><stop offset=\"0\" stop-color=\"#08954e\" stop-opacity=\"0.161\"/><stop offset=\"1\" stop-color=\"#08954e\"/>\r\n</linearGradient></defs><path class=\"tree\" d=\"M572.514,50.36h1.8V39.817L577.83,36.3h3.678l1.227-1.225h-4.007l3.025-3.025h5.886l1.473-1.473h-5.885l2.208-2.208h3.351V27.063H586.74l2.616-2.616V22.566l-2.943,2.943V22l-1.391,1.389v3.27L582.9,28.78V25.756l-1.472,1.47v3.19L578.4,33.441v-3.19l-1.473,1.473v3.27l-2.779,2.779c.082-.079,0-6.457,0-6.457l2.943-2.945h2.945V27.144h-2.045l6.049-6.049h4.416V19.87H585.1l1.965-1.963-.493-1.064-.9.9V15.21l-1.391-1.391v5.314l-6.7,6.7V22.484l-1.228,1.228v3.433l-2.29,2.289V23.14l1.8-1.8H580.2l1.307-1.307h-4.742l2.371-2.371h3.6V16.353h-2.371L583.716,13l-1.143-1.064-2.289,2.289V11.121l-1.146-1.146v5.967l-2.126,2.126V13.982l-1.388,1.391V19.3l-1.473,1.47V14.309l4.17-4.17H576.6l-2.453,2.453V9.485h-1.47v3.106l-2.453-2.453h-1.718l4.17,4.17v6.457l-1.473-1.47V15.373l-1.388-1.391v4.086l-2.126-2.126V9.975l-1.146,1.146v3.106l-2.287-2.289L563.114,13l3.351,3.351H564.1v1.309h3.6l2.371,2.371h-4.742l1.307,1.307h4.334l1.8,1.8v6.294l-2.29-2.289V23.712l-1.228-1.228v3.354l-6.7-6.7V13.819l-1.391,1.391v2.534l-.9-.9-.49,1.064,1.963,1.963h-3.354V21.1h4.415l6.049,6.049h-2.045V28.37h2.945l2.943,2.945s-.084,6.378,0,6.457L569.9,34.993v-3.27l-1.473-1.473v3.19L565.4,30.416v-3.19l-1.473-1.47V28.78l-2.124-2.126v-3.27L560.416,22v3.512l-2.943-2.943v1.881l2.616,2.616h-2.044V28.37H561.4l2.208,2.208h-5.888l1.473,1.473h5.888l3.025,3.025h-4l1.225,1.225H569l3.515,3.517V50.36Z\" transform=\"translate(-557.473 -9.485)\"/>\r\n</svg>\r\n`"
                },
                {
                    "name": "TREE_LOGO",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\r\n  < svg xmlns = \"http://www.w3.org/2000/svg\" width = \"45\" height = \"55.625\"\r\nviewBox = \"0 0 45 55.625\" > <defs>\r\n  <style>.tree - logo{ fill:#008f63; }.b,.d{ fill:#e85625; }.c{ fill:#1b9bdc; }.d{ stroke:#6f1500; stroke - width: 0.2px; }.e{ fill:#6f1500; }.f{ fill:#2b1b28; }.g{ fill:#1a231e; }.h,.j{ fill:#0b6f55; font - size: 5px; }.h{ font - family: LucidaGrande - Bold, Lucida Grande; font - weight: 700; }.i,.j{ font - family: OpenSans - Semibold, Open Sans; font - weight: 600; }.k,.m{ stroke: none; }.l{ fill: none; }.m{ fill:#2b1b28; } </style></defs > <g transform=\"translate(-1760 -16.375)\" >\r\n  <path class=\"tree-logo\" d = \"M-5572.5-231.625l-3.1,6.83-1.288,2.837-10.363,22.833h28.75Z\" transform = \"translate(7355.25 248)\" />\r\n  <path class=\"b\" d = \"M-5578.25-192.687h10.625v-6.437h-10.625\" transform = \"translate(7355.25 248)\" />\r\n  <path class=\"c\" d = \"M-5580.781-189.8a4.331,4.331,0,0,1,3.266-3.172c-.218.035,10.212,0,10.212,0a5.055,5.055,0,0,1,2.835,3.172Z\" transform = \"translate(7354.781 248.156)\" />\r\n  <path class=\"b\" d = \"M-5585.437-211.5l12.5,4.5a5.384,5.384,0,0,1-4.375,3.125c-3.135.188-8.094-4.031-8.375-4.922A6.477,6.477,0,0,1-5585.437-211.5Z\" transform = \"translate(7356.354 247.869)\" />\r\n  <path class=\"c\" d = \"M-5567.2-221.222s3.75-1.062,5.875,4.25c-.84,1.064-3.375,1.75-3.375,1.75Z\" transform = \"translate(7354.516 248.222)\" />\r\n  <path class=\"b\" d = \"M-5573.812-211.931-5586-205.869a6.6,6.6,0,0,0,4.605,1.994c3.135.188,7.777-3.984,8.375-4.922S-5573.812-211.931-5573.812-211.931Z\" transform = \"translate(7366.87 242.869)\" />\r\n  <path class=\"c\" d = \"M-5583-215.094c-.051,0,.754-.082.4,0a4.033,4.033,0,0,0-2.834,3.4c-.031,0,2.438.834,2.438.834l1.568-3.531A2.344,2.344,0,0,0-5583-215.094Z\" transform = \"translate(7356.354 248.098)\" />\r\n  <path class=\"b\" d = \"M-5583.687-216.9s1.359,4.512,6.984,3.832,4.945-7.973,4.945-7.973l-.556-1.607-5.625-2.225Z\" transform = \"translate(7356.149 248)\" /> <g class=\"d\" transform = \"translate(1775.438 31)\" > <circle class=\"k\" cx = \"1.5\" cy = \"1.5\" r = \"1.5\" /> <circle class=\"l\" cx = \"1.5\" cy = \"1.5\" r = \"1.4\" /> </g><g class=\"d\" transform=\"translate(1780.87 27.563)\"><circle class=\"k\" cx=\"1.5\" cy=\"1.5\" r=\"1.5\"/ > <circle class=\"l\" cx = \"1.5\" cy = \"1.5\" r = \"1.4\" /> </g>\r\n  <path class=\"e\" d=\"M-5577.228-215.945c1.84,1.334,3.363.841,3.227-1.184a.28.28,0,0,0,.175.02s.275,1.664-1.053,2.062a2.866,2.866,0,0,1-2.517-.753S-5577.211-215.957-5577.228-215.945Z\" transform=\"translate(7295.079 -819.314) rotate(-11)\"/ > <g class=\"f\" transform = \"translate(-5592.482 -606.884) rotate(3)\" >\r\n  <path class=\"k\" d = \"M 7392.79052734375 254.2174987792969 C 7392.2705078125 254.2174987792969 7391.79150390625 253.9266357421875 7391.55029296875 253.4706573486328 L 7393.52783203125 251.6287841796875 C 7393.93798828125 251.8837127685547 7394.18994140625 252.3330078125 7394.18994140625 252.8180694580078 C 7394.18994140625 253.5897216796875 7393.56201171875 254.2174987792969 7392.79052734375 254.2174987792969 Z\" />\r\n  <path class=\"m\" d = \"M 7392.79052734375 254.1175079345703 C 7393.5068359375 254.1175079345703 7394.08984375 253.5345764160156 7394.08984375 252.8180694580078 C 7394.08984375 252.3931732177734 7393.8818359375 251.9978332519531 7393.53857421875 251.7556610107422 L 7391.67626953125 253.4900512695312 C 7391.91015625 253.8752899169922 7392.33349609375 254.1175079345703 7392.79052734375 254.1175079345703 M 7392.79052734375 254.3175048828125 C 7392.2080078125 254.3175048828125 7391.6728515625 253.976318359375 7391.427734375 253.4482879638672 L 7393.51416015625 251.5048675537109 C 7393.9931640625 251.7696533203125 7394.2900390625 252.2728881835938 7394.2900390625 252.8180694580078 C 7394.2900390625 253.6448669433594 7393.6171875 254.3175048828125 7392.79052734375 254.3175048828125 Z\" /> </g><g class=\"f\" transform=\"translate(-5524.492 -1122.833) rotate(7)\">\r\n  <path class=\"k\" d=\"M 7392.79052734375 254.2174987792969 C 7392.2705078125 254.2174987792969 7391.79150390625 253.9266357421875 7391.55029296875 253.4706573486328 L 7393.52783203125 251.6287841796875 C 7393.93798828125 251.8837127685547 7394.18994140625 252.3330078125 7394.18994140625 252.8180694580078 C 7394.18994140625 253.5897216796875 7393.56201171875 254.2174987792969 7392.79052734375 254.2174987792969 Z\"/ >\r\n  <path class=\"m\" d = \"M 7392.79052734375 254.1175079345703 C 7393.5068359375 254.1175079345703 7394.08984375 253.5345764160156 7394.08984375 252.8180694580078 C 7394.08984375 252.3931732177734 7393.8818359375 251.9978332519531 7393.53857421875 251.7556610107422 L 7391.67626953125 253.4900512695312 C 7391.91015625 253.8752899169922 7392.33349609375 254.1175079345703 7392.79052734375 254.1175079345703 M 7392.79052734375 254.3175048828125 C 7392.2080078125 254.3175048828125 7391.6728515625 253.976318359375 7391.427734375 253.4482879638672 L 7393.51416015625 251.5048675537109 C 7393.9931640625 251.7696533203125 7394.2900390625 252.2728881835938 7394.2900390625 252.8180694580078 C 7394.2900390625 253.6448669433594 7393.6171875 254.3175048828125 7392.79052734375 254.3175048828125 Z\" /> </g>\r\n  <path class=\"g\" d=\"M-5583.417-216.98l11.245-5.739s.6-.142.6.279a1.1,1.1,0,0,1-.469,1.047c-1.437.8-2.062.375-2.641.875s-2.411,2.531-2.411,2.531c-.433.188.083-.151,0-.734s-1.344,1.987-3.479,2.438S-5583.417-216.98-5583.417-216.98Z\" transform=\"translate(7355.573 247.721)\"/ >\r\n  <path class=\"c\" d = \"M-5584.587-217.1c1.313,1.063,6.938-2.875,6.938-2.875a62.717,62.717,0,0,1,6.125-3.125c-3.469-4.844-7.381-5.933-7.381-5.933a5.044,5.044,0,0,0-4.75,1.094C-5585.906-225.969-5584.587-219.661-5584.587-217.1Z\" transform = \"translate(7355.962 247.973)\" /> <text class=\"h\" transform = \"translate(1771 65)\" > <tspan x=\"0\" y = \"0\" > ונוער < /tspan><tspan class=\"i\" y=\"0\"> </tspan > <tspan y=\"0\" > חינוך < /tspan></text > <text class=\"j\" transform = \"translate(1760 71)\" > <tspan x=\"0\" y = \"0\" > Youth & amp; Education < /tspan></text > </g>\r\n    < /svg>\r\n      `"
                },
                {
                    "name": "V_SIGN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`<svg xmlns=\"http://www.w3.org/2000/svg\"\r\n width=\"17.956\" height=\"17.331\" viewBox=\"0 0 17.956 17.331\">\r\n <defs>\r\n <style>.v-sign{fill:\"none\";opacity:0;}\r\n .b-v-sign{fill:none;stroke:#6dc066;stroke-linecap:round;stroke-linejoin:round;stroke-width:1.5px;}\r\n .c,.d{stroke:none;}.d{fill:#dfdfdf;}</style></defs><g transform=\"translate(0.332 0.331)\">\r\n <g class=\"v-sign\">\r\n\r\n\r\n <path class=\"c\" d=\"M 8.5 16.25 C 4.226640224456787 16.25 0.75 12.77336025238037 0.75 8.5 C 0.75 6.115330219268799 1.804280042648315 3.984380006790161 3.798870086669922 2.337510108947754 C 4.990379810333252 1.342460036277771 6.746600151062012 0.75 8.5 0.75 C 12.77336025238037 0.75 16.25 4.226640224456787 16.25 8.5 C 16.25 12.77336025238037 12.77336025238037 16.25 8.5 16.25 Z\"/>\r\n\r\n <path class=\"d\" d=\"M 8.5 1.5 C 6.916910171508789 1.5 5.340410232543945 2.027279853820801 4.28285026550293 2.910479545593262 L 4.276379585266113 2.915849685668945 C 2.460060119628906 4.415530204772949 1.5 6.346500396728516 1.5 8.5 C 1.5 12.35980987548828 4.640190124511719 15.5 8.5 15.5 C 12.35980987548828 15.5 15.5 12.35980987548828 15.5 8.5 C 15.5 4.640190124511719 12.35980987548828 1.5 8.5 1.5 M 8.5 0 C 13.19441986083984 0 17 3.805580139160156 17 8.5 C 17 13.19441986083984 13.19441986083984 17 8.5 17 C 3.805580139160156 17 0 13.19441986083984 0 8.5 C 0 5.866430282592773 1.197699546813965 3.512599945068359 3.32135009765625 1.759169578552246 C 4.549599647521973 0.7334194183349609 6.439149856567383 0 8.5 0 Z\"/></g><g transform=\"translate(0.631 0.581)\">\r\n\r\n <path class=\"b-v-sign\" d=\"M18.933,9.965v.706a7.72,7.72,0,0,1-5.708,7.357,8.116,8.116,0,0,1-8.942-3.183A7.456,7.456,0,0,1,4.911,5.68a8.171,8.171,0,0,1,9.3-2.024\" transform=\"translate(-3 -2.991)\"/>\r\n <path class=\"b-v-sign\" d=\"M23.856,6,15.89,13.974l-2.39-2.39\"\r\n transform=\"translate(-7.923 -4.402)\"/></g></g></svg>`"
                }
            ],
            "projects/lib-kakal-ui/src/lib/stories/Form.stories.ts": [
                {
                    "name": "Advanced",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Button",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Grid",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "questions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Question[]",
                    "defaultValue": "[\r\n  {\r\n    controlType: 'select',\r\n    key: 'record',\r\n    label: 'סוג רישום',\r\n    options: [\r\n      { label: 'גוש חלקה', value: 'שם נוסף' },\r\n      { label: 'דף ספר', value: 'עוד לקוח' },\r\n      { label: 'מגרש', value: 'לקוח מספר שלוש' },\r\n      { label: 'גוש שומא', value: 'לקוח מספר ארבע' },\r\n    ],\r\n    gridProps: {\r\n      cols: 1,\r\n    },\r\n  },\r\n  {\r\n    controlType: 'number',\r\n    key: 'block',\r\n    label: 'גוש',\r\n  },\r\n  {\r\n    controlType: 'number',\r\n    key: 'section',\r\n    label: 'חלקה',\r\n  },\r\n  {\r\n    controlType: 'text',\r\n    key: 'subSection',\r\n    label: 'תת חלקה',\r\n  },\r\n]"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FormExComponent>",
                    "defaultValue": "(args: FormExComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/lib-kakal-ui/src/lib/stories/FormInput.stories.ts": [
                {
                    "name": "Autocomplete",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/FormInput.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Select",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/FormInput.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SelectMulti",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/FormInput.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/FormInput.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<InputExComponent>",
                    "defaultValue": "(args: InputExComponent) => ({\r\n  props: args,\r\n})"
                },
                {
                    "name": "Text",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/FormInput.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Textarea",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/FormInput.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "projects/lib-kakal-ui/src/lib/stories/Cards.stories.ts": [
                {
                    "name": "CardDashboardTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Cards.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CardDashboardComponent>",
                    "defaultValue": "(\r\n  args: CardDashboardComponent\r\n) => ({\r\n  props: args,\r\n  template: `\r\n    <div style='\r\n    height: 100px;\r\n    background: black;\r\n    width: 100px;\r\n    border-radius: 12px;\r\n    margin: 0 auto;'>\r\n    <app-card-dashboard ${Object.keys(args).reduce(\r\n      (acc, key) =>\r\n        `${acc} [${key}]='${\r\n          typeof args[key] === 'object' ? JSON.stringify(args[key]) : args[key]\r\n        }'`,\r\n      ''\r\n    )}>\r\n    </app-card-dashboard>\r\n    </div>`,\r\n})"
                },
                {
                    "name": "CardStatusTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Cards.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CardStatusComponent>",
                    "defaultValue": "(\r\n  args: CardStatusComponent\r\n) => ({\r\n  props: args,\r\n  template: `\r\n    <div style='    flex-direction: row;\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    place-content: center;\r\n    align-items: center;'>\r\n    <app-card-status ${Object.keys(args).reduce(\r\n      (acc, key) =>\r\n        `${acc} [${key}]='${\r\n          typeof args[key] === 'object' ? JSON.stringify(args[key]) : args[key]\r\n        }'`,\r\n      ''\r\n    )}></app-card-status>\r\n    </div>`,\r\n})"
                },
                {
                    "name": "CardStepTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Cards.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CardStepComponent>",
                    "defaultValue": "(\r\n  args: CardStepComponent\r\n) => ({\r\n  props: args,\r\n  template: `<app-card-step ${Object.keys(args).reduce(\r\n    (acc, key) =>\r\n      `${acc} [${key}]='${\r\n        typeof args[key] === 'object' ? JSON.stringify(args[key]) : args[key]\r\n      }'`,\r\n    ''\r\n  )}></app-card-step>`,\r\n})"
                },
                {
                    "name": "CardUserTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Cards.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CardUserComponent>",
                    "defaultValue": "(args: CardUserComponent) => ({\r\n  props: args,\r\n})"
                },
                {
                    "name": "CardWizardTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Cards.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CardWizardComponent>",
                    "defaultValue": "(\r\n  args: CardWizardComponent\r\n) => ({\r\n  props: args,\r\n  template: `<app-card-wizard ${Object.keys(args).reduce(\r\n    (acc, key) =>\r\n      `${acc} [${key}]='${\r\n        typeof args[key] === 'object' ? JSON.stringify(args[key]) : args[key]\r\n      }'`,\r\n    ''\r\n  )}></app-card-wizard>`,\r\n})"
                },
                {
                    "name": "Dashboard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Cards.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "CardDashboardTemplate.bind({})"
                },
                {
                    "name": "Status",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Cards.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "CardStatusTemplate.bind({})"
                },
                {
                    "name": "Step",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Cards.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "CardStepTemplate.bind({})"
                },
                {
                    "name": "User",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Cards.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "CardUserTemplate.bind({})"
                },
                {
                    "name": "Wizard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Cards.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "CardWizardTemplate.bind({})"
                }
            ],
            "projects/lib-kakal-ui/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/lib-kakal-ui/src/lib/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/lib-kakal-ui/src/lib/stories/NavbarBottom.stories.ts": [
                {
                    "name": "CustomButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/NavbarBottom.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/NavbarBottom.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Save",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/NavbarBottom.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/NavbarBottom.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<NavbarBottomExComponent>",
                    "defaultValue": "(\r\n  args: NavbarBottomExComponent\r\n) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/lib-kakal-ui/src/lib/stories/screens/Dashboard.stories.ts": [
                {
                    "name": "Dashboard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/screens/Dashboard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Foresrty",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/screens/Dashboard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/screens/Dashboard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<DashboardExComponent>",
                    "defaultValue": "(args: DashboardExComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/lib-kakal-ui/src/lib/stories/CardUser.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/CardUser.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/CardUser.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CardUserComponent>",
                    "defaultValue": "(args: CardUserComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/lib-kakal-ui/src/lib/stories/DatePicker.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/DatePicker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/DatePicker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<any>",
                    "defaultValue": "(args: any) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/lib-kakal-ui/src/lib/stories/Calendar.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Calendar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Calendar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<any>",
                    "defaultValue": "(args: any) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/lib-kakal-ui/src/lib/stories/ExpandPanel.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/ExpandPanel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/ExpandPanel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ExpandPanelComponent>",
                    "defaultValue": "(args: ExpandPanelComponent) => ({\r\n  props: args,\r\n  template: `<kkl-expand-panel>\r\n  <kkl-typography bold=\"600\" title>example</kkl-typography>\r\n  <p content>example</p>\r\n  </kkl-expand-panel>`\r\n})"
                }
            ],
            "projects/lib-kakal-ui/src/lib/stories/FormAutoComplete.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/FormAutoComplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/FormAutoComplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FormautocompleteExComponent>",
                    "defaultValue": "(\r\n  args: FormautocompleteExComponent\r\n) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/lib-kakal-ui/src/lib/stories/Menu.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<MenuComponent>",
                    "defaultValue": "(args: MenuComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/lib-kakal-ui/src/lib/stories/Modal.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<any>",
                    "defaultValue": "(args: any) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/lib-kakal-ui/src/lib/stories/Navbar.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Navbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Navbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<NavbarComponent>",
                    "defaultValue": "(args: NavbarComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/lib-kakal-ui/src/lib/stories/Pagination.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Pagination.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Pagination.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<any>",
                    "defaultValue": "(args: any) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/lib-kakal-ui/src/lib/stories/Typography.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TypographyComponent>",
                    "defaultValue": "(args: TypographyComponent) => ({\r\n  props: args,\r\n  template: `<kkl-typography ${Object.keys(args).reduce((acc, key) => `${acc} [${key}]='${typeof args[key] === 'object' ? JSON.stringify(args[key]) : args[key]}'`, '')} > Hello World </kkl-typography>`\r\n})"
                },
                {
                    "name": "Title",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "projects/lib-kakal-ui/src/lib/stories/FormUpLoad.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/FormUpLoad.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/FormUpLoad.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FormuploadExComponent>",
                    "defaultValue": "(\r\n  args: FormuploadExComponent\r\n) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/lib-kakal-ui/src/lib/stories/screens/Login.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/screens/Login.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/screens/Login.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<literal type>",
                    "defaultValue": "(args: () => {}) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/lib-kakal-ui/src/lib/stories/screens/Layout.stories.ts": [
                {
                    "name": "Defualt",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/screens/Layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/screens/Layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<LayoutExComponent>",
                    "defaultValue": "(args: LayoutExComponent) => ({\r\n  props: args,\r\n})"
                },
                {
                    "name": "WithMenu",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/screens/Layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "WithStatus",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/screens/Layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "WithWizard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/screens/Layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "projects/lib-kakal-ui/src/lib/app/examples/form-ex/mock-qustions.ts": [
                {
                    "name": "details",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/examples/form-ex/mock-qustions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Question[]",
                    "defaultValue": "[\r\n  {\r\n    key: 'supplier',\r\n    label: 'ספק',\r\n    controlType: 'select',\r\n    options: [\r\n      { label: 'solid', value: 'solid' },\r\n      { label: 'great', value: 'great' },\r\n    ],\r\n  },\r\n  {\r\n    key: 'item',\r\n    label: 'בחר פריט',\r\n    controlType: 'select',\r\n    options: [\r\n      { label: 'solid', value: '12123' },\r\n      { label: 'great', value: '23' },\r\n      { label: 'good', value: '123' },\r\n      { label: 'unproven', value: '123123123' },\r\n    ],\r\n  },\r\n\r\n  {\r\n    key: 'quantity',\r\n    label: 'כמות',\r\n    value: '',\r\n  },\r\n\r\n  {\r\n    key: 'participants',\r\n    label: 'משתתפים',\r\n    value: '',\r\n  },\r\n\r\n  {\r\n    key: 'price',\r\n    label: 'מחיר',\r\n    value: '',\r\n    controlType: 'number',\r\n  },\r\n\r\n  {\r\n    key: 'supplierCost',\r\n    label: 'חיוב ספק',\r\n    value: '',\r\n  },\r\n\r\n  {\r\n    key: 'customerCost',\r\n    label: 'חיוב לקוח',\r\n    value: '',\r\n  },\r\n\r\n  {\r\n    key: 'total',\r\n    label: 'סה\"כ',\r\n    value: '',\r\n  },\r\n]"
                },
                {
                    "name": "gridDetails",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/examples/form-ex/mock-qustions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "details.map((question: Question) => {\r\n  question.gridProps = { cols: 3 };\r\n\r\n  return question;\r\n})"
                },
                {
                    "name": "gridTransport",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/examples/form-ex/mock-qustions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "transport.map((question: Question) => {\r\n  question.gridProps = question.gridProps || { cols: 4 };\r\n\r\n  return question;\r\n})"
                },
                {
                    "name": "multiQuestions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/examples/form-ex/mock-qustions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Question[]",
                    "defaultValue": "[...gridDetails, ...gridTransport]"
                },
                {
                    "name": "transport",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/app/examples/form-ex/mock-qustions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Question[]",
                    "defaultValue": "[\r\n  {\r\n    key: 'pickUpDate',\r\n    icon: 'date_range',\r\n    label: 'תאריך איסוף',\r\n    controlType: 'select',\r\n    options: [\r\n      { label: 'יום 1', value: '1' },\r\n      { label: 'יום 2', value: '2' },\r\n      { label: 'יום 3', value: '3' },\r\n      { label: 'יום 4', value: '4' },\r\n    ],\r\n  },\r\n  {\r\n    key: 'pickUpHour',\r\n    label: 'שעת איסוף',\r\n    icon: 'schedule',\r\n    controlType: 'time',\r\n  },\r\n\r\n  {\r\n    key: 'pickUpLocation',\r\n    label: 'מקום איסוף',\r\n    value: '',\r\n    icon: 'location',\r\n  },\r\n\r\n  {\r\n    key: 'pickUpAddress',\r\n    label: 'כתובת איסוף',\r\n    value: '',\r\n    icon: 'location',\r\n  },\r\n\r\n  {\r\n    key: 'dropDownDate',\r\n    label: 'תאריך פיזור',\r\n    icon: 'date_range',\r\n    controlType: 'select',\r\n    options: [\r\n      { label: 'יום 1', value: '1' },\r\n      { label: 'יום 2', value: '2' },\r\n      { label: 'יום 3', value: '3' },\r\n      { label: 'יום 4', value: '4' },\r\n    ],\r\n  },\r\n\r\n  {\r\n    key: 'dropDownHour',\r\n    label: 'שעת פיזור',\r\n    icon: 'schedule',\r\n    controlType: 'time',\r\n     },\r\n  {\r\n    key: 'comments',\r\n    label: 'הערות',\r\n    controlType: 'textarea',\r\n    gridProps: {\r\n      cols: 16,\r\n      rows: 3,\r\n      offset : 6\r\n    },\r\n  },\r\n]"
                }
            ],
            "projects/lib-kakal-ui/src/lib/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false\r\n}"
                }
            ],
            "projects/lib-kakal-ui/src/lib/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true\r\n}"
                }
            ],
            "projects/lib-kakal-ui/src/lib/stories/Filters.stories.ts": [
                {
                    "name": "Filters",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Filters.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Filters.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FiltersExComponent>",
                    "defaultValue": "(args: FiltersExComponent) => ({\r\n  props: args,\r\n  template: `<app-filters ${Object.keys(args).reduce(\r\n    (acc, key) =>\r\n      `${acc} [${key}]='${\r\n        typeof args[key] === 'object' ? JSON.stringify(args[key]) : args[key]\r\n      }'`,\r\n    ''\r\n  )} ></app-filters>`,\r\n})"
                }
            ],
            "projects/lib-kakal-ui/src/lib/stories/Icon.stories.ts": [
                {
                    "name": "HOME_MAT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "HOME_SVG",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<IconComponent>",
                    "defaultValue": "(args: IconComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/lib-kakal-ui/src/lib/stories/Stepper.stories.ts": [
                {
                    "name": "Navigation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Stepper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Status",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Stepper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Stepper",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Stepper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Stepper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<StepperExComponent>",
                    "defaultValue": "(args: StepperExComponent) => ({\r\n  props: args,\r\n})"
                },
                {
                    "name": "Wizard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Stepper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "projects/lib-kakal-ui/src/lib/styles/theme.ts": [
                {
                    "name": "palette",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/styles/theme.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Color",
                    "defaultValue": "{\r\n  primary: '#d6a348',\r\n  accent: '#ff6f2e',\r\n  warn: '#d83020',\r\n  paper: '#fff',\r\n  default: '#bababa',\r\n  disable: ' rgba(0, 0, 0, 0.26)',\r\n  table: '#F8F8F8',\r\n  text: '#000000',\r\n  success: '#59a437',\r\n}"
                }
            ],
            "projects/lib-kakal-ui/src/lib/stories/Card.Dashboardstories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Card.Dashboardstories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-kakal-ui/src/lib/stories/Card.Dashboardstories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CardDashboardComponent>",
                    "defaultValue": "(\r\n  args: CardDashboardComponent\r\n) => ({\r\n  props: args,\r\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/lib-kakal-ui/src/lib/styles/theme.ts": [
                {
                    "name": "Color",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/lib-kakal-ui/src/lib/styles/theme.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 191
                },
                {
                    "name": "Palette",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "ThemePalette | \"paper\" | \"default\" | \"disable\" | \"table\" | \"text\" | \"success\"",
                    "file": "projects/lib-kakal-ui/src/lib/styles/theme.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "Theme",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/lib-kakal-ui/src/lib/styles/theme.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "projects/lib-kakal-ui/src/lib/app/components/columns/column.model.ts": [
                {
                    "name": "ColumnDef",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": " | \"select\" | \"actions\" | \"accordion\" | string",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/columns/column.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "ColumnType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"number\" | \"date\" | \"text\" | \"custom\" | \"actions\" | \"select\" | \"expend\"",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/columns/column.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "SortDir",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"desc\" | \"asc\"",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/columns/column.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/lib-kakal-ui/src/lib/app/components/form/services/form.service.ts": [
                {
                    "name": "ControlTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "[, , ]",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/form/services/form.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                },
                {
                    "name": "Question",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "QuestionSelectModel | QuestionTextModel | QuestionCalendar | QuestionTextareaModel | QuestionNumberModel | QuestionAutocompleteModel",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/form/services/form.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "QuestionBase",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "QuestionBaseModel<string | number | Date>",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/form/services/form.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 174
                }
            ],
            "projects/lib-kakal-ui/src/lib/app/components/form/models/question.model.ts": [
                {
                    "name": "ControlType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"text\" | \"password\" | \"number\" | \"textarea\" | \"select\" | \"calendar\" | \"radio\" | \"date\" | \"time\" | \"group\" | \"custom\" | \"autocomplete\"",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/form/models/question.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "QuestionType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"default\" | \"group\" | \"custom\"",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/form/models/question.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/lib-kakal-ui/src/lib/app/components/form/models/question-group.model.ts": [
                {
                    "name": "GroupType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"default\" | \"group\" | \"custom\"",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/form/models/question-group.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/lib-kakal-ui/src/lib/app/components/icon/icon.model.ts": [
                {
                    "name": "IconType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"mat\" | \"svg\"",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/icon/icon.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/lib-kakal-ui/src/lib/app/components/table/table.component.ts": [
                {
                    "name": "id",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "string | number",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/table/table.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "state",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"add\" | \"save\" | \"edit\" | \"expand\" | \"cancel\" | \"delete\" | \"form\" | string",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/table/table.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/lib-kakal-ui/src/lib/app/components/list-item/list-item.model.ts": [
                {
                    "name": "ListItemKeys",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"path\" | \"label\" | \"svgUrl\"",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/list-item/list-item.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/lib-kakal-ui/src/lib/app/components/cards/card-step/card-step.model.ts": [
                {
                    "name": "StepperDirection",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"column\" | \"row\"",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/cards/card-step/card-step.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "StepType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"wizard\" | \"status\" | \"step\" | \"info\" | \"card\"",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/cards/card-step/card-step.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "StepVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"circle\" | \"square\"",
                    "file": "projects/lib-kakal-ui/src/lib/app/components/cards/card-step/card-step.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/cards/card-dashboard/card-dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardDashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/cards/card-dashboard/card-dashboard.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CardDashboardModel",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/cards/card-filter/card-filter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardFilterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/cards/card-filter/card-filter.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "FilterModel",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/cards/card-status/card-status.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardStatusComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/cards/card-step/card-step.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardStepComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/cards/card-step/card-step.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CardStepModel",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/cards/card-user/card-user.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardUserComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/cards/card-wizard/card-wizard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardWizardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/columns/column-filter/column-filter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ColumnFilterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/columns/column-filter/column-filter.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FilterOption",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/columns/column-form/column-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ColumnFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/columns/column.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ColumnModel",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/columns/column.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ColumnState",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/columns/columns.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ColumnsService",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/columns/columns.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ColumnsData",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/expand-panel/expand-panel.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExpandPanelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/form/form-autocomplete/form-autocomplete.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormAutocompleteComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/form/form-group/form-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/form/form-input/form-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/26",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/form/form-radio/form-radio.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormRadioComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/form/form-upload/form-upload.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormUploadComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/form/form/form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/form/form/form.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Register",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/form/models/question-autocomplete.ts",
                "type": "class",
                "linktype": "classe",
                "name": "QuestionAutocompleteModel",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/form/models/question-calendar.ts",
                "type": "class",
                "linktype": "classe",
                "name": "QuestionCalendar",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/form/models/question-date.ts",
                "type": "class",
                "linktype": "classe",
                "name": "QuestionDate",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/form/models/question-group.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "QuestionGroupModel",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/form/models/question-group.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GroupOptions",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/form/models/question-number.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "QuestionNumberModel",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/form/models/question-radio.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "QuestionRadio",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/form/models/question-radio.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RadioOption",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/form/models/question-select.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "QuestionSelectModel",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/form/models/question-select.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SelectOption",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/form/models/question-text.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "QuestionTextModel",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/form/models/question-textarea.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "QuestionTextareaModel",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/form/models/question.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "QuestionBaseModel",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/form/models/question.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GridProps",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/form/services/form.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FormService",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/form/services/message.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MessageService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icon.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "IconModel",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ADD_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ASSETS_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BED_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BELL_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BOTTOM_TREE_LOGO",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BOTTOM_TREE_LOGO_LANDS_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BUILDING_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BUS_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BUTTON_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CALENDAR_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DESTINATION_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DINNER_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EDIT_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EVALUATION_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FLAG_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GENDER_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GROUP_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GUIDE_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HOME_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LIST_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LOCATION_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LOGO_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LOYER_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MAIL_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MEASUREMENTS_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MUSIC_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OPEN_PLUS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PLANING_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PLAYGROUND_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PRINT_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RELOAD_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "REPORTS_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RESTAURANT_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SAVE_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SELECT_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SHIELD_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SITE_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SUPERVISION_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TENT_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "THUMBUP_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TRANSACTION_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TREE_GRADIENT_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TREE_GRADIENT_LANDS_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TREE_ICON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TREE_LOGO",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "V_SIGN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/icon/icons.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "IconsService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/list-item/list-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/list-item/list-item.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ListItemModel",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/list-item/list-item.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ListItem",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/menu-item/menu-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MenuItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/menu-item/menu-item.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "MenuItemModel",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/menu-item/menu-item.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MenuItemService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/menu/menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/menu/menu.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "MenuModel",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/menu/menu.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MenuService",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/navbar-bottom/navbar-bottom.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavbarBottomComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/navbar/navbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/navbar/navbar.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "NavbarService",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/pagination/pagination.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PaginationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/root/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/status/status.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StatusComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/status/status.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Status",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/stepper/stepper.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StepperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/stepper/stepper.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "StepperService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/table/models/action-state.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ActionState",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/table/models/row.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "RowModel",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/table/models/row.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RowState",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/table/table-datasource.ts",
                "type": "class",
                "linktype": "classe",
                "name": "TableDataSource",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableComponent",
                "coveragePercent": 4,
                "coverageCount": "2/48",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/table/table.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Table",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/table/table.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TableOptions",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/table/table.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TableState",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/table/table.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TableService",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/components/typography/typography.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TypographyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/examples/dashboard-ex/dashboard-ex.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardExComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/examples/filters-ex/filters-ex.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FiltersExComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/examples/form-ex/form-ex.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormExComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/examples/form-ex/mock-qustions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "details",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/examples/form-ex/mock-qustions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "gridDetails",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/examples/form-ex/mock-qustions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "gridTransport",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/examples/form-ex/mock-qustions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "multiQuestions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/examples/form-ex/mock-qustions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "transport",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/examples/formautocomplete-ex/formautocomplete-ex.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormautocompleteExComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/examples/formupload-ex/formupload-ex.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormuploadExComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/examples/input-ex/input-ex.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputExComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/examples/layout-ex/layout-ex.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LayoutExComponent",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/examples/navbar-bottom-ex/navbar-bottom-excomponent.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavbarBottomExComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/examples/navbar-ex/navbar-ex.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavbarExComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/examples/stepper-ex/stepper-ex.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StepperExComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/examples/table-ex/table-ex.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableExComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/screens/dashboard/dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/screens/layout/layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/screens/layout/layout.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LayoutService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/utilities/directives/border.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "BorderDirective",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/utilities/directives/button.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ButtonDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/utilities/directives/color.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ColorDirective",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/utilities/directives/size.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SizeDirective",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/utilities/directives/underline.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "UnderlineDirective",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/utilities/directives/variant.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "VariantDirective",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/utilities/interceptors/error.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GlobalErrorHandler",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/utilities/models/assets.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AssetsModel",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/utilities/models/assets.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AssetStatus",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/utilities/models/nav-card-model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "NavigationCardModel",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/utilities/pipes/area.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "AreaPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/utilities/pipes/format.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "FormatPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/utilities/pipes/nis.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "NisPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/utilities/pipes/numberToTime.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "NumberToTimePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/utilities/services/breakpoint.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "BreakpointService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/app/utilities/services/route.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "RouterService",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Calendar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Calendar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Card.Dashboardstories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Card.Dashboardstories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/CardUser.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/CardUser.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Cards.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CardDashboardTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Cards.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CardStatusTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Cards.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CardStepTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Cards.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CardUserTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Cards.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CardWizardTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Cards.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dashboard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Cards.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Status",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Cards.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Step",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Cards.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Cards.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Wizard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/DatePicker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/DatePicker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/ExpandPanel.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/ExpandPanel.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Filters.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Filters",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Filters.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Advanced",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Button",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Grid",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "questions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/FormAutoComplete.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/FormAutoComplete.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/FormInput.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Autocomplete",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/FormInput.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Select",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/FormInput.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SelectMulti",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/FormInput.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/FormInput.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Text",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/FormInput.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Textarea",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/FormUpLoad.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/FormUpLoad.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HOME_MAT",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HOME_SVG",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Navbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Navbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/NavbarBottom.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/NavbarBottom.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/NavbarBottom.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Save",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/NavbarBottom.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Pagination.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Pagination.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Stepper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Navigation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Stepper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Status",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Stepper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Stepper",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Stepper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Stepper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Wizard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Accordion",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Actions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ExpandByCell",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Form",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pagination",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Selectable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/Typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Title",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/screens/Dashboard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dashboard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/screens/Dashboard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Foresrty",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/screens/Dashboard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/screens/Layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Defualt",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/screens/Layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/screens/Layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithMenu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/screens/Layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithStatus",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/screens/Layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithWizard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/screens/Login.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/stories/screens/Login.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/styles/theme.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "palette",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/lib/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-kakal-ui/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}