{"version":3,"file":"main.979968e763081a9d5790.hot-update.js","mappings":";;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;ACCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAGA;AACA;AAEA;AACA;AAMA;;;;;;;;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;;;;;;;;;;;;;;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AAOA;AAiBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AA7DA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAVA;AALA;AACA;AACA;AACA;AACA;AAmBA;AAlBA;AAAA","sources":["webpack://lib-kakal-ui/./src/lib/app/components/cards/card-step/card-step.component.scss","webpack://lib-kakal-ui/./src/lib/app/components/step/step.component.scss","webpack://lib-kakal-ui/./src/lib/app/components/cards/card-dashboard/card-dashboard.component.html","webpack://lib-kakal-ui/./src/lib/app/components/cards/card-filter/card-filter.component.html","webpack://lib-kakal-ui/./src/lib/app/components/columns/column-filter/column-filter.component.html","webpack://lib-kakal-ui/./src/lib/app/components/menu/menu.component.html","webpack://lib-kakal-ui/./src/lib/app/components/status/status.component.html","webpack://lib-kakal-ui/./src/lib/app/components/table/table.component.html","webpack://lib-kakal-ui/./src/lib/stories/ExpandPanel.stories.ts","webpack://lib-kakal-ui/./src/lib/stories/Typography.stories.ts","webpack://lib-kakal-ui/./src/lib/app/components/typography/typography.component.ts"],"sourcesContent":["export default \"* {\\n  font-family: \\\"open sans hebrew\\\" !important;\\n  src: url(\\\"../assets/fonts/opanSansHebrew/OpenSansHebrew-Regular.ttf\\\") format(\\\"opentype\\\") !important;\\n}\\n\\nhtml,\\nbody,\\napp-root,\\n#root {\\n  height: 100%;\\n  box-sizing: border-box;\\n  font-size: 10px;\\n}\\n\\nbody {\\n  margin: 0;\\n  padding: 0;\\n  font-family: \\\"open sans hebrew\\\", \\\"Helvetica Neue\\\", sans-serif;\\n  src: url(\\\"../assets/fonts/opanSansHebrew/OpenSansHebrew-Regular.ttf\\\") format(\\\"opentype\\\") !important;\\n  box-sizing: border-box;\\n}\\n\\n::ng-deep mat-grid-list,\\nmat-grid-tile {\\n  height: 100%;\\n  width: 100%;\\n}\\n\\n.material-icons {\\n  font-family: \\\"Material Icons\\\" !important;\\n}\\n\\n@media screen and (max-width: 1280px) {\\n  html {\\n    font-size: 8px;\\n  }\\n}\\n/* iPads (landscape) ----------- */\\n@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation: landscape) {\\n  html {\\n    font-size: 8px;\\n  }\\n}\\n/* iPads (portrait) ----------- */\\n@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation: portrait) {\\n  html {\\n    font-size: 10px;\\n  }\\n}\\n:host {\\n  height: 100%;\\n  width: 100%;\\n}\\n\\ndiv {\\n  width: 100%;\\n  height: 100%;\\n}\\n\\nmat-card,\\nmat-card-content {\\n  width: 100%;\\n  height: 100% !important;\\n  padding: 0px !important;\\n}\\nmat-card.active,\\nmat-card-content.active {\\n  background: #d6a348 !important;\\n}\\n\\nkkl-typography.active {\\n  border-bottom: 3px solid #d6a348;\\n  width: inherit;\\n  display: flex;\\n  justify-content: center;\\n}\";","export default \"* {\\n  font-family: \\\"open sans hebrew\\\" !important;\\n  src: url(\\\"../assets/fonts/opanSansHebrew/OpenSansHebrew-Regular.ttf\\\") format(\\\"opentype\\\") !important;\\n}\\n\\nhtml,\\nbody,\\napp-root,\\n#root {\\n  height: 100%;\\n  box-sizing: border-box;\\n  font-size: 10px;\\n}\\n\\nbody {\\n  margin: 0;\\n  padding: 0;\\n  font-family: \\\"open sans hebrew\\\", \\\"Helvetica Neue\\\", sans-serif;\\n  src: url(\\\"../assets/fonts/opanSansHebrew/OpenSansHebrew-Regular.ttf\\\") format(\\\"opentype\\\") !important;\\n  box-sizing: border-box;\\n}\\n\\n::ng-deep mat-grid-list,\\nmat-grid-tile {\\n  height: 100%;\\n  width: 100%;\\n}\\n\\n.material-icons {\\n  font-family: \\\"Material Icons\\\" !important;\\n}\\n\\n@media screen and (max-width: 1280px) {\\n  html {\\n    font-size: 8px;\\n  }\\n}\\n/* iPads (landscape) ----------- */\\n@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation: landscape) {\\n  html {\\n    font-size: 8px;\\n  }\\n}\\n/* iPads (portrait) ----------- */\\n@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation: portrait) {\\n  html {\\n    font-size: 10px;\\n  }\\n}\\n:host {\\n  height: 100%;\\n  width: 100%;\\n}\\n\\ndiv {\\n  width: 100%;\\n  height: 100%;\\n}\\n\\nmat-card,\\nmat-card-content {\\n  width: 100% !important;\\n  height: 100% !important;\\n  padding: 0px !important;\\n}\\nmat-card.active,\\nmat-card-content.active {\\n  background: #d6a348 !important;\\n}\\n\\nkkl-typography.underline {\\n  border-bottom: 3px solid #d6a348;\\n  width: inherit;\\n  display: flex;\\n  justify-content: center;\\n}\\n\\ndiv.label-container {\\n  padding-top: 24px;\\n}\";","export default \"<div class=\\\"card\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" (click)=\\\"onCardClick()\\\">\\r\\n  <div fxFlex=\\\"80\\\">\\r\\n    <kkl-icon [size]=\\\"card.size\\\" type=\\\"svg\\\" [color]=\\\"'primary'\\\" [key]=\\\"card.svgUrl\\\"></kkl-icon>\\r\\n  </div>\\r\\n  <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start center\\\" fxFlex=\\\"30\\\">\\r\\n    <kkl-typography [size]=\\\"1.8\\\">\\r\\n      {{ card.label }}\\r\\n    </kkl-typography>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"filter\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-evenly center\\\">\\r\\n  <kkl-icon\\r\\n    [color]=\\\"'primary'\\\"\\r\\n    [key]=\\\"filter.svgUrl\\\"\\r\\n    class=\\\"filter-svg\\\"\\r\\n  ></kkl-icon>\\r\\n  <kkl-typography [active$]=\\\"active$\\\" size=\\\"1.8\\\">\\r\\n    {{ filter.label }}\\r\\n  </kkl-typography>\\r\\n  <kkl-typography [active$]=\\\"active$\\\" size=\\\"1.8\\\">\\r\\n    {{ filter.value }}\\r\\n  </kkl-typography>\\r\\n</div>\\r\\n\";","export default \"<ng-container>\\r\\n  <kkl-typography [bold]=\\\"600\\\" [size]=\\\"1.2\\\">\\r\\n    {{ label }}\\r\\n  </kkl-typography>\\r\\n  <button mat-icon-button color=\\\"primary\\\" [matMenuTriggerFor]=\\\"menu\\\">\\r\\n    <mat-icon> arrow_drop_down </mat-icon>\\r\\n  </button>\\r\\n  <mat-menu #menu=\\\"matMenu\\\" xPosition=\\\"before\\\">\\r\\n    <button\\r\\n      mat-menu-item\\r\\n      *ngFor=\\\"let option of options\\\"\\r\\n      (click)=\\\"onCOptionSelect(option.value)\\\"\\r\\n    >\\r\\n      <kkl-typography> {{ option.label }}</kkl-typography>\\r\\n    </button>\\r\\n  </mat-menu>\\r\\n</ng-container>\\r\\n\";","export default \"<div class=\\\"links themed-element\\\" [dir]=\\\"'rtl'\\\">\\r\\n  <app-card-user></app-card-user>\\r\\n  <mat-accordion class=\\\"menu\\\">\\r\\n    <mat-expansion-panel\\r\\n      class=\\\"mat-elevation-z0\\\"\\r\\n      *ngFor=\\\"let list of menu; let i = index\\\"\\r\\n    >\\r\\n      <mat-expansion-panel-header *ngIf=\\\"list.label\\\">\\r\\n        <div mat-subheader>\\r\\n          <kkl-typography variant=\\\"button\\\" color=\\\"primary\\\" [bold]=\\\"600\\\">\\r\\n            {{ list.label }}\\r\\n          </kkl-typography>\\r\\n        </div>\\r\\n      </mat-expansion-panel-header>\\r\\n      <mat-list>\\r\\n        <app-menu-item\\r\\n          *ngFor=\\\"let link of list?.links; let i = index\\\"\\r\\n          [link]=\\\"link\\\"\\r\\n          (click)=\\\"onLinkClick(link, list.prefix)\\\"\\r\\n        ></app-menu-item>\\r\\n      </mat-list>\\r\\n    </mat-expansion-panel>\\r\\n  </mat-accordion>\\r\\n  <mat-list>\\r\\n    <mat-list-item appButton>\\r\\n      <mat-icon color=\\\"primary\\\" mat-list-icon>{{ logoutItem.svgUrl }}</mat-icon>\\r\\n      <div class=\\\"logout\\\" mat-line>\\r\\n        <kkl-typography variant=\\\"button\\\" color=\\\"primary\\\" [bold]=\\\"600\\\">\\r\\n          {{ logoutItem.label }}\\r\\n        </kkl-typography>\\r\\n      </div>\\r\\n    </mat-list-item>\\r\\n  </mat-list>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"status-container\\\" fxFill fxFlex=\\\"row\\\">\\r\\n  <mat-grid-list\\r\\n    [cols]=\\\"cols || 8\\\"\\r\\n    [rowHeight]=\\\"(height || 2) + 'vh'\\\"\\r\\n    [gutterSize]=\\\"gutter || '2' + 'px'\\\"\\r\\n    [dir]=\\\"'rtl'\\\"\\r\\n  >\\r\\n    <mat-grid-tile [colspan]=\\\"cols || 8\\\">\\r\\n      <kkl-typography *ngIf=\\\"!slots\\\">\\r\\n        {{ status.label }}\\r\\n      </kkl-typography>\\r\\n\\r\\n      <ng-container\\r\\n        *ngTemplateOutlet=\\\"slots?.textRef; context :{status}\\\"\\r\\n      ></ng-container>\\r\\n    </mat-grid-tile>\\r\\n    <mat-grid-tile *ngFor=\\\"let step of steps; let i = index\\\">\\r\\n      <div fxLayout=\\\"column\\\">\\r\\n        <div [ngClass]=\\\"{ 'status-bar': true, active: !!step }\\\"></div>\\r\\n        <div\\r\\n          class=\\\"step-label\\\"\\r\\n          *ngIf=\\\"hasLabel\\\"\\r\\n          fxLayout=\\\"column\\\"\\r\\n          fxLayoutAlign=\\\"end center\\\"\\r\\n        >\\r\\n          <kkl-typography [color]=\\\"step ? 'accent' : 'disable'\\\" size=\\\"12\\\">\\r\\n            0{{ i + 1 }}\\r\\n          </kkl-typography>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-grid-tile>\\r\\n  </mat-grid-list>\\r\\n</div>\\r\\n\";","export default \"<div>\\r\\n  <mat-table\\r\\n    (matSortChange)=\\\"onSort($event)\\\"\\r\\n    mat-table\\r\\n    matSort\\r\\n    [dataSource]=\\\"$data | async | paginate: pagination\\\"\\r\\n    [dir]=\\\"'rtl'\\\"\\r\\n  >\\r\\n    <ng-container\\r\\n      *ngFor=\\\"let column of tableColumns\\\"\\r\\n      [matColumnDef]=\\\"column.columnDef\\\"\\r\\n    >\\r\\n      <!-- COLUMN HEADER SECTION-->\\r\\n\\r\\n      <ng-container *ngIf=\\\"!column.sortable\\\">\\r\\n        <mat-header-cell\\r\\n          *matHeaderCellDef\\r\\n          [ngClass]=\\\"{ center: column.center }\\\"\\r\\n        >\\r\\n          <!-- DEFAULT HEADER -->\\r\\n          <kkl-typography [bold]=\\\"600\\\" *ngIf=\\\"!column.filterable\\\">\\r\\n            {{ column.label }}\\r\\n          </kkl-typography>\\r\\n\\r\\n          <ng-container\\r\\n            *ngIf=\\\"column.columnDef === 'actions' && column.slotRef\\\"\\r\\n          >\\r\\n            <ng-container\\r\\n              *ngTemplateOutlet=\\\"\\r\\n                headerSlots[column.columnDef];\\r\\n                context: { $implicit: column }\\r\\n              \\\"\\r\\n            >\\r\\n            </ng-container>\\r\\n          </ng-container>\\r\\n\\r\\n          <!-- FILTER HEADER -->\\r\\n          <app-column-filter\\r\\n            *ngIf=\\\"column.filterable\\\"\\r\\n            [column]=\\\"column\\\"\\r\\n          ></app-column-filter>\\r\\n        </mat-header-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- SORT HEADER -->\\r\\n      <ng-container *ngIf=\\\"column.sortable\\\">\\r\\n        <mat-header-cell\\r\\n          mat-sort-header\\r\\n          *matHeaderCellDef\\r\\n          [ngClass]=\\\"{ center: column.center }\\\"\\r\\n          [start]=\\\"column.sortDir\\\"\\r\\n        >\\r\\n          <kkl-typography [bold]=\\\"600\\\" [size]=\\\"1.2\\\">\\r\\n            {{ column.label }}\\r\\n          </kkl-typography>\\r\\n        </mat-header-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- COLUMN CELL SECTION-->\\r\\n\\r\\n      <mat-cell\\r\\n        *matCellDef=\\\"let cell; let i = index\\\"\\r\\n        [ngClass]=\\\"{ center: column.center }\\\"\\r\\n        [attr.colspan]=\\\"i\\\"\\r\\n      >\\r\\n        <!-- DEFAULT SECTION-->\\r\\n        <ng-container *ngIf=\\\"!cell.editable\\\">\\r\\n          <ng-container [ngSwitch]=\\\"column.type\\\">\\r\\n            <ng-container *ngSwitchCase=\\\"'custom'\\\">\\r\\n              <ng-container\\r\\n                *ngTemplateOutlet=\\\"\\r\\n                  rowSlots[column.columnDef];\\r\\n                  context: { cell: this.cell, column: this.column }\\r\\n                \\\"\\r\\n              >\\r\\n              </ng-container>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container *ngSwitchCase=\\\"'actions'\\\">\\r\\n              <ng-container\\r\\n                *ngTemplateOutlet=\\\"\\r\\n                  rowSlots['actions'];\\r\\n                  context: { cell: this.cell, column: this.column }\\r\\n                \\\"\\r\\n              >\\r\\n              </ng-container>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container *ngSwitchDefault>\\r\\n              <kkl-typography>\\r\\n                {{ cell.item[column.columnDef] | format: type }}\\r\\n              </kkl-typography>\\r\\n            </ng-container>\\r\\n          </ng-container>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- FORM SECTION-->\\r\\n        <ng-container *ngIf=\\\"cell.editable\\\">\\r\\n          <ng-container [ngSwitch]=\\\"column.type\\\">\\r\\n            <ng-container *ngSwitchDefault>\\r\\n              <div class=\\\"cell-input\\\">\\r\\n                <app-column-form\\r\\n                  *ngIf=\\\"column?.question\\\"\\r\\n                  [control]=\\\"cell.formGroup.controls[column.columnDef]\\\"\\r\\n                  [question]=\\\"column?.question\\\"\\r\\n                ></app-column-form>\\r\\n              </div>\\r\\n            </ng-container>\\r\\n            <ng-container *ngSwitchCase=\\\"'actions'\\\">\\r\\n              <ng-container\\r\\n                *ngTemplateOutlet=\\\"\\r\\n                  rowSlots['actions'];\\r\\n                  context: { cell: this.cell, column: this.column }\\r\\n                \\\"\\r\\n              >\\r\\n              </ng-container>\\r\\n            </ng-container>\\r\\n          </ng-container>\\r\\n        </ng-container>\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <mat-header-row\\r\\n      [ngClass]=\\\"[theme]\\\"\\r\\n      *matHeaderRowDef=\\\"columnDefs\\\"\\r\\n    ></mat-header-row>\\r\\n\\r\\n    <mat-row\\r\\n      *matRowDef=\\\"let row; columns: columnDefs\\\"\\r\\n      (click)=\\\"onRowClicked(row)\\\"\\r\\n    ></mat-row>\\r\\n  </mat-table>\\r\\n\\r\\n  <app-pagination [pagination]=\\\"pagination\\\"></app-pagination>\\r\\n</div>\\r\\n\";","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { moduleMetadata, Story, Meta } from '@storybook/angular';\\r\\nimport { CommonModule } from '@angular/common';\\r\\nimport {MaterialModule} from \\\"../material/material.module\\\";\\r\\nimport {BrowserAnimationsModule} from \\\"@angular/platform-browser/animations\\\";\\r\\nimport {ExpandPanelComponent} from '../app/components/expand-panel/expand-panel.component';\\r\\nimport { IconComponent } from '../app/components/icon/icon.component';\\r\\nimport { TypographyComponent } from '../app/components/typography/typography.component';\\r\\nimport { ClassesDirective } from '../app/utilities/directives/classes.directive';\\r\\n\\r\\nexport default {\\r\\n  title: 'Expanding Panel',\\r\\n  component: ExpandPanelComponent,\\r\\n  decorators: [\\r\\n    moduleMetadata({\\r\\n      declarations: [IconComponent,TypographyComponent,ClassesDirective],\\r\\n      imports: [CommonModule, MaterialModule, BrowserAnimationsModule],\\r\\n    }),\\r\\n  ],\\r\\n} as Meta;\\r\\n\\r\\nconst Template: Story<ExpandPanelComponent> = (args: ExpandPanelComponent) => ({\\r\\n  props: args,\\r\\n  template: `<app-expand-panel>\\r\\n  <kkl-typography bold=\\\"600\\\" title>example</kkl-typography>\\r\\n  <p content>example</p>\\r\\n  </app-expand-panel>`\\r\\n});\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\nDefault.args = {\\r\\n};\\r\\n\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":46,\"line\":21},\"endLoc\":{\"col\":2,\"line\":27},\"startBody\":{\"col\":46,\"line\":21},\"endBody\":{\"col\":2,\"line\":27}}};\n    \nimport { moduleMetadata, Story, Meta } from '@storybook/angular';\r\nimport { CommonModule } from '@angular/common';\r\nimport {MaterialModule} from \"../material/material.module\";\r\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\r\nimport {ExpandPanelComponent} from '../app/components/expand-panel/expand-panel.component';\r\nimport { IconComponent } from '../app/components/icon/icon.component';\r\nimport { TypographyComponent } from '../app/components/typography/typography.component';\r\nimport { ClassesDirective } from '../app/utilities/directives/classes.directive';\r\n\r\nexport default {\r\n  title: 'Expanding Panel',\r\n  component: ExpandPanelComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [IconComponent,TypographyComponent,ClassesDirective],\r\n      imports: [CommonModule, MaterialModule, BrowserAnimationsModule],\r\n    }),\r\n  ],\r\n} as Meta;\r\n\r\nconst Template: Story<ExpandPanelComponent> = (args: ExpandPanelComponent) => ({\r\n  props: args,\r\n  template: `<app-expand-panel>\r\n  <kkl-typography bold=\"600\" title>example</kkl-typography>\r\n  <p content>example</p>\r\n  </app-expand-panel>`\r\n});\r\n\r\nexport const Default = Template.bind({});\r\nDefault.args = {\r\n};\r\n\r\n\n\n\nDefault.parameters = { storySource: { source: \"(args: ExpandPanelComponent) => ({\\r\\n  props: args,\\r\\n  template: `<app-expand-panel>\\r\\n  <kkl-typography bold=\\\"600\\\" title>example</kkl-typography>\\r\\n  <p content>example</p>\\r\\n  </app-expand-panel>`\\r\\n})\" }, ...Default.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { moduleMetadata, Story, Meta } from '@storybook/angular';\\r\\nimport { CommonModule } from '@angular/common';\\r\\nimport { TypographyComponent } from \\\"../app/components/typography/typography.component\\\";\\r\\nimport { MaterialModule } from \\\"../material/material.module\\\";\\r\\nimport { ClassesDirective } from '../app/utilities/directives/classes.directive';\\r\\n\\r\\nexport default {\\r\\n  title: 'Typography',\\r\\n  component: TypographyComponent,\\r\\n\\r\\n  decorators: [\\r\\n    moduleMetadata({\\r\\n      declarations: [TypographyComponent, ClassesDirective],\\r\\n      imports: [CommonModule, MaterialModule],\\r\\n    }),\\r\\n  ],\\r\\n} as Meta;\\r\\n\\r\\nconst Template: Story<TypographyComponent> = (args: TypographyComponent) => ({\\r\\n  props: args,\\r\\n  template: `<kkl-typography ${Object.keys(args).reduce((acc, key) => `${acc} [${key}]='${typeof args[key] === 'object' ? JSON.stringify(args[key]) : args[key]}'`, '')} > Hello World </kkl-typography>`\\r\\n});\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\nDefault.args = {\\r\\n};\\r\\n\\r\\nexport const Title = Template.bind({});\\r\\nTitle.args = {\\r\\n  size: 16,\\r\\n  bold: 600,\\r\\n  classes: {\\r\\n    fontSize: 16,\\r\\n    fontWeight: 600,\\r\\n    color: 'primary',\\r\\n  }\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":45,\"line\":19},\"endLoc\":{\"col\":2,\"line\":22},\"startBody\":{\"col\":45,\"line\":19},\"endBody\":{\"col\":2,\"line\":22}},\"Title\":{\"startLoc\":{\"col\":45,\"line\":19},\"endLoc\":{\"col\":2,\"line\":22},\"startBody\":{\"col\":45,\"line\":19},\"endBody\":{\"col\":2,\"line\":22}}};\n    \nimport { moduleMetadata, Story, Meta } from '@storybook/angular';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TypographyComponent } from \"../app/components/typography/typography.component\";\r\nimport { MaterialModule } from \"../material/material.module\";\r\nimport { ClassesDirective } from '../app/utilities/directives/classes.directive';\r\n\r\nexport default {\r\n  title: 'Typography',\r\n  component: TypographyComponent,\r\n\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [TypographyComponent, ClassesDirective],\r\n      imports: [CommonModule, MaterialModule],\r\n    }),\r\n  ],\r\n} as Meta;\r\n\r\nconst Template: Story<TypographyComponent> = (args: TypographyComponent) => ({\r\n  props: args,\r\n  template: `<kkl-typography ${Object.keys(args).reduce((acc, key) => `${acc} [${key}]='${typeof args[key] === 'object' ? JSON.stringify(args[key]) : args[key]}'`, '')} > Hello World </kkl-typography>`\r\n});\r\n\r\nexport const Default = Template.bind({});;\r\nDefault.args = {\r\n};\r\n\r\nexport const Title = Template.bind({});\r\nTitle.args = {\r\n  size: 16,\r\n  bold: 600,\r\n  classes: {\r\n    fontSize: 16,\r\n    fontWeight: 600,\r\n    color: 'primary',\r\n  }\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"(args: TypographyComponent) => ({\\r\\n  props: args,\\r\\n  template: `<kkl-typography ${Object.keys(args).reduce((acc, key) => `${acc} [${key}]='${typeof args[key] === 'object' ? JSON.stringify(args[key]) : args[key]}'`, '')} > Hello World </kkl-typography>`\\r\\n})\" }, ...Default.parameters };\nTitle.parameters = { storySource: { source: \"(args: TypographyComponent) => ({\\r\\n  props: args,\\r\\n  template: `<kkl-typography ${Object.keys(args).reduce((acc, key) => `${acc} [${key}]='${typeof args[key] === 'object' ? JSON.stringify(args[key]) : args[key]}'`, '')} > Hello World </kkl-typography>`\\r\\n})\" }, ...Title.parameters };","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { Classes } from '../../utilities/directives/classes.directive';\r\nimport { Palette } from '../../../styles/theme';\r\nimport { TypographyService } from './typography.service';\r\n\r\n@Component({\r\n  selector: 'kkl-typography',\r\n  template: (require('./typography.component.html').default || require('./typography.component.html')).length ? (require('./typography.component.html').default || require('./typography.component.html')) : '',\r\n  styles: [(require('./typography.component.scss').default || require('./typography.component.scss')).length ? (require('./typography.component.scss').default || require('./typography.component.scss')) : ''],\r\n})\r\nexport class TypographyComponent implements OnInit {\r\n\r\n  @Input() color: Palette;\r\n  @Input() size: number;\r\n  @Input() bold: number;\r\n  @Input() button: boolean;\r\n\r\n  @Input() classes: Classes\r\n  @Input() activeClasses: Classes;\r\n\r\n  @Input() active$: Observable<boolean>;\r\n\r\n  private unsubscribe: Subscription;\r\n\r\n  public classes$: Observable<Classes>\r\n\r\n\r\n  constructor(\r\n    private typographyService: TypographyService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.seFontSize();\r\n    this.setFontWeight();\r\n    this.setClasses();\r\n    this.classes$ = this.typographyService.getClasses()\r\n    this.subscribeToActive();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.unsubscribe) {\r\n      this.unsubscribe.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private seFontSize() {\r\n    this.size = this.size || 1.4;\r\n  }\r\n\r\n  private setFontWeight() {\r\n    this.bold = this.bold || 500;\r\n  }\r\n\r\n  private setClasses() {\r\n    this.classes = this.classes || {\r\n      fontSize: this.size || 1.4,\r\n      fontWeight: this.bold | 500,\r\n      color: this.color || 'text',\r\n      cursor: this.button ? 'pointer' : 'initial'\r\n    };\r\n    this.typographyService.setClasses(this.classes)\r\n  }\r\n\r\n  private subscribeToActive() {\r\n    if (this.active$) {\r\n      this.unsubscribe = this.active$.subscribe((active) => {\r\n        active\r\n          ? this.typographyService.updateClasses(this.activeClasses)\r\n          : this.typographyService.updateClasses(this.classes)\r\n\r\n      });\r\n    }\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":""}