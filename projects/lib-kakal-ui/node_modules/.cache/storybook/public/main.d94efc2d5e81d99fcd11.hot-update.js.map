{"version":3,"file":"main.d94efc2d5e81d99fcd11.hot-update.js","mappings":";;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;ACAA;AAEA;AAOA;AASA;AAFA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAtBA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAPA;AALA;AACA;AACA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;;;;;;;;;ACTA;AACA;AAQA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAYA;AATA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AASA;AAAA;AAAA;AAAA;AAbA;AALA;AACA;AACA;AACA;AACA;AACA;AAAA","sources":["webpack://lib-kakal-ui/./src/lib/app/components/menu/menu.component.html","webpack://lib-kakal-ui/./src/lib/app/components/menu-item/menu-item.component.ts","webpack://lib-kakal-ui/./src/lib/app/components/menu/menu.component.ts"],"sourcesContent":["export default \"<div class=\\\"links themed-element\\\" [dir]=\\\"'rtl'\\\">\\r\\n  <app-card-user></app-card-user>\\r\\n  <mat-accordion class=\\\"menu\\\">\\r\\n    <mat-expansion-panel\\r\\n      class=\\\"mat-elevation-z0\\\"\\r\\n      *ngFor=\\\"let list of menu; let i = index\\\"\\r\\n    >\\r\\n      <mat-expansion-panel-header *ngIf=\\\"list.label\\\">\\r\\n        <div mat-subheader>\\r\\n          <kkl-typography variant=\\\"button\\\" color=\\\"primary\\\" [bold]=\\\"600\\\">\\r\\n            {{ list.label }}\\r\\n          </kkl-typography>\\r\\n        </div>\\r\\n      </mat-expansion-panel-header>\\r\\n      <mat-list>\\r\\n        <kkl-menu-item\\r\\n          *ngFor=\\\"let link of list?.links; let i = index\\\"\\r\\n          [link]=\\\"link\\\"\\r\\n          (click)=\\\"onLinkClick(link, list.prefix)\\\"\\r\\n        ></kkl-menu-item>\\r\\n      </mat-list>\\r\\n    </mat-expansion-panel>\\r\\n  </mat-accordion>\\r\\n  <mat-list>\\r\\n    <mat-list-item appButton>\\r\\n      <mat-icon color=\\\"primary\\\" mat-list-icon>{{ logoutItem.svgUrl }}</mat-icon>\\r\\n      <div class=\\\"logout\\\" mat-line>\\r\\n        <kkl-typography variant=\\\"button\\\" color=\\\"primary\\\" [bold]=\\\"600\\\">\\r\\n          {{ logoutItem.label }}\\r\\n        </kkl-typography>\\r\\n      </div>\\r\\n    </mat-list-item>\\r\\n  </mat-list>\\r\\n</div>\\r\\n\";","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { MenuItemModel } from './menu-item.model';\r\n\r\n@Component({\r\n  selector: 'kkl-menu-item',\r\n  template: (require('./menu-item.component.html').default || require('./menu-item.component.html')).length ? (require('./menu-item.component.html').default || require('./menu-item.component.html')) : '',\r\n  styles: [(require('./menu-item.component.scss').default || require('./menu-item.component.scss')).length ? (require('./menu-item.component.scss').default || require('./menu-item.component.scss')) : '']\r\n})\r\nexport class MenuItemComponent implements OnInit {\r\n\r\n  @Input() public link: MenuItemModel;\r\n\r\n  public active$: Observable<boolean>;\r\n  private isActive: boolean;\r\n\r\n  @Output() click: EventEmitter<void> = new EventEmitter();\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.active$ = this.link.getActiveObs();\r\n  }\r\n\r\n  public onLinkClick() {\r\n    this.click.emit();\r\n  }\r\n\r\n  private subscribeToActive() {\r\n    this.active$.subscribe((active: boolean) => {\r\n      this.isActive = active;\r\n    });\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { MenuItemModel } from '../menu-item/menu-item.model';\r\nimport { MenuModel } from './menu.model';\r\n\r\n@Component({\r\n  selector: 'kkl-menu',\r\n  template: (require('./menu.component.html').default || require('./menu.component.html')).length ? (require('./menu.component.html').default || require('./menu.component.html')) : '',\r\n  styles: [(require('./menu.component.scss').default || require('./menu.component.scss')).length ? (require('./menu.component.scss').default || require('./menu.component.scss')) : ''],\r\n})\r\nexport class MenuComponent {\r\n\r\n  @Input() public masterPrefix: string\r\n  @Input() public menu: MenuModel[];\r\n  @Input() public hasLogin: boolean = true\r\n\r\n  public logoutItem: MenuItemModel = new MenuItemModel({\r\n    label: 'יציאה',\r\n    isActive: false,\r\n    path: '',\r\n    svgUrl: 'logout',\r\n  });\r\n\r\n  @Output() changePath: EventEmitter<{ path: string, link: string }> = new EventEmitter();\r\n\r\n\r\n  // UPDATE METHOD WHEN CLICK ON STEP\r\n  public onLinkClick(item: MenuItemModel, modulePrefix: string) {\r\n\r\n    if (!item.isActive) {\r\n      const url = `${this.masterPrefix}/${modulePrefix}`;\r\n      const link = item.path !== modulePrefix ? `${url}/${item.path}` : url;\r\n      this.changePath.emit({ link, path: item.path })\r\n    }\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":""}