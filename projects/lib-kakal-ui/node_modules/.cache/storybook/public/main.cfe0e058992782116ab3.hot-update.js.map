{"version":3,"file":"main.cfe0e058992782116ab3.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAQA;AACA;AACA;AACA;AAOA;AAuBA;AACA;AACA;AACA;AACA;AA1BA;AASA;AACA;AACA;AACA;AAIA;AACA;AAUA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAzIA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AALA;AALA;AACA;AACA;AACA;AACA;AAyBA;AAxBA;AAAA","sources":["webpack://lib-kakal-ui/./src/lib/app/examples/layout-ex/layout-ex.component.ts"],"sourcesContent":["import { Component, Inject, Input, OnInit } from '@angular/core';\r\nimport { Subscription, Observable, of } from 'rxjs';\r\nimport { distinctUntilChanged, map, switchMap } from 'rxjs/operators';\r\nimport {\r\n  CardStepModel,\r\n  StepperDirection,\r\n} from '../../components/cards/card-step/card-step.model';\r\nimport { IconModel } from '../../components/icon/icon.model';\r\nimport { MenuModel } from '../../components/menu/menu.model';\r\nimport { MenuService } from '../../components/menu/menu.service';\r\nimport { NavbarService } from '../../components/navbar/navbar.service';\r\nimport { LayoutService } from '../../screens/layout/layout.service';\r\nimport { RouterService } from '../../utilities/services/route.service';\r\n\r\n@Component({\r\n  selector: 'app-layout-ex',\r\n  template: (require('./layout-ex.component.html').default || require('./layout-ex.component.html')).length ? (require('./layout-ex.component.html').default || require('./layout-ex.component.html')) : '',\r\n  styles: [(require('./layout-ex.component.scss').default || require('./layout-ex.component.scss')).length ? (require('./layout-ex.component.scss').default || require('./layout-ex.component.scss')) : ''],\r\n})\r\nexport class LayoutExComponent implements OnInit {\r\n  @Input() public projectPrefix: string = '';\r\n  @Input() public logos: IconModel[];\r\n  @Input() public status: CardStepModel[];\r\n  @Input() public steps: CardStepModel[];\r\n  @Input() public menu: MenuModel[];\r\n\r\n  // path subs\r\n  private pathSubscription: Subscription;\r\n\r\n  // NAVBAR SECTION\r\n  private headers = { lands: 'מקרקעין', neches: 'מנהלת ספר נכסים' };\r\n  public openIcon: string = 'treegradientlands';\r\n  public showStatusPath: string[] = [this.projectPrefix, 'screen-layout--with-wizard'];\r\n\r\n  // WIZARD SECTION\r\n  public steps$: Observable<CardStepModel[]>;\r\n  public direction: StepperDirection = 'column';\r\n  public hideWizardPath: string[] = ['results', this.projectPrefix];\r\n\r\n  // MENU SECTION\r\n  public menu$: Observable<MenuModel[]>;\r\n\r\n  constructor(\r\n    private menuService: MenuService,\r\n    private navbarService: NavbarService,\r\n    private layoutService: LayoutService,\r\n    private routerService: RouterService\r\n  ) {}\r\n\r\n  // ROUTE METHODS SECTION\r\n  private setCurrentPath() {\r\n    // const path = this.routerService.getCurrentPath();\r\n    // this.layoutService.emitCurrentPath(path);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setCurrentPath();\r\n    this.setNavbar();\r\n    // this.steps$ = this.setWizard();\r\n    // this.menu$ = this.setMenu();\r\n\r\n    if (this.steps) {\r\n      this.steps$ = of(this.steps);\r\n    }\r\n    if (this.menu) {\r\n      this.menu$ = of(this.menu);\r\n    }\r\n    this.subscribeToRouter();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.pathSubscription) {\r\n      this.pathSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private setNavbar() {\r\n    this.navbarService.setHeaders(this.headers);\r\n\r\n    if (this.status) {\r\n      this.navbarService.emitStatus(this.status);\r\n    }\r\n\r\n    this.navbarService.setHeadersObs(of('lands'));\r\n    this.logos = this.logos;\r\n  }\r\n\r\n  private setHeaders() {\r\n    // return this.routerService.getModulePrefixObs().pipe(\r\n    //   distinctUntilChanged(),\r\n    //   map((path: string) => this.headers[path])\r\n    // );\r\n  }\r\n\r\n  private subscribeToRouter() {\r\n    // this.pathSubscription = this.routerService\r\n    //   .getLastPathObs()\r\n    //   .subscribe((path: string) => {\r\n    //     path === this.projectPrefix && this.navbarService.emitTitle(path);\r\n    //     this.layoutService.emitCurrentPath(path);\r\n    //     this.routerService.currentPath$.next(path);\r\n    //   });\r\n  }\r\n\r\n  private setWizard() {\r\n    // return this.routerService.getModulePrefixObs().pipe(\r\n    //   map((path: string) => {\r\n    //     const steps = this.steps;\r\n    //     steps.map((step) => {\r\n    //       if (step.isActive) {\r\n    //         step.unactive();\r\n    //       }\r\n    //       if (step.path === path) {\r\n    //         step.active();\r\n    //       }\r\n    //     });\r\n    //     return steps;\r\n    //   })\r\n    // );\r\n  }\r\n\r\n  private setMenu() {\r\n    // const modulePath$ = this.routerService.getModulePrefixObs();\r\n    // const lastPath$ = this.layoutService.getCurrentPathObs();\r\n    // return modulePath$.pipe(\r\n    //   switchMap((modulePath: string) => {\r\n    //     return lastPath$.pipe(\r\n    //       map((path: string) => {\r\n    //         const menu = this.menuService.setMenu(\r\n    //           this.menu,\r\n    //           modulePath,\r\n    //           'path',\r\n    //           path\r\n    //         );\r\n    //         return menu;\r\n    //       })\r\n    //     );\r\n    //   })\r\n    // );\r\n    // return path$.pipe(\r\n    //   // distinctUntilChanged(),\r\n    //   map((path: string) => {\r\n    //     console.log(path)\r\n    //     return this.menuService.setList(this.menuService.getMenu(), 'path', path);\r\n    //   })\r\n    // )\r\n  }\r\n\r\n  public onChangeModule(step: CardStepModel) {\r\n    // const path: string = `${this.projectPrefix}/${step.path}`;\r\n    // this.routerService.navigate(path);\r\n  }\r\n\r\n  public onChangeMenu(path: string) {\r\n    // path = `${this.projectPrefix}/${path}`;\r\n    // this.routerService.navigate(path);\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":""}