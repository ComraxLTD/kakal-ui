{"version":3,"file":"main.51ed94ca9ad927c6e270.hot-update.js","mappings":";;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;ACAA;AAOA;AAQA;AAWA;AAFA;AAEA;AAEA;AACA;AACA;AACA;AAdA;AAAA;;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;;AAAA;AATA;AALA;AACA;AACA;AACA;AACA;;AACA;AAAA","sources":["webpack://lib-kakal-ui/./src/lib/app/examples/stepper-ex/stepper-ex.component.html","webpack://lib-kakal-ui/./src/lib/app/components/stepper/stepper.component.ts"],"sourcesContent":["export default \"<div *ngIf=\\\"direction === 'row'\\\" class=\\\"container\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" dir=\\\"rtl\\\" fxFill>\\r\\n    <div fxFlex=\\\"20\\\">\\r\\n      <kkl-stepper (changStep)=\\\"onStepChange($event)\\\" [steps]=\\\"steps\\\" [direction]=\\\"direction\\\"></kkl-stepper>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"direction === 'column'\\\" class=\\\"wizard\\\">\\r\\n    <kkl-stepper\\r\\n      (changStep)=\\\"onStepChange($event)\\\"\\r\\n      [steps]=\\\"steps\\\"\\r\\n      [direction]=\\\"direction\\\"\\r\\n    ></kkl-stepper>\\r\\n  </div>\\r\\n\";","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ElementRef,\r\n} from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { CardStepModel } from '../cards/card-step/card-step.model';\r\n\r\n@Component({\r\n  selector: 'kkl-stepper',\r\n  template: (require('./stepper.component.html').default || require('./stepper.component.html')).length ? (require('./stepper.component.html').default || require('./stepper.component.html')) : '',\r\n  styles: [(require('./stepper.component.scss').default || require('./stepper.component.scss')).length ? (require('./stepper.component.scss').default || require('./stepper.component.scss')) : ''],\r\n})\r\nexport class StepperComponent {\r\n\r\n  @Input() steps: CardStepModel[];\r\n\r\n  @Input() steps$: Observable<CardStepModel[]>;\r\n\r\n  @Input() direction: string;\r\n  @Input() stepRef: ElementRef;\r\n\r\n  @Output() changStep = new EventEmitter<CardStepModel>();\r\n\r\n  constructor() { }\r\n\r\n  public onStepChange(step: CardStepModel) {\r\n    this.changStep.emit(step);\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":""}