{"version":3,"file":"main.91ca6ebed70379b4256f.hot-update.js","mappings":";;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;;;;;;;;;;;;;;;;;;ACzFA;AAGA;AAOA;AAWA;AACA;AAHA;AAIA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAIA;AAAA;AAAA;AAAA;AATA;AALA;AACA;AACA;AACA;AACA;AAaA;AAZA;AAAA","sources":["webpack://lib-kakal-ui/./src/lib/app/screens/dashboard/dashboard.component.scss","webpack://lib-kakal-ui/./src/lib/app/screens/dashboard/dashboard.component.html","webpack://lib-kakal-ui/./src/lib/stories/Dashboard.stories.ts","webpack://lib-kakal-ui/./src/lib/app/screens/dashboard/dashboard.component.ts"],"sourcesContent":["export default \"* {\\n  font-family: \\\"open sans hebrew\\\" !important;\\n  src: url(\\\"../assets/fonts/opanSansHebrew/OpenSansHebrew-Regular.ttf\\\") format(\\\"opentype\\\") !important;\\n}\\n\\nhtml,\\nbody,\\napp-root,\\n#root {\\n  height: 100%;\\n  box-sizing: border-box;\\n  font-size: 10px;\\n}\\n\\nbody {\\n  margin: 0;\\n  padding: 0;\\n  font-family: \\\"open sans hebrew\\\", \\\"Helvetica Neue\\\", sans-serif;\\n  src: url(\\\"../assets/fonts/opanSansHebrew/OpenSansHebrew-Regular.ttf\\\") format(\\\"opentype\\\") !important;\\n  box-sizing: border-box;\\n}\\n\\n::ng-deep mat-grid-list,\\nmat-grid-tile {\\n  height: 100%;\\n  width: 100%;\\n}\\n\\n.material-icons {\\n  font-family: \\\"Material Icons\\\" !important;\\n}\\n\\n@media screen and (max-width: 1280px) {\\n  html {\\n    font-size: 8px;\\n  }\\n}\\n/* iPads (landscape) ----------- */\\n@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation: landscape) {\\n  html {\\n    font-size: 8px;\\n  }\\n}\\n/* iPads (portrait) ----------- */\\n@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation: portrait) {\\n  html {\\n    font-size: 10px;\\n  }\\n}\\n:host {\\n  width: 100%;\\n  height: 100%;\\n}\\n\\ndiv {\\n  height: calc(100% - 10rem);\\n}\\n\\ndiv.container {\\n  height: inherit;\\n  width: 40%;\\n}\\n\\nkkl-dashboard-card {\\n  width: 100;\\n  height: 100%;\\n}\";","export default \"<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n  <div\\r\\n    class=\\\"container\\\"\\r\\n    fxLayout=\\\"column\\\"\\r\\n    fxLayoutAlign=\\\"center center\\\"\\r\\n    [ngStyle]=\\\"{ 'width.rem': width || 80 }\\\"\\r\\n  >\\r\\n    <div fxFlex=\\\"8\\\" *ngIf=\\\"moduleTitle\\\">\\r\\n      <kkl-typography [bold]=\\\"600\\\" [size]=\\\"3\\\">{{ moduleTitle }}</kkl-typography>\\r\\n    </div>\\r\\n    <mat-grid-list\\r\\n      [cols]=\\\"cards.length / 2\\\"\\r\\n      [rowHeight]=\\\"((md$ | async) ? 16 : 24) + 'rem'\\\"\\r\\n      gutterSize=\\\"4rem\\\"\\r\\n      [dir]=\\\"'rtl'\\\"\\r\\n    >\\r\\n      <ng-container *ngFor=\\\"let card of cards; let i = index\\\">\\r\\n        <mat-grid-tile>\\r\\n          <div\\r\\n            appSize\\r\\n            [size]=\\\"(md$ | async) ? 16 : 24\\\"\\r\\n            (click)=\\\"onCardClick(card)\\\"\\r\\n          >\\r\\n            <kkl-card-dashboard [card]=\\\"card\\\"> </kkl-card-dashboard>\\r\\n          </div>\\r\\n        </mat-grid-tile>\\r\\n      </ng-container>\\r\\n    </mat-grid-list>\\r\\n  </div>\\r\\n</div>\\r\\n\";","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { CardDashboardModel } from './../app/components/cards/card-dashboard/card-dashboard.model';\\r\\nimport { moduleMetadata, Story, Meta } from '@storybook/angular';\\r\\nimport { CommonModule } from '@angular/common';\\r\\nimport { MaterialModule } from '../material/material.module';\\r\\n\\r\\nimport { SizeDirective } from '../app/utilities/directives/size.directive';\\r\\nimport { IconComponent } from '../app/components/icon/icon.component';\\r\\nimport { ClassesDirective } from '../app/utilities/directives/classes.directive';\\r\\nimport { VariantDirective } from '../app/utilities/directives/variant.directive';\\r\\nimport { TypographyComponent } from '../app/components/typography/typography.component';\\r\\nimport { ButtonDirective } from '../app/utilities/directives/button.directive';\\r\\nimport { ColorDirective } from '../app/utilities/directives/color.directive';\\r\\nimport { DashboardExComponent } from '../app/examples/dashboard-ex/dashboard-ex.component';\\r\\nimport { CardDashboardComponent } from '../app/components/cards/card-dashboard/card-dashboard.component';\\r\\nimport { BreakpointService } from '../app/utilities/services/breakpoint.service';\\r\\nimport { DashboardComponent } from '../app/screens/dashboard/dashboard.component';\\r\\n\\r\\nexport default {\\r\\n  title: 'Dashboard',\\r\\n  component: DashboardExComponent,\\r\\n  decorators: [\\r\\n    moduleMetadata({\\r\\n      declarations: [\\r\\n        IconComponent,\\r\\n        TypographyComponent,\\r\\n\\r\\n        DashboardExComponent,\\r\\n        DashboardComponent,\\r\\n        CardDashboardComponent,\\r\\n\\r\\n        SizeDirective,\\r\\n        VariantDirective,\\r\\n        ClassesDirective,\\r\\n        ButtonDirective,\\r\\n        ColorDirective,\\r\\n      ],\\r\\n\\r\\n      providers : [BreakpointService],\\r\\n      imports: [CommonModule, MaterialModule],\\r\\n    }),\\r\\n  ],\\r\\n} as Meta;\\r\\n\\r\\nconst Template: Story<DashboardExComponent> = (args: DashboardExComponent) => ({\\r\\n  props: args,\\r\\n});\\r\\n\\r\\nexport const Dashboard = Template.bind({});\\r\\n\\r\\nDashboard.args = {\\r\\n  cards: [\\r\\n    new CardDashboardModel({\\r\\n      label: 'פירוט הנכס',\\r\\n      svgUrl: 'home',\\r\\n      path: 'details',\\r\\n    }),\\r\\n    new CardDashboardModel({\\r\\n      label: 'תנועות',\\r\\n      svgUrl: 'list',\\r\\n      path: 'movements',\\r\\n    }),\\r\\n    new CardDashboardModel({\\r\\n      label: 'עסקאות',\\r\\n      svgUrl: 'transactions',\\r\\n      path: 'transactions',\\r\\n    }),\\r\\n    new CardDashboardModel({\\r\\n      label: 'תתי חלקה',\\r\\n      svgUrl: 'building',\\r\\n      path: 'subdivision',\\r\\n    }),\\r\\n    new CardDashboardModel({\\r\\n      label: 'פרצליציה',\\r\\n      svgUrl: 'add',\\r\\n      path: 'subdivision',\\r\\n    }),\\r\\n  ],\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Dashboard\":{\"startLoc\":{\"col\":46,\"line\":44},\"endLoc\":{\"col\":2,\"line\":46},\"startBody\":{\"col\":46,\"line\":44},\"endBody\":{\"col\":2,\"line\":46}}};\n    \nimport { CardDashboardModel } from './../app/components/cards/card-dashboard/card-dashboard.model';\r\nimport { moduleMetadata, Story, Meta } from '@storybook/angular';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MaterialModule } from '../material/material.module';\r\n\r\nimport { SizeDirective } from '../app/utilities/directives/size.directive';\r\nimport { IconComponent } from '../app/components/icon/icon.component';\r\nimport { ClassesDirective } from '../app/utilities/directives/classes.directive';\r\nimport { VariantDirective } from '../app/utilities/directives/variant.directive';\r\nimport { TypographyComponent } from '../app/components/typography/typography.component';\r\nimport { ButtonDirective } from '../app/utilities/directives/button.directive';\r\nimport { ColorDirective } from '../app/utilities/directives/color.directive';\r\nimport { DashboardExComponent } from '../app/examples/dashboard-ex/dashboard-ex.component';\r\nimport { CardDashboardComponent } from '../app/components/cards/card-dashboard/card-dashboard.component';\r\nimport { BreakpointService } from '../app/utilities/services/breakpoint.service';\r\nimport { DashboardComponent } from '../app/screens/dashboard/dashboard.component';\r\n\r\nexport default {\r\n  title: 'Dashboard',\r\n  component: DashboardExComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [\r\n        IconComponent,\r\n        TypographyComponent,\r\n\r\n        DashboardExComponent,\r\n        DashboardComponent,\r\n        CardDashboardComponent,\r\n\r\n        SizeDirective,\r\n        VariantDirective,\r\n        ClassesDirective,\r\n        ButtonDirective,\r\n        ColorDirective,\r\n      ],\r\n\r\n      providers : [BreakpointService],\r\n      imports: [CommonModule, MaterialModule],\r\n    }),\r\n  ],\r\n} as Meta;\r\n\r\nconst Template: Story<DashboardExComponent> = (args: DashboardExComponent) => ({\r\n  props: args,\r\n});\r\n\r\nexport const Dashboard = Template.bind({});\r\n\r\nDashboard.args = {\r\n  cards: [\r\n    new CardDashboardModel({\r\n      label: 'פירוט הנכס',\r\n      svgUrl: 'home',\r\n      path: 'details',\r\n    }),\r\n    new CardDashboardModel({\r\n      label: 'תנועות',\r\n      svgUrl: 'list',\r\n      path: 'movements',\r\n    }),\r\n    new CardDashboardModel({\r\n      label: 'עסקאות',\r\n      svgUrl: 'transactions',\r\n      path: 'transactions',\r\n    }),\r\n    new CardDashboardModel({\r\n      label: 'תתי חלקה',\r\n      svgUrl: 'building',\r\n      path: 'subdivision',\r\n    }),\r\n    new CardDashboardModel({\r\n      label: 'פרצליציה',\r\n      svgUrl: 'add',\r\n      path: 'subdivision',\r\n    }),\r\n  ],\r\n};\r\n\n\n\nDashboard.parameters = { storySource: { source: \"(args: DashboardExComponent) => ({\\r\\n  props: args,\\r\\n})\" }, ...Dashboard.parameters };","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { CardDashboardModel } from '../../components/cards/card-dashboard/card-dashboard.model';\r\nimport { BreakpointService } from '../../utilities/services/breakpoint.service';\r\n\r\n@Component({\r\n  selector: 'kkl-dashboard',\r\n  template: (require('./dashboard.component.html').default || require('./dashboard.component.html')).length ? (require('./dashboard.component.html').default || require('./dashboard.component.html')) : '',\r\n  styles: [(require('./dashboard.component.scss').default || require('./dashboard.component.scss')).length ? (require('./dashboard.component.scss').default || require('./dashboard.component.scss')) : '']\r\n})\r\nexport class DashboardComponent {\r\n\r\n  @Input() public prefix: string;\r\n  @Input() public width: number;\r\n  @Input() public moduleTitle: string;\r\n  @Input() public cards: CardDashboardModel[];\r\n\r\n  public md$: Observable<boolean>;\r\n\r\n  @Output() cardClick: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  constructor(\r\n    private breakpointService: BreakpointService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.md$ = this.breakpointService.isTablet();\r\n  }\r\n\r\n  public onCardClick(card) {\r\n    if (this.prefix) {\r\n      const path: string = `${this.prefix}/${card.path}`;\r\n      this.cardClick.emit(path)\r\n    }\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":""}