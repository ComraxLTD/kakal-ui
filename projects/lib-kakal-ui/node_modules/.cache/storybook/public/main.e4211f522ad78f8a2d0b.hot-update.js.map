{"version":3,"file":"main.e4211f522ad78f8a2d0b.hot-update.js","mappings":";;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1HA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;;;;;;;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAMA;;;;;;;;;;;;;;;;;;AChCA;AACA;AAMA;AAAA;AAAA;AAHA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;ACPA;AAOA;AAeA;AANA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAnCA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAbA;AALA;AACA;AACA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AAEA;AACA;AAQA;AAcA;AACA;AACA;AAZA;AACA;AACA;AACA;AACA;AACA;AAQA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvDA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAFA;AALA;AACA;AACA;AACA;AACA;AAgBA;AAfA;AAAA;;;;;;;;;;;;;;;;;ACbA;AAQA;AAKA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AAEA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAlEA;AAHA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;;;;;;;ACRA;AAOA;AAUA;AARA;AAIA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAzBA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AARA;AALA;AACA;AACA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;;;;;;;;;ACPA;AACA;AAEA;AASA;AAeA;AANA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAtBA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAMA;AAAA;;AAAA;AAbA;AALA;AACA;AACA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AAKA;AAMA;AAAA;AAAA;AALA;AAGA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AA5DA;AAHA;AACA;AACA;AAOA;AANA;AAAA","sources":["webpack://lib-kakal-ui/./src/lib/app/components/expand-panel/expand-panel.component.scss","webpack://lib-kakal-ui/./src/lib/app/components/expand-panel/expand-panel.component.html","webpack://lib-kakal-ui/./src/lib/app/components/form/form-input/form-input.component.html","webpack://lib-kakal-ui/./src/lib/app/components/menu/menu.component.html","webpack://lib-kakal-ui/./src/lib/app/components/navigation/navbar/navbar.component.html","webpack://lib-kakal-ui/./src/lib/stories/FormInput.stories.ts","webpack://lib-kakal-ui/./src/lib/stories/Menu.stories.ts","webpack://lib-kakal-ui/./src/lib/stories/Navbar.stories.ts","webpack://lib-kakal-ui/./src/lib/stories/Pagination.stories.ts","webpack://lib-kakal-ui/./src/lib/app/app-routing.module.ts","webpack://lib-kakal-ui/./src/lib/app/components/expand-panel/expand-panel.component.ts","webpack://lib-kakal-ui/./src/lib/app/components/menu/menu.component.ts","webpack://lib-kakal-ui/./src/lib/app/components/menu/menu.service.ts","webpack://lib-kakal-ui/./src/lib/app/components/navigation/navbar-bottom/navbar-bottom.component.ts","webpack://lib-kakal-ui/./src/lib/app/components/navigation/navbar/navbar.component.ts","webpack://lib-kakal-ui/./src/lib/app/utilities/services/route.rservice.ts"],"sourcesContent":["export default \"* {\\n  font-family: \\\"open sans hebrew\\\" !important;\\n  src: url(\\\"../assets/fonts/opanSansHebrew/OpenSansHebrew-Regular.ttf\\\") format(\\\"opentype\\\") !important;\\n}\\n\\nhtml,\\nbody,\\napp-root,\\n#root {\\n  height: 100%;\\n  box-sizing: border-box;\\n  font-size: 10px;\\n}\\n\\nbody {\\n  margin: 0;\\n  padding: 0;\\n  font-family: \\\"open sans hebrew\\\", \\\"Helvetica Neue\\\", sans-serif;\\n  src: url(\\\"../assets/fonts/opanSansHebrew/OpenSansHebrew-Regular.ttf\\\") format(\\\"opentype\\\") !important;\\n  box-sizing: border-box;\\n}\\n\\n::ng-deep mat-grid-list,\\nmat-grid-tile {\\n  height: 100%;\\n  width: 100%;\\n}\\n\\n.material-icons {\\n  font-family: \\\"Material Icons\\\" !important;\\n}\\n\\n@media screen and (max-width: 1280px) {\\n  html {\\n    font-size: 8px;\\n  }\\n}\\n/* iPads (landscape) ----------- */\\n@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation: landscape) {\\n  html {\\n    font-size: 8px;\\n  }\\n}\\n/* iPads (portrait) ----------- */\\n@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation: portrait) {\\n  html {\\n    font-size: 10px;\\n  }\\n}\\nmat-expansion-panel {\\n  margin-bottom: 16px !important;\\n}\\n::ng-deep mat-expansion-panel.table .mat-expansion-panel-content,\\n::ng-deep mat-expansion-panel.table .mat-expansion-panel-body {\\n  background-color: #f8f8f8 !important;\\n  padding: 0px !important;\\n}\\nmat-expansion-panel.tour {\\n  border-bottom: 1px solid #d6a348;\\n}\\nmat-expansion-panel.form {\\n  background-color: #fff;\\n  border-radius: 0px !important;\\n}\\n\\n:ng-deep mat-expansion-panel-header {\\n  background-color: inherit !important;\\n}\\n:ng-deep mat-expansion-panel-header.form {\\n  background-color: #d83020 !important;\\n}\\n:ng-deep mat-expansion-panel-header:hover {\\n  background-color: #fff !important;\\n}\\n\\n.content {\\n  font-size: 16px !important;\\n}\\n\\n::ng-deep span.mat-expansion-indicator::after {\\n  color: #d6a348 !important;\\n}\";","export default \"<mat-expansion-panel\\r\\n  dir=\\\"rtl\\\"\\r\\n  [hideToggle]=\\\"hideToggle\\\"\\r\\n  [expanded]=\\\"expanded\\\"\\r\\n  [disabled]=\\\"disabled\\\"\\r\\n  [ngClass]=\\\"[variant, 'default', 'mat-elevation-z0']\\\"\\r\\n  (closed)=\\\"onPanelClosed()\\\"\\r\\n  (opened)=\\\"onPanelOpen()\\\"\\r\\n>\\r\\n  <mat-expansion-panel-header\\r\\n    *ngIf=\\\"!showHeader\\\"\\r\\n    [ngClass]=\\\"[variant]\\\"\\r\\n    (click)=\\\"onPanelExpend()\\\"\\r\\n  >\\r\\n    <mat-panel-title [ngClass]=\\\"[variant, 'default']\\\">\\r\\n      <ng-content select=\\\"[title]\\\"></ng-content>\\r\\n    </mat-panel-title>\\r\\n    <mat-panel-description>\\r\\n      <ng-content select=\\\"[description]\\\"></ng-content>\\r\\n    </mat-panel-description>\\r\\n  </mat-expansion-panel-header>\\r\\n\\r\\n  <div class=\\\"content\\\">\\r\\n    <ng-content select=\\\"[content]\\\"></ng-content>\\r\\n  </div>\\r\\n</mat-expansion-panel>\\r\\n\";","export default \"<div>\\r\\n  <mat-form-field [appearance]=\\\"control.disabled ? 'fill' : 'outline'\\\">\\r\\n    <mat-label>{{ label }}</mat-label>\\r\\n\\r\\n    <ng-container [ngSwitch]=\\\"controlType\\\">\\r\\n      <ng-container *ngSwitchCase=\\\"'textarea'\\\">\\r\\n        <textarea\\r\\n          matInput\\r\\n          [rows]=\\\"gridProps.rows\\\"\\r\\n          [formControl]=\\\"control\\\"\\r\\n          [name]=\\\"question.key\\\"\\r\\n          (focusout)=\\\"validate()\\\"\\r\\n          #textarea\\r\\n        ></textarea\\r\\n        >\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container *ngSwitchCase=\\\"'select'\\\">\\r\\n        <mat-select\\r\\n          [multiple]=\\\"question.multi\\\"\\r\\n          (selectionChange)=\\\"onSelectChange()\\\"\\r\\n          [formControl]=\\\"control\\\"\\r\\n          [name]=\\\"question.key\\\"\\r\\n          required\\r\\n          (focusout)=\\\"validate()\\\"\\r\\n        >\\r\\n          <mat-option *ngFor=\\\"let option of options\\\" [value]=\\\"option.value\\\">\\r\\n            {{ option.label }}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container *ngSwitchCase=\\\"'autocomplete'\\\">\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          matInput\\r\\n          [formControl]=\\\"control\\\"\\r\\n          [matAutocomplete]=\\\"auto\\\"\\r\\n        />\\r\\n        <mat-autocomplete\\r\\n          autoActiveFirstOption\\r\\n          #auto=\\\"matAutocomplete\\\"\\r\\n          (optionSelected)=\\\"onOptionSelected($event)\\\"\\r\\n        >\\r\\n          <mat-option *ngFor=\\\"let option of options\\\" [value]=\\\"option.value\\\">\\r\\n            {{ option.label }}\\r\\n          </mat-option>\\r\\n        </mat-autocomplete>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container *ngSwitchDefault>\\r\\n        <input\\r\\n          matInput\\r\\n          autocomplete=\\\"off\\\"\\r\\n          [formControl]=\\\"control\\\"\\r\\n          [name]=\\\"question.key\\\"\\r\\n          (focusout)=\\\"validate()\\\"\\r\\n          required\\r\\n          #input\\r\\n        />\\r\\n      </ng-container>\\r\\n    </ng-container>\\r\\n\\r\\n    <app-icon\\r\\n      *ngIf=\\\"icon\\\"\\r\\n      matSuffix\\r\\n      [color]=\\\"color || 'primary'\\\"\\r\\n      [key]=\\\"icon\\\"\\r\\n    ></app-icon>\\r\\n\\r\\n    <mat-error>{{ error }}</mat-error>\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"links themed-element\\\" [dir]=\\\"'rtl'\\\">\\r\\n  <app-card-user></app-card-user>\\r\\n  <mat-accordion class=\\\"menu\\\">\\r\\n    <mat-expansion-panel\\r\\n      class=\\\"mat-elevation-z0\\\"\\r\\n      *ngFor=\\\"let list of menu; let i = index\\\"\\r\\n    >\\r\\n      <mat-expansion-panel-header>\\r\\n        <div mat-subheader>\\r\\n          <app-typography variant=\\\"button\\\" color=\\\"primary\\\" [bold]=\\\"600\\\">\\r\\n            {{ list.label }}\\r\\n          </app-typography>\\r\\n        </div>\\r\\n      </mat-expansion-panel-header>\\r\\n      <mat-list>\\r\\n        <app-menu-item\\r\\n          *ngFor=\\\"let link of list?.links; let i = index\\\"\\r\\n          [link]=\\\"link\\\"\\r\\n          (click)=\\\"onLinkClick(link, list.prefix)\\\"\\r\\n        ></app-menu-item>\\r\\n      </mat-list>\\r\\n    </mat-expansion-panel>\\r\\n  </mat-accordion>\\r\\n  <mat-list>\\r\\n    <mat-list-item appButton>\\r\\n      <app-icon color=\\\"primary\\\" mat-list-icon [key]=\\\"logoutItem.svgUrl\\\"></app-icon>\\r\\n      <div class=\\\"logout\\\" mat-line>\\r\\n        <app-typography variant=\\\"button\\\" color=\\\"primary\\\" [bold]=\\\"600\\\">\\r\\n          {{ logoutItem.label }}\\r\\n        </app-typography>\\r\\n      </div>\\r\\n    </mat-list-item>\\r\\n  </mat-list>\\r\\n</div>\\r\\n\";","export default \"<mat-toolbar\\r\\n  dir=\\\"rtl\\\"\\r\\n  class=\\\"navbar mat-elevation-z4\\\"\\r\\n  xLayout=\\\"row\\\"\\r\\n  fxLayoutAlign=\\\"start center\\\"\\r\\n>\\r\\n  <!-- toggle menu button -->\\r\\n  <div\\r\\n    fxLayout=\\\"column\\\"\\r\\n    fxLayoutAlign=\\\"center center\\\"\\r\\n    fxFlex=\\\"5\\\"\\r\\n    appUnderline\\r\\n    appButton\\r\\n    (click)=\\\"toggleMenu()\\\"\\r\\n  >\\r\\n    <div fxFlex=\\\"40\\\">\\r\\n      <app-icon\\r\\n        *ngIf=\\\"!isOpen\\\"\\r\\n        type=\\\"svg\\\"\\r\\n        key=\\\"tree\\\"\\r\\n        color=\\\"primary\\\"\\r\\n        [size]=\\\"4\\\"\\r\\n      ></app-icon>\\r\\n      <app-icon\\r\\n        *ngIf=\\\"isOpen\\\"\\r\\n        type=\\\"svg\\\"\\r\\n        [key]=\\\"openIcon\\\"\\r\\n        color=\\\"primary\\\"\\r\\n        [size]=\\\"4\\\"\\r\\n      ></app-icon>\\r\\n    </div>\\r\\n    <div fxFlex=\\\"10\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n      <app-typography [size]=\\\"1\\\" color=\\\"primary\\\">\\r\\n        {{ isOpen ? closeLabel : openLabel }}\\r\\n      </app-typography>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center start\\\" fxFlex=\\\"10\\\">\\r\\n    <app-typography [size]=\\\"2.4\\\">\\r\\n      {{ (title$ | async) }}\\r\\n    </app-typography>\\r\\n  </div>\\r\\n\\r\\n  <!-- main navbar links -->\\r\\n  <div fxFlex=\\\"grow\\\">\\r\\n    <div class=\\\"status-container\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n      <div fxLayout=\\\"row\\\" *ngFor=\\\"let status of (status$ | async)\\\">\\r\\n        <app-card-status [status]=\\\"status\\\"></app-card-status>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div fxFlex></div>\\r\\n\\r\\n  <!-- left side logo -->\\r\\n  <div\\r\\n    fxLayout=\\\"row\\\"\\r\\n    fxLayoutAlign=\\\"end center\\\"\\r\\n    class=\\\"logo-container\\\"\\r\\n    fxFlex=\\\"10\\\"\\r\\n  >\\r\\n    <div *ngFor=\\\"let logo of logos\\\">\\r\\n      <app-icon [key]=\\\"logo.key\\\" [size]=\\\"logo.size\\\"></app-icon>\\r\\n    </div>\\r\\n  </div>\\r\\n</mat-toolbar>\\r\\n\";","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { moduleMetadata, Story, Meta } from '@storybook/angular';\\r\\nimport { CommonModule } from '@angular/common';\\r\\nimport { FormComponent } from '../app/components/form/form/form.component';\\r\\nimport { MaterialModule } from '../material/material.module';\\r\\nimport { FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\\r\\nimport { FormInputComponent } from '../app/components/form/form-input/form-input.component';\\r\\nimport { FormGroupComponent } from '../app/components/form/form-group/form-group.component';\\r\\nimport { FormRadioComponent } from '../app/components/form/form-radio/form-radio.component';\\r\\nimport { FormService } from '../app/components/form/services/form.service';\\r\\nimport { IconComponent } from '../app/components/icon/icon.component';\\r\\nimport { SizeDirective } from '../app/utilities/directives/size.directive';\\r\\nimport { ColorDirective } from '../app/utilities/directives/color.directive';\\r\\nimport { MessageService } from '../app/components/form/services/message.service';\\r\\nimport { InputExComponent } from '../app/examples/input-ex/input-ex.component';\\r\\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\\r\\n\\r\\nexport default {\\r\\n  title: 'FormInput',\\r\\n  component: InputExComponent,\\r\\n  decorators: [\\r\\n    moduleMetadata({\\r\\n      declarations: [\\r\\n        FormComponent,\\r\\n        FormInputComponent,\\r\\n        FormGroupComponent,\\r\\n        FormRadioComponent,\\r\\n        FormRadioComponent,\\r\\n        IconComponent,\\r\\n        SizeDirective,\\r\\n        ColorDirective,\\r\\n      ],\\r\\n      providers: [FormService, MessageService],\\r\\n      imports: [\\r\\n        MaterialModule,\\r\\n        FormsModule,\\r\\n        ReactiveFormsModule,\\r\\n        CommonModule,\\r\\n        BrowserAnimationsModule,\\r\\n      ],\\r\\n    }),\\r\\n  ],\\r\\n} as Meta;\\r\\n\\r\\nconst Template: Story<InputExComponent> = (args: InputExComponent) => ({\\r\\n  props: args,\\r\\n});\\r\\n\\r\\nexport const Select = Template.bind({});\\r\\nSelect.args = {\\r\\n  questions: [\\r\\n    {\\r\\n      controlType: 'select',\\r\\n      key: 'record',\\r\\n      label: 'סוג רישום',\\r\\n      options: [\\r\\n        { label: 'גוש חלקה', value: 'שם נוסף' },\\r\\n        { label: 'דף ספר', value: 'עוד לקוח' },\\r\\n        { label: 'מגרש', value: 'לקוח מספר שלוש' },\\r\\n        { label: 'גוש שומא', value: 'לקוח מספר ארבע' },\\r\\n      ],\\r\\n      onSelectChange: () => {},\\r\\n    },\\r\\n  ],\\r\\n};\\r\\n\\r\\nexport const SelectMulti = Template.bind({});\\r\\nSelectMulti.args = {\\r\\n  questions: [\\r\\n    {\\r\\n      controlType: 'select',\\r\\n      multi: true,\\r\\n      key: 'record',\\r\\n      label: 'סוג רישום',\\r\\n      options: [\\r\\n        { label: 'גוש חלקה', value: 'שם נוסף' },\\r\\n        { label: 'דף ספר', value: 'עוד לקוח' },\\r\\n        { label: 'מגרש', value: 'לקוח מספר שלוש' },\\r\\n        { label: 'גוש שומא', value: 'לקוח מספר ארבע' },\\r\\n      ],\\r\\n      onSelectChange: () => {},\\r\\n    },\\r\\n  ],\\r\\n};\\r\\n\\r\\nexport const Text = Template.bind({});\\r\\nText.args = {\\r\\n  questions: [\\r\\n    {\\r\\n      controlType: 'text',\\r\\n      key: 'value',\\r\\n      label: 'הכנס טקסט',\\r\\n      validations: [Validators.required],\\r\\n    },\\r\\n  ],\\r\\n};\\r\\nexport const Textarea = Template.bind({});\\r\\nTextarea.args = {\\r\\n  questions: [\\r\\n    {\\r\\n      controlType: 'textarea',\\r\\n      key: 'value',\\r\\n      label: 'הכנס טקסט',\\r\\n      validations: [Validators.required],\\r\\n      gridProps: {\\r\\n        rows: 5,\\r\\n      },\\r\\n    },\\r\\n  ],\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Select\":{\"startLoc\":{\"col\":42,\"line\":44},\"endLoc\":{\"col\":2,\"line\":46},\"startBody\":{\"col\":42,\"line\":44},\"endBody\":{\"col\":2,\"line\":46}},\"SelectMulti\":{\"startLoc\":{\"col\":42,\"line\":44},\"endLoc\":{\"col\":2,\"line\":46},\"startBody\":{\"col\":42,\"line\":44},\"endBody\":{\"col\":2,\"line\":46}},\"Text\":{\"startLoc\":{\"col\":42,\"line\":44},\"endLoc\":{\"col\":2,\"line\":46},\"startBody\":{\"col\":42,\"line\":44},\"endBody\":{\"col\":2,\"line\":46}},\"Textarea\":{\"startLoc\":{\"col\":42,\"line\":44},\"endLoc\":{\"col\":2,\"line\":46},\"startBody\":{\"col\":42,\"line\":44},\"endBody\":{\"col\":2,\"line\":46}}};\n    \nimport { moduleMetadata, Story, Meta } from '@storybook/angular';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormComponent } from '../app/components/form/form/form.component';\r\nimport { MaterialModule } from '../material/material.module';\r\nimport { FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { FormInputComponent } from '../app/components/form/form-input/form-input.component';\r\nimport { FormGroupComponent } from '../app/components/form/form-group/form-group.component';\r\nimport { FormRadioComponent } from '../app/components/form/form-radio/form-radio.component';\r\nimport { FormService } from '../app/components/form/services/form.service';\r\nimport { IconComponent } from '../app/components/icon/icon.component';\r\nimport { SizeDirective } from '../app/utilities/directives/size.directive';\r\nimport { ColorDirective } from '../app/utilities/directives/color.directive';\r\nimport { MessageService } from '../app/components/form/services/message.service';\r\nimport { InputExComponent } from '../app/examples/input-ex/input-ex.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nexport default {\r\n  title: 'FormInput',\r\n  component: InputExComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [\r\n        FormComponent,\r\n        FormInputComponent,\r\n        FormGroupComponent,\r\n        FormRadioComponent,\r\n        FormRadioComponent,\r\n        IconComponent,\r\n        SizeDirective,\r\n        ColorDirective,\r\n      ],\r\n      providers: [FormService, MessageService],\r\n      imports: [\r\n        MaterialModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        CommonModule,\r\n        BrowserAnimationsModule,\r\n      ],\r\n    }),\r\n  ],\r\n} as Meta;\r\n\r\nconst Template: Story<InputExComponent> = (args: InputExComponent) => ({\r\n  props: args,\r\n});\r\n\r\nexport const Select = Template.bind({});;\r\nSelect.args = {\r\n  questions: [\r\n    {\r\n      controlType: 'select',\r\n      key: 'record',\r\n      label: 'סוג רישום',\r\n      options: [\r\n        { label: 'גוש חלקה', value: 'שם נוסף' },\r\n        { label: 'דף ספר', value: 'עוד לקוח' },\r\n        { label: 'מגרש', value: 'לקוח מספר שלוש' },\r\n        { label: 'גוש שומא', value: 'לקוח מספר ארבע' },\r\n      ],\r\n      onSelectChange: () => {},\r\n    },\r\n  ],\r\n};\r\n\r\nexport const SelectMulti = Template.bind({});;\r\nSelectMulti.args = {\r\n  questions: [\r\n    {\r\n      controlType: 'select',\r\n      multi: true,\r\n      key: 'record',\r\n      label: 'סוג רישום',\r\n      options: [\r\n        { label: 'גוש חלקה', value: 'שם נוסף' },\r\n        { label: 'דף ספר', value: 'עוד לקוח' },\r\n        { label: 'מגרש', value: 'לקוח מספר שלוש' },\r\n        { label: 'גוש שומא', value: 'לקוח מספר ארבע' },\r\n      ],\r\n      onSelectChange: () => {},\r\n    },\r\n  ],\r\n};\r\n\r\nexport const Text = Template.bind({});;\r\nText.args = {\r\n  questions: [\r\n    {\r\n      controlType: 'text',\r\n      key: 'value',\r\n      label: 'הכנס טקסט',\r\n      validations: [Validators.required],\r\n    },\r\n  ],\r\n};\r\nexport const Textarea = Template.bind({});\r\nTextarea.args = {\r\n  questions: [\r\n    {\r\n      controlType: 'textarea',\r\n      key: 'value',\r\n      label: 'הכנס טקסט',\r\n      validations: [Validators.required],\r\n      gridProps: {\r\n        rows: 5,\r\n      },\r\n    },\r\n  ],\r\n};\r\n\n\n\nSelect.parameters = { storySource: { source: \"(args: InputExComponent) => ({\\r\\n  props: args,\\r\\n})\" }, ...Select.parameters };\nSelectMulti.parameters = { storySource: { source: \"(args: InputExComponent) => ({\\r\\n  props: args,\\r\\n})\" }, ...SelectMulti.parameters };\nText.parameters = { storySource: { source: \"(args: InputExComponent) => ({\\r\\n  props: args,\\r\\n})\" }, ...Text.parameters };\nTextarea.parameters = { storySource: { source: \"(args: InputExComponent) => ({\\r\\n  props: args,\\r\\n})\" }, ...Textarea.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { moduleMetadata, Story, Meta } from '@storybook/angular';\\r\\nimport { APP_BASE_HREF, CommonModule } from '@angular/common';\\r\\nimport { MenuComponent } from '../app/components/menu/menu.component';\\r\\nimport { AppRoutingModule } from '../app/app-routing.module';\\r\\nimport { MaterialModule } from '../material/material.module';\\r\\nimport { TypographyComponent } from '../app/components/typography/typography.component';\\r\\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\\r\\nimport { ClassesDirective } from '../app/utilities/directives/classes.directive';\\r\\nimport { CardUserComponent } from '../app/components/cards/card-user/card-user.component';\\r\\nimport { MenuItemComponent } from '../app/components/menu-item/menu-item.component';\\r\\nimport { IconComponent } from '../app/components/icon/icon.component';\\r\\nimport { ColorDirective } from '../app/utilities/directives/color.directive';\\r\\n\\r\\nexport default {\\r\\n  title: 'Menu',\\r\\n  component: MenuComponent,\\r\\n  decorators: [\\r\\n    moduleMetadata({\\r\\n      declarations: [MenuItemComponent, CardUserComponent, TypographyComponent, IconComponent, ColorDirective, ClassesDirective],\\r\\n      providers: [{ provide: APP_BASE_HREF, useValue: '/' }],\\r\\n      imports: [\\r\\n        CommonModule,\\r\\n        AppRoutingModule,\\r\\n        MaterialModule,\\r\\n        BrowserAnimationsModule,\\r\\n      ],\\r\\n    }),\\r\\n  ],\\r\\n} as Meta;\\r\\n\\r\\nconst Template: Story<MenuComponent> = (args: MenuComponent) => ({\\r\\n  props: args,\\r\\n});\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\nDefault.args = {\\r\\n  menu: [\\r\\n    {\\r\\n      label: 'ראשי',\\r\\n      prefix: 'assets',\\r\\n      links: [],\\r\\n    },\\r\\n    {\\r\\n      label: 'פיקוח',\\r\\n      prefix: 'supervision',\\r\\n      links: [],\\r\\n    },\\r\\n    {\\r\\n      label: 'שומה',\\r\\n      prefix: 'evaluation',\\r\\n      links: [],\\r\\n    },\\r\\n    {\\r\\n      label: 'עסקאות',\\r\\n      prefix: 'transactions',\\r\\n      links: [],\\r\\n    },\\r\\n    {\\r\\n      label: 'מדידות',\\r\\n      prefix: 'measurements',\\r\\n      links: [],\\r\\n    },\\r\\n    {\\r\\n      label: 'תכנון',\\r\\n      prefix: 'design',\\r\\n      links: [],\\r\\n    },\\r\\n  ],\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":39,\"line\":31},\"endLoc\":{\"col\":2,\"line\":33},\"startBody\":{\"col\":39,\"line\":31},\"endBody\":{\"col\":2,\"line\":33}}};\n    \nimport { moduleMetadata, Story, Meta } from '@storybook/angular';\r\nimport { APP_BASE_HREF, CommonModule } from '@angular/common';\r\nimport { MenuComponent } from '../app/components/menu/menu.component';\r\nimport { AppRoutingModule } from '../app/app-routing.module';\r\nimport { MaterialModule } from '../material/material.module';\r\nimport { TypographyComponent } from '../app/components/typography/typography.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ClassesDirective } from '../app/utilities/directives/classes.directive';\r\nimport { CardUserComponent } from '../app/components/cards/card-user/card-user.component';\r\nimport { MenuItemComponent } from '../app/components/menu-item/menu-item.component';\r\nimport { IconComponent } from '../app/components/icon/icon.component';\r\nimport { ColorDirective } from '../app/utilities/directives/color.directive';\r\n\r\nexport default {\r\n  title: 'Menu',\r\n  component: MenuComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [MenuItemComponent, CardUserComponent, TypographyComponent, IconComponent, ColorDirective, ClassesDirective],\r\n      providers: [{ provide: APP_BASE_HREF, useValue: '/' }],\r\n      imports: [\r\n        CommonModule,\r\n        AppRoutingModule,\r\n        MaterialModule,\r\n        BrowserAnimationsModule,\r\n      ],\r\n    }),\r\n  ],\r\n} as Meta;\r\n\r\nconst Template: Story<MenuComponent> = (args: MenuComponent) => ({\r\n  props: args,\r\n});\r\n\r\nexport const Default = Template.bind({});\r\nDefault.args = {\r\n  menu: [\r\n    {\r\n      label: 'ראשי',\r\n      prefix: 'assets',\r\n      links: [],\r\n    },\r\n    {\r\n      label: 'פיקוח',\r\n      prefix: 'supervision',\r\n      links: [],\r\n    },\r\n    {\r\n      label: 'שומה',\r\n      prefix: 'evaluation',\r\n      links: [],\r\n    },\r\n    {\r\n      label: 'עסקאות',\r\n      prefix: 'transactions',\r\n      links: [],\r\n    },\r\n    {\r\n      label: 'מדידות',\r\n      prefix: 'measurements',\r\n      links: [],\r\n    },\r\n    {\r\n      label: 'תכנון',\r\n      prefix: 'design',\r\n      links: [],\r\n    },\r\n  ],\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"(args: MenuComponent) => ({\\r\\n  props: args,\\r\\n})\" }, ...Default.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { Meta, moduleMetadata, Story } from '@storybook/angular';\\r\\nimport { APP_BASE_HREF, CommonModule } from '@angular/common';\\r\\nimport { MaterialModule } from '../material/material.module';\\r\\nimport { BrowserModule } from '@angular/platform-browser';\\r\\nimport { AppRoutingModule } from '../app/app-routing.module';\\r\\nimport { IconComponent } from '../app/components/icon/icon.component';\\r\\nimport { CardStatusComponent } from '../app/components/cards/card-status/card-status.component';\\r\\nimport { TypographyComponent } from '../app/components/typography/typography.component';\\r\\nimport { NavbarComponent } from '../app/components/navigation/navbar/navbar.component';\\r\\nimport { StepModel } from '../app/components/step/step.model';\\r\\n\\r\\nexport default {\\r\\n  title: 'Navbar',\\r\\n  component: NavbarComponent,\\r\\n  decorators: [\\r\\n    moduleMetadata({\\r\\n      declarations: [CardStatusComponent, IconComponent, TypographyComponent],\\r\\n      providers: [{ provide: APP_BASE_HREF, useValue: '/' }],\\r\\n      imports: [\\r\\n        CommonModule,\\r\\n        MaterialModule,\\r\\n        BrowserModule,\\r\\n        // AppRoutingModule,\\r\\n      ],\\r\\n    }),\\r\\n  ],\\r\\n} as Meta;\\r\\n\\r\\nconst Template: Story<NavbarComponent> = (args: NavbarComponent) => ({\\r\\n  props: args,\\r\\n});\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\nDefault.args = {\\r\\n  status: [\\r\\n    new StepModel({\\r\\n      label: 'בתהליך',\\r\\n      svgUrl: 'reload',\\r\\n      value: 6,\\r\\n      size: 6,\\r\\n    }),\\r\\n  ],\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":41,\"line\":29},\"endLoc\":{\"col\":2,\"line\":31},\"startBody\":{\"col\":41,\"line\":29},\"endBody\":{\"col\":2,\"line\":31}}};\n    \nimport { Meta, moduleMetadata, Story } from '@storybook/angular';\r\nimport { APP_BASE_HREF, CommonModule } from '@angular/common';\r\nimport { MaterialModule } from '../material/material.module';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppRoutingModule } from '../app/app-routing.module';\r\nimport { IconComponent } from '../app/components/icon/icon.component';\r\nimport { CardStatusComponent } from '../app/components/cards/card-status/card-status.component';\r\nimport { TypographyComponent } from '../app/components/typography/typography.component';\r\nimport { NavbarComponent } from '../app/components/navigation/navbar/navbar.component';\r\nimport { StepModel } from '../app/components/step/step.model';\r\n\r\nexport default {\r\n  title: 'Navbar',\r\n  component: NavbarComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [CardStatusComponent, IconComponent, TypographyComponent],\r\n      providers: [{ provide: APP_BASE_HREF, useValue: '/' }],\r\n      imports: [\r\n        CommonModule,\r\n        MaterialModule,\r\n        BrowserModule,\r\n        // AppRoutingModule,\r\n      ],\r\n    }),\r\n  ],\r\n} as Meta;\r\n\r\nconst Template: Story<NavbarComponent> = (args: NavbarComponent) => ({\r\n  props: args,\r\n});\r\n\r\nexport const Default = Template.bind({});\r\nDefault.args = {\r\n  status: [\r\n    new StepModel({\r\n      label: 'בתהליך',\r\n      svgUrl: 'reload',\r\n      value: 6,\r\n      size: 6,\r\n    }),\r\n  ],\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"(args: NavbarComponent) => ({\\r\\n  props: args,\\r\\n})\" }, ...Default.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { moduleMetadata, Story, Meta } from '@storybook/angular';\\r\\nimport { CommonModule } from '@angular/common';\\r\\n\\r\\nexport default {\\r\\n  title: 'Pagination',\\r\\n  decorators: [\\r\\n    moduleMetadata({\\r\\n      declarations: [],\\r\\n      imports: [CommonModule],\\r\\n    }),\\r\\n  ],\\r\\n} as Meta;\\r\\n\\r\\nconst Template: Story<any> = (args: any) => ({\\r\\n  props: args,\\r\\n});\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\nDefault.args = {\\r\\n\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":29,\"line\":14},\"endLoc\":{\"col\":2,\"line\":16},\"startBody\":{\"col\":29,\"line\":14},\"endBody\":{\"col\":2,\"line\":16}}};\n    \nimport { moduleMetadata, Story, Meta } from '@storybook/angular';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nexport default {\r\n  title: 'Pagination',\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [],\r\n      imports: [CommonModule],\r\n    }),\r\n  ],\r\n} as Meta;\r\n\r\nconst Template: Story<any> = (args: any) => ({\r\n  props: args,\r\n});\r\n\r\nexport const Default = Template.bind({});\r\nDefault.args = {\r\n\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"(args: any) => ({\\r\\n  props: args,\\r\\n})\" }, ...Default.parameters };","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n\r\n@NgModule({\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-expand-panel',\r\n  template: (require('./expand-panel.component.html').default || require('./expand-panel.component.html')).length ? (require('./expand-panel.component.html').default || require('./expand-panel.component.html')) : '',\r\n  styles: [(require('./expand-panel.component.scss').default || require('./expand-panel.component.scss')).length ? (require('./expand-panel.component.scss').default || require('./expand-panel.component.scss')) : '']\r\n})\r\nexport class ExpandPanelComponent implements OnInit {\r\n // prop for custom class\r\n @Input() public variant: string;\r\n @Input() public hideToggle: boolean;\r\n @Input() public showHeader: boolean;\r\n @Input() public disabled: boolean;\r\n\r\n @Input() public expanded: boolean;\r\n\r\n public panelOpenState = false;\r\n\r\n @Output() expand: EventEmitter<void> = new EventEmitter();\r\n @Output() closed: EventEmitter<void> = new EventEmitter();\r\n @Output() opened: EventEmitter<void> = new EventEmitter();\r\n\r\n constructor() {}\r\n\r\n ngOnInit(): void {\r\n   this.variant = this.variant || '';\r\n   this.expanded = this.expanded || false;\r\n   this.hideToggle = this.hideToggle || false;\r\n   this.showHeader = this.showHeader || false;\r\n }\r\n\r\n public onPanelExpend() {\r\n   this.expand.emit();\r\n }\r\n\r\n public onPanelClosed() {\r\n   this.panelOpenState = false\r\n   this.closed.emit();\r\n }\r\n\r\n public onPanelOpen() {\r\n   this.panelOpenState = true\r\n   this.opened.emit();\r\n }\r\n}\r\n","import { ListItemKeys } from '../list-item/list-item.model';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { MenuService } from './menu.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { RouterService } from '../../utilities/services/route.rservice';\r\nimport { MenuItemModel } from '../menu-item/menu-item.model';\r\nimport { MenuModel } from './menu.model';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  template: (require('./menu.component.html').default || require('./menu.component.html')).length ? (require('./menu.component.html').default || require('./menu.component.html')) : '',\r\n  styles: [(require('./menu.component.scss').default || require('./menu.component.scss')).length ? (require('./menu.component.scss').default || require('./menu.component.scss')) : ''],\r\n})\r\nexport class MenuComponent implements OnInit {\r\n  @Input() public menu: MenuModel[];\r\n  @Input() private routePrefix: string;\r\n\r\n  public logoutItem: MenuItemModel = new MenuItemModel({\r\n    label: 'יציאה',\r\n    isActive: false,\r\n    path: '',\r\n    svgUrl: 'logout',\r\n  });\r\n\r\n  private routerSubscription: Subscription;\r\n  private prefixSubscription: Subscription;\r\n\r\n  constructor(\r\n    private menuService: MenuService,\r\n    private routerService: RouterService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.subscribeToPrefix();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.routerSubscription) {\r\n      this.routerSubscription.unsubscribe();\r\n    }\r\n    if (this.prefixSubscription) {\r\n      this.prefixSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private updateLinkStatus(path: string) {\r\n    this.menu = this.menuService.setList(this.menu, 'path', path);\r\n  }\r\n\r\n  // UPDATE METHOD WHEN CHANGE MODULE\r\n  private subscribeToPrefix() {\r\n    this.prefixSubscription = this.routerService\r\n      .getModulePrefixObs()\r\n      .subscribe((prefix) => {\r\n        this.menuService.setPrefix(prefix);\r\n        const path: string = this.routerService.getCurrentPath();\r\n        this.updateLinkStatus(path);\r\n      });\r\n  }\r\n\r\n  // UPDATE METHOD WHEN CLICK ON STEP\r\n  public onLinkClick(link: MenuItemModel, prefix: string) {\r\n    if (!link.isActive) {\r\n      const url = `/${this.routePrefix}/${prefix}`;\r\n      const path = link.path !== prefix ? `${url}/${link.path}` : url;\r\n      this.updateLinkStatus(link.path);\r\n      this.routerService.navigate(path);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MenuModel } from './menu.model';\r\nimport { MenuItemModel } from '../menu-item/menu-item.model';\r\nimport { ListItemKeys } from '../list-item/list-item.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MenuService {\r\n\r\n  private menu: MenuModel[]\r\n  private modulePrefix: string;\r\n\r\n  constructor() {}\r\n\r\n  public getMenu() {\r\n    return [...this.menu];\r\n  }\r\n\r\n  public getPrefix(): string {\r\n    return this.modulePrefix;\r\n  }\r\n\r\n  public setPrefix(modulePrefix: string) {\r\n    this.modulePrefix = modulePrefix;\r\n  }\r\n\r\n  // METHODS TO HANDLE ACTIVE STEP STATUS\r\n  private activeStep(items: MenuItemModel[], key: ListItemKeys, value: any) {\r\n    items.find((item) => {\r\n      if (item[key] === value) {\r\n        item.active();\r\n      }\r\n    });\r\n  }\r\n\r\n  private unactiveStep(items: MenuItemModel[]) {\r\n    items.find((item) => {\r\n      if (item.isActive) {\r\n        item.unactive();\r\n      }\r\n    });\r\n  }\r\n\r\n  public setSteps(\r\n    items: MenuItemModel[],\r\n    key: ListItemKeys,\r\n    value: string\r\n  ): MenuItemModel[] {\r\n    this.unactiveStep(items);\r\n    this.activeStep(items, key, value);\r\n    return [...items];\r\n  }\r\n\r\n  public setList(\r\n    menu: MenuModel[],\r\n    key: ListItemKeys,\r\n    value: string\r\n  ): MenuModel[] {\r\n    const updateMenu = [...menu];\r\n\r\n    updateMenu.find((list) => {\r\n      if (list.prefix === this.modulePrefix) {\r\n        list.links = this.setSteps(list.links, key, value);\r\n      }\r\n    });\r\n    return updateMenu;\r\n  }\r\n\r\n  public findList(key: string, value: string): MenuModel {\r\n    return {\r\n      ...this.getMenu().find((list: MenuModel) => list[key] === value),\r\n    };\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navbar-bottom',\r\n  template: (require('./navbar-bottom.component.html').default || require('./navbar-bottom.component.html')).length ? (require('./navbar-bottom.component.html').default || require('./navbar-bottom.component.html')) : '',\r\n  styles: [(require('./navbar-bottom.component.scss').default || require('./navbar-bottom.component.scss')).length ? (require('./navbar-bottom.component.scss').default || require('./navbar-bottom.component.scss')) : '']\r\n})\r\nexport class NavbarBottomComponent implements OnInit {\r\n\r\n  @Input() buttonText: string = '';\r\n  @Input() hasNext: boolean;\r\n  @Input() hasSave: boolean;\r\n\r\n  @Output() previous = new EventEmitter();\r\n  @Output() next = new EventEmitter();\r\n  @Output() save = new EventEmitter();\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.hasSave)\r\n  }\r\n\r\n  public onPrevious(): void {\r\n    this.previous.emit();\r\n  }\r\n\r\n  public onNext(): void {\r\n    this.next.emit();\r\n  }\r\n\r\n  public onSave(): void {\r\n    this.save.emit();\r\n  }\r\n}\r\n","// import { UserDataService } from './../../utilities/services/user-data.service';\r\nimport { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { IconModel } from '../../icon/icon.model';\r\nimport { StepModel } from '../../step/step.model';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  template: (require('./navbar.component.html').default || require('./navbar.component.html')).length ? (require('./navbar.component.html').default || require('./navbar.component.html')) : '',\r\n  styles: [(require('./navbar.component.scss').default || require('./navbar.component.scss')).length ? (require('./navbar.component.scss').default || require('./navbar.component.scss')) : ''],\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  @Input() public status: StepModel[];\r\n  @Input() public title: string;\r\n  @Input() public openIcon: string;\r\n  @Input() public logos: IconModel[];\r\n\r\n  @Input() public title$: Observable<string>;\r\n  @Input() public status$: Observable<StepModel>;\r\n\r\n  public isOpen: boolean = false;\r\n  public openLabel: string = 'תפריט';\r\n  public closeLabel: string = 'סגור תפריט';\r\n\r\n  @Output() menuToggle = new EventEmitter();\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  public toggleMenu() {\r\n    this.isOpen = !this.isOpen;\r\n    this.menuToggle.emit();\r\n  }\r\n}\r\n","import { Location } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RouterService {\r\n  private $modulePrefix: Subject<string> = new Subject();\r\n\r\n  public currentRoute: string;\r\n  public history: string[] = [];\r\n\r\n  constructor(private router: Router, private location: Location) {\r\n    this.subscribeToRoute()\r\n  }\r\n\r\n  public goBack() {\r\n    this.history.pop();\r\n    if (this.history.length > 0) {\r\n      this.location.back();\r\n    } else {\r\n      this.router.navigateByUrl('/');\r\n    }\r\n  }\r\n\r\n  public getCurrentPath(): string {\r\n    return this.setLastPath(this.router.url);\r\n  }\r\n\r\n  public subscribeToRoute(): Observable<string> {\r\n    return this.router.events.pipe(\r\n      filter((event) => event instanceof NavigationEnd),\r\n      map((event: any) => {\r\n        this.history.push(event.urlAfterRedirects);\r\n        this.currentRoute = event.utl;\r\n        return event.url;\r\n      })\r\n    );\r\n  }\r\n\r\n  public getLastPathObs(): Observable<string> {\r\n    return this.subscribeToRoute().pipe(\r\n      map((path: string) => this.setLastPath(path))\r\n    );\r\n  }\r\n\r\n  public async navigate(path: string) {\r\n    try {\r\n      await this.router.navigateByUrl(path);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  public setLastPath(url: string) {\r\n    const path = url.split('/');\r\n    return path[path.length - 1];\r\n  }\r\n\r\n  public getModulePrefixObs(): Observable<string> {\r\n    return this.$modulePrefix.asObservable();\r\n  }\r\n\r\n  public emitModulePrefix(path: string): void {\r\n    this.$modulePrefix.next(path);\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":""}