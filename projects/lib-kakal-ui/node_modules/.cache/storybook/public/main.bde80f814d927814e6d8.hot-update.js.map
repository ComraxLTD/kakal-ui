{"version":3,"file":"main.bde80f814d927814e6d8.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC3PA;AACA;AACA;AAQA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAcA;AAZA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AAQA;AAAA;AAAA;AAAA;AAZA;AALA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AAGA;AAOA;AAiBA;AAAA;AANA;AACA;AACA;AAEA;AAIA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AA7BA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AASA;AAAA;;AAAA;AAfA;AALA;AACA;AACA;AACA;AACA;AAkBA;AAjBA;AAAA;;;;;;;;;;;;;;;;;;;ACXA;AAEA;AACA;AAKA;AAWA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AA3DA;AAHA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AAQA;AACA;AACA;AACA;AAOA;AAsBA;AACA;AACA;AACA;AACA;AAzBA;AAQA;AACA;AACA;AACA;AAIA;AACA;AAUA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAxIA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AALA;AALA;AACA;AACA;AACA;AACA;AAwBA;AAvBA;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AAMA;AAMA;AAAA;AAAA;AAJA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AA3DA;AAJA;AACA;AACA;AAQA;AANA;AAAA","sources":["webpack://lib-kakal-ui/./src/lib/stories/screens/Layout.stories.ts","webpack://lib-kakal-ui/./src/lib/app/components/menu/menu.component.ts","webpack://lib-kakal-ui/./src/lib/app/components/navbar/navbar.component.ts","webpack://lib-kakal-ui/./src/lib/app/components/navbar/navbar.service.ts","webpack://lib-kakal-ui/./src/lib/app/examples/layout-ex/layout-ex.component.ts","webpack://lib-kakal-ui/./src/lib/app/utilities/services/route.service.ts"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { moduleMetadata, Story, Meta } from '@storybook/angular';\\r\\nimport { APP_BASE_HREF, CommonModule } from '@angular/common';\\r\\nimport { MaterialModule } from '../../material/material.module';\\r\\n\\r\\nimport { SizeDirective } from '../../app/utilities/directives/size.directive';\\r\\nimport { IconComponent } from '../../app/components/icon/icon.component';\\r\\nimport { VariantDirective } from '../../app/utilities/directives/variant.directive';\\r\\nimport { TypographyComponent } from '../../app/components/typography/typography.component';\\r\\nimport { ButtonDirective } from '../../app/utilities/directives/button.directive';\\r\\nimport { ColorDirective } from '../../app/utilities/directives/color.directive';\\r\\nimport { BreakpointService } from '../../app/utilities/services/breakpoint.service';\\r\\nimport { LayoutComponent } from '../../app/screens/layout/layout.component';\\r\\nimport { CardWizardComponent } from '../../app/components/cards/card-wizard/card-wizard.component';\\r\\nimport { MenuItemComponent } from '../../app/components/menu-item/menu-item.component';\\r\\nimport { MenuComponent } from '../../app/components/menu/menu.component';\\r\\nimport { StepperComponent } from '../../app/components/stepper/stepper.component';\\r\\nimport { MenuService } from '../../app/components/menu/menu.service';\\r\\nimport { LayoutService } from '../../app/screens/layout/layout.service';\\r\\nimport { LayoutExComponent } from '../../app/examples/layout-ex/layout-ex.component';\\r\\nimport { CardStatusComponent } from '../../app/components/cards/card-status/card-status.component';\\r\\nimport { CardStepComponent } from '../../app/components/cards/card-step/card-step.component';\\r\\nimport { CardUserComponent } from '../../app/components/cards/card-user/card-user.component';\\r\\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\\r\\nimport { CardStepModel } from '../../app/components/cards/card-step/card-step.model';\\r\\nimport { MenuItemModel } from '../../app/components/menu-item/menu-item.model';\\r\\nimport { IconModel } from '../../app/components/icon/icon.model';\\r\\nimport { NavbarComponent } from '../../app/components/navbar/navbar.component';\\r\\nimport { NavbarService } from '../../app/components/navbar/navbar.service';\\r\\nimport { RouterService } from '../../app/utilities/services/route.service';\\r\\nimport { CoreModule } from '@angular/flex-layout';\\r\\n\\r\\nexport default {\\r\\n  title: 'Screen - Layout',\\r\\n  component: LayoutExComponent,\\r\\n  decorators: [\\r\\n    moduleMetadata({\\r\\n      declarations: [\\r\\n        IconComponent,\\r\\n        TypographyComponent,\\r\\n\\r\\n        LayoutExComponent,\\r\\n\\r\\n        LayoutComponent,\\r\\n\\r\\n        NavbarComponent,\\r\\n        CardStatusComponent,\\r\\n        CardUserComponent,\\r\\n\\r\\n        MenuComponent,\\r\\n        MenuItemComponent,\\r\\n\\r\\n        StepperComponent,\\r\\n        CardWizardComponent,\\r\\n        CardStepComponent,\\r\\n\\r\\n        SizeDirective,\\r\\n        VariantDirective,\\r\\n        ButtonDirective,\\r\\n        ColorDirective,\\r\\n      ],\\r\\n\\r\\n      providers: [\\r\\n        LayoutService,\\r\\n        NavbarService,\\r\\n        MenuService,\\r\\n        RouterService,\\r\\n        BreakpointService,\\r\\n        { provide: APP_BASE_HREF, useValue: '/' },\\r\\n      ],\\r\\n      imports: [\\r\\n        CommonModule,\\r\\n        MaterialModule,\\r\\n        BrowserAnimationsModule,\\r\\n        CoreModule\\r\\n      ],\\r\\n    }),\\r\\n  ],\\r\\n} as Meta;\\r\\n\\r\\nconst Template: Story<LayoutExComponent> = (args: LayoutExComponent) => ({\\r\\n  props: args,\\r\\n});\\r\\n\\r\\nexport const Defualt = Template.bind({});\\r\\n\\r\\nDefualt.args = {\\r\\n  openIcon: 'treegradientlands',\\r\\n  logos: [new IconModel('logo', 7)],\\r\\n};\\r\\n\\r\\nexport const WithWizard = Template.bind({});\\r\\n\\r\\nWithWizard.args = {\\r\\n  openIcon: 'treegradientlands',\\r\\n\\r\\n  logos: [new IconModel('logo', 7)],\\r\\n  steps: [\\r\\n    new CardStepModel({\\r\\n      label: 'פירוט הנכס',\\r\\n      svgUrl: 'home',\\r\\n      path: 'details',\\r\\n      size: 2,\\r\\n      variant: 'square',\\r\\n      type: 'wizard',\\r\\n    }),\\r\\n    new CardStepModel({\\r\\n      label: 'תנועות',\\r\\n      svgUrl: 'list',\\r\\n      path: 'movements',\\r\\n      size: 2,\\r\\n      isActive: true,\\r\\n      variant: 'square',\\r\\n      type: 'wizard',\\r\\n    }),\\r\\n    new CardStepModel({\\r\\n      label: 'עסקאות',\\r\\n      svgUrl: 'transactions',\\r\\n      path: 'transactions',\\r\\n      size: 2,\\r\\n      variant: 'square',\\r\\n      type: 'wizard',\\r\\n    }),\\r\\n    new CardStepModel({\\r\\n      label: 'תתי חלקה',\\r\\n      svgUrl: 'building',\\r\\n      path: 'subdivision',\\r\\n      size: 2,\\r\\n      variant: 'square',\\r\\n      type: 'wizard',\\r\\n    }),\\r\\n    new CardStepModel({\\r\\n      label: 'פרצליציה',\\r\\n      svgUrl: 'add',\\r\\n      path: 'parcellation',\\r\\n      size: 2,\\r\\n      variant: 'square',\\r\\n      type: 'wizard',\\r\\n    }),\\r\\n  ],\\r\\n};\\r\\n\\r\\nexport const WithMenu = Template.bind({});\\r\\n\\r\\nWithMenu.args = {\\r\\n  openIcon: 'treegradientlands',\\r\\n  logos: [new IconModel('logo', 7)],\\r\\n\\r\\n  menu: [\\r\\n    {\\r\\n      label: 'ראשי',\\r\\n      prefix: 'neches',\\r\\n      links: [\\r\\n        new MenuItemModel({ label: 'ספר נכסים', path: 'neches' }),\\r\\n        new MenuItemModel({ label: 'חיפוש נכס', path: 'search' }),\\r\\n        new MenuItemModel({ label: 'עסקאות', path: 'transactions' }),\\r\\n        new MenuItemModel({ label: 'תבניות מייל', path: 'mail' }),\\r\\n        new MenuItemModel({ label: 'רשימת עורכי דין', path: 'loyer' }),\\r\\n      ],\\r\\n    },\\r\\n    {\\r\\n      label: 'פיקוח',\\r\\n      prefix: 'supervision',\\r\\n      links: [],\\r\\n    },\\r\\n    {\\r\\n      label: 'שומה',\\r\\n      prefix: 'evaluation',\\r\\n      links: [],\\r\\n    },\\r\\n    {\\r\\n      label: 'עסקאות',\\r\\n      prefix: 'transactions',\\r\\n      links: [],\\r\\n    },\\r\\n    {\\r\\n      label: 'מדידות',\\r\\n      prefix: 'measurements',\\r\\n      links: [],\\r\\n    },\\r\\n    {\\r\\n      label: 'תכנון',\\r\\n      prefix: 'design',\\r\\n      links: [],\\r\\n    },\\r\\n  ],\\r\\n};\\r\\n\\r\\nexport const WithStatus = Template.bind({});\\r\\n\\r\\nWithStatus.args = {\\r\\n  openIcon: 'treegradientlands',\\r\\n  logos: [new IconModel('logo', 7)],\\r\\n  status: [\\r\\n    new CardStepModel({\\r\\n      label: 'איזור תנועות',\\r\\n      svgUrl: 'reload',\\r\\n      value: 6,\\r\\n      size: 6,\\r\\n      type: 'status',\\r\\n    }),\\r\\n    new CardStepModel({\\r\\n      label: 'הערת אזהרה',\\r\\n      svgUrl: 'reload',\\r\\n      value: 6,\\r\\n      size: 6,\\r\\n      type: 'status',\\r\\n    }),\\r\\n    new CardStepModel({\\r\\n      label: 'דיווח לרשות המיסים',\\r\\n      svgUrl: 'reload',\\r\\n      value: 6,\\r\\n      size: 6,\\r\\n      type: 'status',\\r\\n    }),\\r\\n    new CardStepModel({\\r\\n      label: 'העברת חזקה',\\r\\n      svgUrl: 'reload',\\r\\n      value: 6,\\r\\n      size: 6,\\r\\n      type: 'status',\\r\\n    }),\\r\\n    new CardStepModel({\\r\\n      label: 'רישום בטאבו',\\r\\n      svgUrl: 'reload',\\r\\n      value: 6,\\r\\n      size: 6,\\r\\n      type: 'status',\\r\\n    }),\\r\\n    new CardStepModel({\\r\\n      label: 'עדכון ספר נכסים',\\r\\n      svgUrl: 'reload',\\r\\n      value: 6,\\r\\n      size: 6,\\r\\n      type: 'status',\\r\\n    }),\\r\\n  ],\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Defualt\":{\"startLoc\":{\"col\":43,\"line\":80},\"endLoc\":{\"col\":2,\"line\":82},\"startBody\":{\"col\":43,\"line\":80},\"endBody\":{\"col\":2,\"line\":82}},\"WithWizard\":{\"startLoc\":{\"col\":43,\"line\":80},\"endLoc\":{\"col\":2,\"line\":82},\"startBody\":{\"col\":43,\"line\":80},\"endBody\":{\"col\":2,\"line\":82}},\"WithMenu\":{\"startLoc\":{\"col\":43,\"line\":80},\"endLoc\":{\"col\":2,\"line\":82},\"startBody\":{\"col\":43,\"line\":80},\"endBody\":{\"col\":2,\"line\":82}},\"WithStatus\":{\"startLoc\":{\"col\":43,\"line\":80},\"endLoc\":{\"col\":2,\"line\":82},\"startBody\":{\"col\":43,\"line\":80},\"endBody\":{\"col\":2,\"line\":82}}};\n    \nimport { moduleMetadata, Story, Meta } from '@storybook/angular';\r\nimport { APP_BASE_HREF, CommonModule } from '@angular/common';\r\nimport { MaterialModule } from '../../material/material.module';\r\n\r\nimport { SizeDirective } from '../../app/utilities/directives/size.directive';\r\nimport { IconComponent } from '../../app/components/icon/icon.component';\r\nimport { VariantDirective } from '../../app/utilities/directives/variant.directive';\r\nimport { TypographyComponent } from '../../app/components/typography/typography.component';\r\nimport { ButtonDirective } from '../../app/utilities/directives/button.directive';\r\nimport { ColorDirective } from '../../app/utilities/directives/color.directive';\r\nimport { BreakpointService } from '../../app/utilities/services/breakpoint.service';\r\nimport { LayoutComponent } from '../../app/screens/layout/layout.component';\r\nimport { CardWizardComponent } from '../../app/components/cards/card-wizard/card-wizard.component';\r\nimport { MenuItemComponent } from '../../app/components/menu-item/menu-item.component';\r\nimport { MenuComponent } from '../../app/components/menu/menu.component';\r\nimport { StepperComponent } from '../../app/components/stepper/stepper.component';\r\nimport { MenuService } from '../../app/components/menu/menu.service';\r\nimport { LayoutService } from '../../app/screens/layout/layout.service';\r\nimport { LayoutExComponent } from '../../app/examples/layout-ex/layout-ex.component';\r\nimport { CardStatusComponent } from '../../app/components/cards/card-status/card-status.component';\r\nimport { CardStepComponent } from '../../app/components/cards/card-step/card-step.component';\r\nimport { CardUserComponent } from '../../app/components/cards/card-user/card-user.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { CardStepModel } from '../../app/components/cards/card-step/card-step.model';\r\nimport { MenuItemModel } from '../../app/components/menu-item/menu-item.model';\r\nimport { IconModel } from '../../app/components/icon/icon.model';\r\nimport { NavbarComponent } from '../../app/components/navbar/navbar.component';\r\nimport { NavbarService } from '../../app/components/navbar/navbar.service';\r\nimport { RouterService } from '../../app/utilities/services/route.service';\r\nimport { CoreModule } from '@angular/flex-layout';\r\n\r\nexport default {\r\n  title: 'Screen - Layout',\r\n  component: LayoutExComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [\r\n        IconComponent,\r\n        TypographyComponent,\r\n\r\n        LayoutExComponent,\r\n\r\n        LayoutComponent,\r\n\r\n        NavbarComponent,\r\n        CardStatusComponent,\r\n        CardUserComponent,\r\n\r\n        MenuComponent,\r\n        MenuItemComponent,\r\n\r\n        StepperComponent,\r\n        CardWizardComponent,\r\n        CardStepComponent,\r\n\r\n        SizeDirective,\r\n        VariantDirective,\r\n        ButtonDirective,\r\n        ColorDirective,\r\n      ],\r\n\r\n      providers: [\r\n        LayoutService,\r\n        NavbarService,\r\n        MenuService,\r\n        RouterService,\r\n        BreakpointService,\r\n        { provide: APP_BASE_HREF, useValue: '/' },\r\n      ],\r\n      imports: [\r\n        CommonModule,\r\n        MaterialModule,\r\n        BrowserAnimationsModule,\r\n        CoreModule\r\n      ],\r\n    }),\r\n  ],\r\n} as Meta;\r\n\r\nconst Template: Story<LayoutExComponent> = (args: LayoutExComponent) => ({\r\n  props: args,\r\n});\r\n\r\nexport const Defualt = Template.bind({});;\r\n\r\nDefualt.args = {\r\n  openIcon: 'treegradientlands',\r\n  logos: [new IconModel('logo', 7)],\r\n};\r\n\r\nexport const WithWizard = Template.bind({});;\r\n\r\nWithWizard.args = {\r\n  openIcon: 'treegradientlands',\r\n\r\n  logos: [new IconModel('logo', 7)],\r\n  steps: [\r\n    new CardStepModel({\r\n      label: 'פירוט הנכס',\r\n      svgUrl: 'home',\r\n      path: 'details',\r\n      size: 2,\r\n      variant: 'square',\r\n      type: 'wizard',\r\n    }),\r\n    new CardStepModel({\r\n      label: 'תנועות',\r\n      svgUrl: 'list',\r\n      path: 'movements',\r\n      size: 2,\r\n      isActive: true,\r\n      variant: 'square',\r\n      type: 'wizard',\r\n    }),\r\n    new CardStepModel({\r\n      label: 'עסקאות',\r\n      svgUrl: 'transactions',\r\n      path: 'transactions',\r\n      size: 2,\r\n      variant: 'square',\r\n      type: 'wizard',\r\n    }),\r\n    new CardStepModel({\r\n      label: 'תתי חלקה',\r\n      svgUrl: 'building',\r\n      path: 'subdivision',\r\n      size: 2,\r\n      variant: 'square',\r\n      type: 'wizard',\r\n    }),\r\n    new CardStepModel({\r\n      label: 'פרצליציה',\r\n      svgUrl: 'add',\r\n      path: 'parcellation',\r\n      size: 2,\r\n      variant: 'square',\r\n      type: 'wizard',\r\n    }),\r\n  ],\r\n};\r\n\r\nexport const WithMenu = Template.bind({});;\r\n\r\nWithMenu.args = {\r\n  openIcon: 'treegradientlands',\r\n  logos: [new IconModel('logo', 7)],\r\n\r\n  menu: [\r\n    {\r\n      label: 'ראשי',\r\n      prefix: 'neches',\r\n      links: [\r\n        new MenuItemModel({ label: 'ספר נכסים', path: 'neches' }),\r\n        new MenuItemModel({ label: 'חיפוש נכס', path: 'search' }),\r\n        new MenuItemModel({ label: 'עסקאות', path: 'transactions' }),\r\n        new MenuItemModel({ label: 'תבניות מייל', path: 'mail' }),\r\n        new MenuItemModel({ label: 'רשימת עורכי דין', path: 'loyer' }),\r\n      ],\r\n    },\r\n    {\r\n      label: 'פיקוח',\r\n      prefix: 'supervision',\r\n      links: [],\r\n    },\r\n    {\r\n      label: 'שומה',\r\n      prefix: 'evaluation',\r\n      links: [],\r\n    },\r\n    {\r\n      label: 'עסקאות',\r\n      prefix: 'transactions',\r\n      links: [],\r\n    },\r\n    {\r\n      label: 'מדידות',\r\n      prefix: 'measurements',\r\n      links: [],\r\n    },\r\n    {\r\n      label: 'תכנון',\r\n      prefix: 'design',\r\n      links: [],\r\n    },\r\n  ],\r\n};\r\n\r\nexport const WithStatus = Template.bind({});\r\n\r\nWithStatus.args = {\r\n  openIcon: 'treegradientlands',\r\n  logos: [new IconModel('logo', 7)],\r\n  status: [\r\n    new CardStepModel({\r\n      label: 'איזור תנועות',\r\n      svgUrl: 'reload',\r\n      value: 6,\r\n      size: 6,\r\n      type: 'status',\r\n    }),\r\n    new CardStepModel({\r\n      label: 'הערת אזהרה',\r\n      svgUrl: 'reload',\r\n      value: 6,\r\n      size: 6,\r\n      type: 'status',\r\n    }),\r\n    new CardStepModel({\r\n      label: 'דיווח לרשות המיסים',\r\n      svgUrl: 'reload',\r\n      value: 6,\r\n      size: 6,\r\n      type: 'status',\r\n    }),\r\n    new CardStepModel({\r\n      label: 'העברת חזקה',\r\n      svgUrl: 'reload',\r\n      value: 6,\r\n      size: 6,\r\n      type: 'status',\r\n    }),\r\n    new CardStepModel({\r\n      label: 'רישום בטאבו',\r\n      svgUrl: 'reload',\r\n      value: 6,\r\n      size: 6,\r\n      type: 'status',\r\n    }),\r\n    new CardStepModel({\r\n      label: 'עדכון ספר נכסים',\r\n      svgUrl: 'reload',\r\n      value: 6,\r\n      size: 6,\r\n      type: 'status',\r\n    }),\r\n  ],\r\n};\r\n\n\n\nDefualt.parameters = { storySource: { source: \"(args: LayoutExComponent) => ({\\r\\n  props: args,\\r\\n})\" }, ...Defualt.parameters };\nWithWizard.parameters = { storySource: { source: \"(args: LayoutExComponent) => ({\\r\\n  props: args,\\r\\n})\" }, ...WithWizard.parameters };\nWithMenu.parameters = { storySource: { source: \"(args: LayoutExComponent) => ({\\r\\n  props: args,\\r\\n})\" }, ...WithMenu.parameters };\nWithStatus.parameters = { storySource: { source: \"(args: LayoutExComponent) => ({\\r\\n  props: args,\\r\\n})\" }, ...WithStatus.parameters };","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { MenuItemModel } from '../menu-item/menu-item.model';\r\nimport { MenuModel } from './menu.model';\r\n\r\n@Component({\r\n  selector: 'kkl-menu',\r\n  template: (require('./menu.component.html').default || require('./menu.component.html')).length ? (require('./menu.component.html').default || require('./menu.component.html')) : '',\r\n  styles: [(require('./menu.component.scss').default || require('./menu.component.scss')).length ? (require('./menu.component.scss').default || require('./menu.component.scss')) : ''],\r\n})\r\nexport class MenuComponent {\r\n\r\n  @Input() public menu: MenuModel[];\r\n  @Input() public menu$: Observable<MenuModel[]>;\r\n  @Input() public hasLogin: boolean = true\r\n\r\n  public logoutItem: MenuItemModel = new MenuItemModel({\r\n    label: 'יציאה',\r\n    isActive: false,\r\n    path: '',\r\n    svgUrl: 'logout',\r\n  });\r\n  @Output() changePath: EventEmitter<string> = new EventEmitter();\r\n\r\n  ngOnInit() {\r\n    this.menu$ = this.menu$ || of(this.menu);\r\n  }\r\n\r\n\r\n  // UPDATE METHOD WHEN CLICK ON STEP\r\n  public onLinkClick(item: MenuItemModel, modulePrefix: string) {\r\n    if (!item.isActive) {\r\n      const path = item.path === modulePrefix ? item.path : `${modulePrefix}/${item.path}`;\r\n      this.changePath.emit(path)\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { CardStepModel } from '../cards/card-step/card-step.model';\r\nimport { IconModel } from '../icon/icon.model';\r\nimport { NavbarService } from './navbar.service';\r\n\r\n@Component({\r\n  selector: 'kkl-navbar',\r\n  template: (require('./navbar.component.html').default || require('./navbar.component.html')).length ? (require('./navbar.component.html').default || require('./navbar.component.html')) : '',\r\n  styles: [(require('./navbar.component.scss').default || require('./navbar.component.scss')).length ? (require('./navbar.component.scss').default || require('./navbar.component.scss')) : ''],\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n\r\n  @Input() public openIcon: string;\r\n  @Input() public statusStepWidth: number;\r\n  @Input() public logos: IconModel[];\r\n  @Input() public show$: Observable<boolean>;\r\n\r\n  public title$: Observable<string>;\r\n  public status$: Observable<CardStepModel[]>;\r\n\r\n  public isOpen: boolean = false;\r\n  public openLabel: string = 'תפריט';\r\n  public closeLabel: string = 'סגור תפריט';\r\n\r\n  @Output() menuToggle = new EventEmitter();\r\n\r\n  constructor(private navbarService : NavbarService) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.title$ = this.navbarService.getHeadersObs()\r\n    this.status$ = this.navbarService.getStatusObs();\r\n\r\n    console.log(this.status$)\r\n  }\r\n\r\n    public toggleMenu() {\r\n    this.isOpen = !this.isOpen;\r\n    this.menuToggle.emit();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CardStepModel } from '../cards/card-step/card-step.model';\r\nimport { mergeAll } from 'rxjs/operators';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NavbarService {\r\n\r\n\r\n  private headers: { [key: string]: string }\r\n\r\n  private title$: BehaviorSubject<string>;\r\n  private headers$: BehaviorSubject<Observable<string>>;\r\n  private openIcon$: BehaviorSubject<string>;\r\n  private status$: BehaviorSubject<CardStepModel[]>;\r\n  private showStatus$: BehaviorSubject<boolean>;\r\n\r\n  constructor() {\r\n    this.title$ = new BehaviorSubject<string>('');\r\n\r\n    this.status$ = new BehaviorSubject<CardStepModel[]>([]);\r\n    this.showStatus$ = new BehaviorSubject<boolean>(false)\r\n  }\r\n\r\n\r\n  public setHeaders(headers: { [key: string]: string }): void {\r\n    this.headers = headers;\r\n  }\r\n\r\n  public setHeadersObs(headers:Observable<string>): void {\r\n    this.headers$ = new BehaviorSubject<Observable<string>>(headers);\r\n  }\r\n\r\n  public getHeadersObs(): Observable<string> {\r\n    return this.headers$.asObservable().pipe(mergeAll())\r\n  }\r\n\r\n  public getTitleObs(): Observable<string> {\r\n    return this.title$.asObservable();\r\n  }\r\n\r\n  public emitTitle(key: string): void {\r\n    this.title$.next(this.headers[key])\r\n  }\r\n\r\n  public getStatusObs(): Observable<CardStepModel[]> {\r\n    return this.status$.asObservable();\r\n  }\r\n\r\n  public emitStatus(value: CardStepModel[]): void {\r\n    console.log(value)\r\n    this.status$.next(value);\r\n  }\r\n\r\n  public getShowStatusObs(): Observable<boolean> {\r\n    return this.showStatus$.asObservable();\r\n  }\r\n\r\n  public emitShowStatus(value: boolean): void {\r\n    this.showStatus$.next(value);\r\n  }\r\n\r\n  public toggleStatus(show: boolean, status: CardStepModel[]): void {\r\n    show ? this.emitStatus(status) : this.emitStatus([]);\r\n  }\r\n}\r\n","import { Component, Inject, Input, OnInit } from '@angular/core';\r\nimport { Subscription, Observable, of } from 'rxjs';\r\nimport { distinctUntilChanged, map, switchMap } from 'rxjs/operators';\r\nimport {\r\n  CardStepModel,\r\n  StepperDirection,\r\n} from '../../components/cards/card-step/card-step.model';\r\nimport { IconModel } from '../../components/icon/icon.model';\r\nimport { MenuModel } from '../../components/menu/menu.model';\r\nimport { MenuService } from '../../components/menu/menu.service';\r\nimport { NavbarService } from '../../components/navbar/navbar.service';\r\nimport { LayoutService } from '../../screens/layout/layout.service';\r\nimport { RouterService } from '../../utilities/services/route.service';\r\n\r\n@Component({\r\n  selector: 'app-layout-ex',\r\n  template: (require('./layout-ex.component.html').default || require('./layout-ex.component.html')).length ? (require('./layout-ex.component.html').default || require('./layout-ex.component.html')) : '',\r\n  styles: [(require('./layout-ex.component.scss').default || require('./layout-ex.component.scss')).length ? (require('./layout-ex.component.scss').default || require('./layout-ex.component.scss')) : ''],\r\n})\r\nexport class LayoutExComponent implements OnInit {\r\n  @Input() public projectPrefix: string = '';\r\n  @Input() public logos: IconModel[];\r\n  @Input() public status: CardStepModel[];\r\n  @Input() public steps: CardStepModel[];\r\n  @Input() public menu: MenuModel[];\r\n\r\n  private pathSubscription: Subscription;\r\n\r\n  // NAVBAR SECTION\r\n  private headers = { lands: 'מקרקעין', neches: 'מנהלת ספר נכסים' };\r\n  public openIcon: string = 'treegradientlands';\r\n  public showStatusPath: string[] = [this.projectPrefix, 'screen-layout--with-wizard'];\r\n\r\n  // WIZARD SECTION\r\n  public steps$: Observable<CardStepModel[]>;\r\n  public direction: StepperDirection = 'column';\r\n  public hideWizardPath: string[] = ['results', this.projectPrefix];\r\n\r\n  // MENU SECTION\r\n  public menu$: Observable<MenuModel[]>;\r\n\r\n  constructor(\r\n    private menuService: MenuService,\r\n    private navbarService: NavbarService,\r\n    private layoutService: LayoutService,\r\n    private routerService: RouterService\r\n  ) {}\r\n\r\n  // ROUTE METHODS SECTION\r\n  private setCurrentPath() {\r\n    // const path = this.routerService.getCurrentPath();\r\n    // this.layoutService.emitCurrentPath(path);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setCurrentPath();\r\n    this.setNavbar();\r\n    // this.steps$ = this.setWizard();\r\n    // this.menu$ = this.setMenu();\r\n\r\n    if (this.steps) {\r\n      this.steps$ = of(this.steps);\r\n    }\r\n    if (this.menu) {\r\n      this.menu$ = of(this.menu);\r\n    }\r\n    this.subscribeToRouter();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.pathSubscription) {\r\n      this.pathSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private setNavbar() {\r\n    this.navbarService.setHeaders(this.headers);\r\n\r\n    if (this.status) {\r\n      this.navbarService.emitStatus(this.status);\r\n    }\r\n\r\n    this.navbarService.setHeadersObs(of('lands'));\r\n    this.logos = this.logos;\r\n  }\r\n\r\n  private setHeaders() {\r\n    // return this.routerService.getModulePrefixObs().pipe(\r\n    //   distinctUntilChanged(),\r\n    //   map((path: string) => this.headers[path])\r\n    // );\r\n  }\r\n\r\n  private subscribeToRouter() {\r\n    // this.pathSubscription = this.routerService\r\n    //   .getLastPathObs()\r\n    //   .subscribe((path: string) => {\r\n    //     path === this.projectPrefix && this.navbarService.emitTitle(path);\r\n    //     this.layoutService.emitCurrentPath(path);\r\n    //     this.routerService.currentPath$.next(path);\r\n    //   });\r\n  }\r\n\r\n  private setWizard() {\r\n    // return this.routerService.getModulePrefixObs().pipe(\r\n    //   map((path: string) => {\r\n    //     const steps = this.steps;\r\n    //     steps.map((step) => {\r\n    //       if (step.isActive) {\r\n    //         step.unactive();\r\n    //       }\r\n    //       if (step.path === path) {\r\n    //         step.active();\r\n    //       }\r\n    //     });\r\n    //     return steps;\r\n    //   })\r\n    // );\r\n  }\r\n\r\n  private setMenu() {\r\n    // const modulePath$ = this.routerService.getModulePrefixObs();\r\n    // const lastPath$ = this.layoutService.getCurrentPathObs();\r\n    // return modulePath$.pipe(\r\n    //   switchMap((modulePath: string) => {\r\n    //     return lastPath$.pipe(\r\n    //       map((path: string) => {\r\n    //         const menu = this.menuService.setMenu(\r\n    //           this.menu,\r\n    //           modulePath,\r\n    //           'path',\r\n    //           path\r\n    //         );\r\n    //         return menu;\r\n    //       })\r\n    //     );\r\n    //   })\r\n    // );\r\n    // return path$.pipe(\r\n    //   // distinctUntilChanged(),\r\n    //   map((path: string) => {\r\n    //     console.log(path)\r\n    //     return this.menuService.setList(this.menuService.getMenu(), 'path', path);\r\n    //   })\r\n    // )\r\n  }\r\n\r\n  public onChangeModule(step: CardStepModel) {\r\n    // const path: string = `${this.projectPrefix}/${step.path}`;\r\n    // this.routerService.navigate(path);\r\n  }\r\n\r\n  public onChangeMenu(path: string) {\r\n    // path = `${this.projectPrefix}/${path}`;\r\n    // this.routerService.navigate(path);\r\n  }\r\n}\r\n","import { Location } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n\r\nexport class RouterService {\r\n\r\n  private modulePrefix$: BehaviorSubject<string> = new BehaviorSubject('lands');\r\n\r\n  public history: string[] = [];\r\n\r\n  constructor(private router: Router, private location: Location) {\r\n    this.ListenToRoute()\r\n  }\r\n\r\n  public goBack() {\r\n    this.history.pop();\r\n    if (this.history.length > 0) {\r\n      this.location.back();\r\n    } else {\r\n      this.router.navigateByUrl('/');\r\n    }\r\n  }\r\n\r\n  public getCurrentPath(): string {\r\n    return this.setLastPath(this.router.url);\r\n  }\r\n\r\n  public ListenToRoute(): Observable<string> {\r\n    return this.router.events.pipe(\r\n      filter((event) => event instanceof NavigationEnd),\r\n      map((event: any) => {\r\n        this.history.push(event.urlAfterRedirects);\r\n        return event.url;\r\n      })\r\n    );\r\n  }\r\n\r\n  public getLastPathObs(): Observable<string> {\r\n    return this.ListenToRoute().pipe(\r\n      map((path: string) => this.setLastPath(path))\r\n    );\r\n  }\r\n\r\n  public async navigate(path: string) {\r\n    try {\r\n      await this.router.navigateByUrl(path);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  public setLastPath(url: string) {\r\n    const path = url.split('/');\r\n    return path[path.length - 1];\r\n  }\r\n\r\n  public getModulePrefixObs(): Observable<string> {\r\n    return this.modulePrefix$.asObservable();\r\n  }\r\n\r\n  public emitModulePrefix(path: string): void {\r\n    this.modulePrefix$.next(path);\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":""}