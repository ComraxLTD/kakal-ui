{"version":3,"file":"main.afe2714b04b8a0aa2592.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AAOA;AAYA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AA7BA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AANA;AALA;AACA;AACA;AACA;AACA;AAaA;AAZA;AAAA","sources":["webpack://lib-kakal-ui/./src/lib/app/screens/layout/layout.component.ts"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { IconModel } from '../../components/icon/icon.model';\r\nimport { LayoutService } from './layout.service';\r\n\r\n@Component({\r\n  selector: 'kkl-layout',\r\n  template: (require('./layout.component.html').default || require('./layout.component.html')).length ? (require('./layout.component.html').default || require('./layout.component.html')) : '',\r\n  styles: [(require('./layout.component.scss').default || require('./layout.component.scss')).length ? (require('./layout.component.scss').default || require('./layout.component.scss')) : '']\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n\r\n  @Input() public openIcon: string;\r\n  @Input() public statusStepWidth: number;\r\n  @Input() public logos: IconModel[];\r\n  @Input() public hideWizardPath: string[];\r\n  @Input() public showStatusPath: string[];\r\n\r\n  public currentPath$: Observable<string>;\r\n  public wizard$: Observable<boolean>;\r\n  public show$: Observable<boolean>;\r\n\r\n  constructor(private layoutService: LayoutService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.currentPath$ = this.layoutService.getCurrentPathObs();\r\n    this.show$ = this.handleState(this.showStatusPath);\r\n    this.wizard$ = this.handleState(this.hideWizardPath);\r\n  }\r\n\r\n  private handleState(list: string[]) {\r\n    return this.currentPath$.pipe(\r\n      map((path: string) => {\r\n        return this.findPath(list, path);\r\n      })\r\n    );\r\n  }\r\n\r\n  private findPath(list: any[], value: string): boolean {\r\n    return !!list.find((path: string) => path == value);\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":""}