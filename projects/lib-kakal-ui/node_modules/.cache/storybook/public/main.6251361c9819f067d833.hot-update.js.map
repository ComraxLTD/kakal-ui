{"version":3,"file":"main.6251361c9819f067d833.hot-update.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAMA;AAWA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AA1DA;AAHA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AAGA;AACA;AACA;AAOA;AAoBA;AACA;AACA;AACA;AAfA;AAMA;AACA;AASA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAKA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AA7DA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAGA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AAGA;AAAA;;AAAA;AAlBA;AALA;AACA;AACA;AACA;AACA;AAsBA;AArBA;AAAA","sources":["webpack://lib-kakal-ui/./src/lib/app/components/navbar/navbar.service.ts","webpack://lib-kakal-ui/./src/lib/app/examples/layout-ex/layout-ex.component.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { mergeAll } from 'rxjs/operators';\r\nimport { CardStepModel } from '../../cards/card-step/card-step.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NavbarService {\r\n\r\n\r\n  private headers: { [key: string]: string }\r\n\r\n  private title$: BehaviorSubject<string>;\r\n  private headers$: BehaviorSubject<Observable<string>>;\r\n  private openIcon$: BehaviorSubject<string>;\r\n  private status$: BehaviorSubject<CardStepModel[]>;\r\n  private showStatus$: BehaviorSubject<boolean>;\r\n\r\n  constructor() {\r\n    this.title$ = new BehaviorSubject<string>('');\r\n\r\n    this.status$ = new BehaviorSubject<CardStepModel[]>([]);\r\n    this.showStatus$ = new BehaviorSubject<boolean>(false)\r\n  }\r\n\r\n\r\n  public setHeaders(headers: { [key: string]: string }): void {\r\n    this.headers = headers;\r\n  }\r\n\r\n  public setHeadersObs(headers:Observable<string>): void {\r\n    this.headers$ = new BehaviorSubject<Observable<string>>(headers);\r\n  }\r\n\r\n  public getHeadersObs(): Observable<string> {\r\n    return this.headers$.asObservable().pipe(mergeAll())\r\n  }\r\n\r\n  public getTitleObs(): Observable<string> {\r\n    return this.title$.asObservable();\r\n  }\r\n\r\n  public emitTitle(key: string): void {\r\n    this.title$.next(this.headers[key])\r\n  }\r\n\r\n  public getStatusObs(): Observable<CardStepModel[]> {\r\n    return this.status$.asObservable();\r\n  }\r\n\r\n  public emitStatus(value: CardStepModel[]): void {\r\n    this.status$.next(value);\r\n  }\r\n\r\n  public getShowStatusObs(): Observable<boolean> {\r\n    return this.showStatus$.asObservable();\r\n  }\r\n\r\n  public emitShowStatus(value: boolean): void {\r\n    this.showStatus$.next(value);\r\n  }\r\n\r\n  public toggleStatus(show: boolean, status: CardStepModel[]): void {\r\n    show ? this.emitStatus(status) : this.emitStatus([]);\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { CardStepModel, StepperDirection } from '../../components/cards/card-step/card-step.model';\r\nimport { IconModel } from '../../components/icon/icon.model';\r\nimport { MenuModel } from '../../components/menu/menu.model';\r\nimport { MenuService } from '../../components/menu/menu.service';\r\nimport { NavbarService } from '../../components/navbar/navbar.service';\r\nimport { StepperService } from '../../components/stepper/stepper.service';\r\n\r\n@Component({\r\n  selector: 'app-layout-ex',\r\n  template: (require('./layout-ex.component.html').default || require('./layout-ex.component.html')).length ? (require('./layout-ex.component.html').default || require('./layout-ex.component.html')) : '',\r\n  styles: [(require('./layout-ex.component.scss').default || require('./layout-ex.component.scss')).length ? (require('./layout-ex.component.scss').default || require('./layout-ex.component.scss')) : '']\r\n})\r\nexport class LayoutExComponent implements OnInit {\r\n\r\n  // NAVBAR DATA SECTION\r\n\r\n  // uniqu gradient icon per project\r\n  @Input() public openIcon: string;\r\n\r\n  @Input() public logos: IconModel[];\r\n  @Input() public showStatusPath: string[] = [];\r\n  @Input() public prefix: string;\r\n  @Input() public status: CardStepModel[];\r\n\r\n  // WIZARD SECTION\r\n  @Input() public steps: CardStepModel[];\r\n  @Input() public direction: StepperDirection = 'column';\r\n  @Input() public hideWizardPath: string[] = [];\r\n\r\n  // MENU SECTION\r\n  @Input() public menu: MenuModel[];\r\n\r\n  constructor(\r\n    private stepperService: StepperService,\r\n    private menuService: MenuService,\r\n    private navbarService: NavbarService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.subscribeToModulePrefix();\r\n    this.subscribeToRouter();\r\n    this.setProps();\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.status) {\r\n      this.navbarService.emitStatus(this.status);\r\n    }\r\n  }\r\n\r\n  // SET PROPS METHOD\r\n  private setProps() {\r\n\r\n  }\r\n\r\n  private subscribeToRouter() {\r\n  }\r\n\r\n  private subscribeToModulePrefix() {\r\n  }\r\n\r\n  private setSteps(modulePrefix: string) {\r\n    this.steps = this.stepperService.setSteps(\r\n      this.steps,\r\n      'path',\r\n      modulePrefix\r\n    );\r\n  }\r\n\r\n  private setMenu(path: string) {\r\n  }\r\n\r\n  public onChangeStep(step: CardStepModel) {\r\n  }\r\n\r\n  public onChangePath(data: { link: string, path: string }) {\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":""}