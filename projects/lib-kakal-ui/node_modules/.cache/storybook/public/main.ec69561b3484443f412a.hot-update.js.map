{"version":3,"file":"main.ec69561b3484443f412a.hot-update.js","mappings":";;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;;;;;;;AAOA;;AAQA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;;;;;;AAMA;AAOA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAOA;AAEA;AAAA;AACA;AAEA;AAGA;AACA;AAOA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AChKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAGA;AACA;AAEA;AACA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChxMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvzPA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAMA;;;;;;;;;;;;;;;;;;;AClCA;AACA;AAOA;AAIA;AACA;AAHA;AAAA;AAAA;AAAA;AAFA;AALA;AACA;AACA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;;;;;;;;;ACRA;AAGA;AAOA;AAqBA;AAbA;AACA;AACA;AACA;AACA;AACA;AAMA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAhCA;AAAA;AAAA;AAAA;AAiBA;AAAA;AAAA;AAAA;AAnBA;AALA;AACA;AACA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;;;;;;;;;ACVA;AAGA;AAOA;AAqBA;AAbA;AACA;AACA;AACA;AACA;AACA;AAMA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAjCA;AAAA;AAAA;AAAA;AAiBA;AAAA;AAAA;AAAA;AAnBA;AALA;AACA;AACA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;;;;;;;;;ACVA;AAEA;AAMA;AAOA;AAFA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAhBA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AALA;AAJA;AACA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AAOA;AAkBA;AACA;AAVA;AAGA;AACA;AAEA;AACA;AAKA;AAEA;;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AA5EA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAhBA;AALA;AACA;AACA;AACA;AACA;AAoBA;AAnBA;AAAA;;;;;;;;;;;;;;ACIA;AAgBA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC5DA;AACA;AAUA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAIA;AACA;AAIA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAKA;AACA;AAEA;AACA;AACA;AAvDA;AAHA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;;;;;;;;ACXA;AAOA;AAgBA;AANA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AApCA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAGA;AAAA;;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAdA;AALA;AACA;AACA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;;;;;;;ACPA;AAOA;AAEA;AAEA;AACA;AAEA;AAPA;AALA;AACA;AACA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AASA;AAqBA;AACA;AAZA;AAIA;AACA;AAEA;AACA;AACA;AAKA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AAtFA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAnBA;AALA;AACA;AACA;AACA;AACA;AAuBA;AAtBA;AAAA;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AASA;AAKA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AAbA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAHA;AALA;AACA;AACA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;;;;;;;;;;ACVA;AAEA;AAEA;AAQA;AAuBA;AARA;AAIA;AAIA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AApDA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;;AAGA;AAEA;AAAA;AAAA;AAAA;AAfA;AALA;AACA;AACA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;;;;;ACZA;AAQA;AAGA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACHA;AAWA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AAOA;AAiBA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzDA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAVA;AALA;AACA;AACA;AACA;AACA;AAkBA;AAjBA;AAAA;;;;;;;;;;;;;;;;;;;ACXA;AAEA;AAOA;AASA;AAFA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAtBA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAPA;AALA;AACA;AACA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;;;;;ACTA;AAGA;AAWA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC3CA;AACA;AAQA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAYA;AATA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AASA;AAAA;AAAA;AAAA;AAbA;AALA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;ACTA;AAQA;AAKA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AAEA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAlEA;AAHA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;;;;;;;ACRA;AAOA;AAUA;AARA;AAIA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAxBA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AARA;AALA;AACA;AACA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;;;;;;;;;ACPA;AAKA;AAOA;AAgBA;AAAA;AANA;AACA;AACA;AAEA;AAIA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AA5BA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAUA;AAAA;;AAAA;AAdA;AALA;AACA;AACA;AACA;AACA;AAiBA;AAhBA;AAAA;;;;;;;;;;;;;;;;;;ACZA;AACA;AAMA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAvCA;AAHA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;;;;;;;;;ACPA;AACA;AAOA;AAeA;AARA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AArBA;AAAA;AAAA;AAAA;AAEA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;AAAA;AAAA;AAPA;AALA;AACA;AACA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;;;;;;;;;ACRA;AACA;AAOA;AAeA;AAJA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AAXA;AALA;AACA;AACA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;;;;ACPA;AAKA;AAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;ACvBA;AAOA;AAQA;AAWA;AAFA;AAEA;AAEA;AACA;AACA;AACA;AAdA;AAAA;;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;;AAAA;AATA;AALA;AACA;AACA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;ACfA;AAWA;AAEA;AACA;AA0BA;AA0BA;AAAA;AAJA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AA3FA;AAAA;AAAA;AAAA;AAEA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAaA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAxBA;AANA;AACA;AACA;AACA;AACA;AACA;AA2BA;AA1BA;AAAA;;;;;;;;;;;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AAOA;AAiBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AA7DA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAVA;AALA;AACA;AACA;AACA;AACA;AAmBA;AAlBA;AAAA;;;;;;;;;;;;;;;;;;ACXA;AACA;AAMA;AAKA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAlBA;AAHA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;;;;;;;ACPA;AAQA;AAMA;AAEA;AACA;AAEA;AATA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAJA;AALA;AACA;AACA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;ACRA;AAKA;AACA;AACA;AACA;AAOA;AAoBA;AACA;AACA;AACA;AAfA;AAMA;AACA;AASA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAKA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AA9DA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAGA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AAGA;AAAA;;AAAA;AAlBA;AALA;AACA;AACA;AACA;AACA;AAsBA;AArBA;AAAA;;;;;;;;;;;;;;;;;;;;ACfA;AAEA;AAIA;AAOA;AACA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AANA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AAJA;AALA;AACA;AACA;AACA;AACA;AAEA;AADA;AAAA;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AAEA;AAOA;AAQA;AAEA;AACA;AAVA;AAAA;AAAA;AAAA;AAEA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AANA;AALA;AACA;AACA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;;;;;;;;;ACVA;AAGA;AAOA;AAYA;AACA;AAHA;AAIA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAKA;AAAA;AAAA;AAAA;AAVA;AALA;AACA;AACA;AACA;AACA;AAcA;AAbA;AAAA;;;;;;;;;;;;;;;;;;;;ACVA;AAGA;AACA;AAOA;AAYA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvDA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AACA;AAAA;;AAAA;AARA;AALA;AACA;AACA;AACA;AACA;AAcA;AAbA;AAAA;;;;;;;;;;;;;;;;;;ACXA;AACA;AAKA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAdA;AAHA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;;;;;;;;;;ACNA;AAOA;AACA;AAKA;AASA;AARA;AAQA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AA5BA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;;AAAA;AAPA;AAHA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;;;;;;;;;;ACbA;AAEA;AACA;AAKA;AAWA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAhDA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AAKA;AAAA;;AAAA;AACA;AAAA;;AAAA;AATA;AAHA;AACA;AACA;AAYA;AAXA;AAAA;;;;;;;;;;;;;;;;;;;ACRA;AACA;AAKA;AAUA;AATA;AASA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAhDA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AARA;AAHA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;;;;ACYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://lib-kakal-ui/./src/lib/app/components/form/form/form.component.scss","webpack://lib-kakal-ui/./src/lib/app/components/navigation/navbar-bottom/navbar-bottom.component.scss","webpack://lib-kakal-ui/./src/lib/app/components/navigation/navbar/navbar.component.scss","webpack://lib-kakal-ui/./src/lib/app/components/pagination/pagination.component.scss","webpack://lib-kakal-ui/./src/lib/app/components/table/table.component.scss","webpack://lib-kakal-ui/./src/lib/app/screens/dashboard/dashboard.component.scss","webpack://lib-kakal-ui/./src/lib/app/components/cards/card-status/card-status.component.html","webpack://lib-kakal-ui/./src/lib/app/components/cards/card-step/card-step.component.html","webpack://lib-kakal-ui/./src/lib/app/components/cards/card-wizard/card-wizard.component.html","webpack://lib-kakal-ui/./src/lib/app/components/form/form/form.component.html","webpack://lib-kakal-ui/./src/lib/app/components/icon/icon.component.html","webpack://lib-kakal-ui/./src/lib/app/components/menu/menu.component.html","webpack://lib-kakal-ui/./src/lib/app/components/navigation/navbar-bottom/navbar-bottom.component.html","webpack://lib-kakal-ui/./src/lib/app/components/navigation/navbar/navbar.component.html","webpack://lib-kakal-ui/./src/lib/app/components/status/status.component.html","webpack://lib-kakal-ui/./src/lib/app/components/stepper/stepper.component.html","webpack://lib-kakal-ui/./src/lib/app/components/table/table.component.html","webpack://lib-kakal-ui/./src/lib/app/components/typography/typography.component.html","webpack://lib-kakal-ui/./src/lib/app/examples/dashboard-ex/dashboard-ex.component.html","webpack://lib-kakal-ui/./src/lib/app/examples/layout-ex/layout-ex.component.html","webpack://lib-kakal-ui/./src/lib/app/examples/stepper-ex/stepper-ex.component.html","webpack://lib-kakal-ui/./src/lib/app/examples/table-ex/table-ex.component.html","webpack://lib-kakal-ui/./src/lib/app/screens/dashboard/dashboard.component.html","webpack://lib-kakal-ui/./src/lib/app/screens/layout/layout.component.html","webpack://lib-kakal-ui/./src/lib/stories/Cards.stories.ts","webpack://lib-kakal-ui/./src/lib/stories/ExpandPanel.stories.ts","webpack://lib-kakal-ui/./src/lib/stories/Menu.stories.ts","webpack://lib-kakal-ui/./src/lib/stories/Navbar.stories.ts","webpack://lib-kakal-ui/./src/lib/stories/NavbarBottom.stories.ts","webpack://lib-kakal-ui/./src/lib/stories/Stepper.stories.ts","webpack://lib-kakal-ui/./src/lib/stories/Table.stories.ts","webpack://lib-kakal-ui/./src/lib/stories/Typography.stories.ts","webpack://lib-kakal-ui/./src/lib/stories/screens/Dashboard.stories.ts","webpack://lib-kakal-ui/./src/lib/stories/screens/Layout.stories.ts","webpack://lib-kakal-ui/./src/lib/stories/screens/Login.stories.ts","webpack://lib-kakal-ui/./src/lib/app/components/cards/card-status/card-status.component.ts","webpack://lib-kakal-ui/./src/lib/app/components/cards/card-step/card-step.component.ts","webpack://lib-kakal-ui/./src/lib/app/components/cards/card-wizard/card-wizard.component.ts","webpack://lib-kakal-ui/./src/lib/app/components/columns/column-filter/column-filter.component.ts","webpack://lib-kakal-ui/./src/lib/app/components/columns/column-form/column-form.component.ts","webpack://lib-kakal-ui/./src/lib/app/components/columns/column.model.ts","webpack://lib-kakal-ui/./src/lib/app/components/columns/columns.service.ts","webpack://lib-kakal-ui/./src/lib/app/components/expand-panel/expand-panel.component.ts","webpack://lib-kakal-ui/./src/lib/app/components/form/form-group/form-group.component.ts","webpack://lib-kakal-ui/./src/lib/app/components/form/form-input/form-input.component.ts","webpack://lib-kakal-ui/./src/lib/app/components/form/form-radio/form-radio.component.ts","webpack://lib-kakal-ui/./src/lib/app/components/form/form/form.component.ts","webpack://lib-kakal-ui/./src/lib/app/components/form/models/question-radio.ts","webpack://lib-kakal-ui/./src/lib/app/components/form/models/question.model.ts","webpack://lib-kakal-ui/./src/lib/app/components/icon/icon.component.ts","webpack://lib-kakal-ui/./src/lib/app/components/menu-item/menu-item.component.ts","webpack://lib-kakal-ui/./src/lib/app/components/menu-item/menu-item.model.ts","webpack://lib-kakal-ui/./src/lib/app/components/menu/menu.component.ts","webpack://lib-kakal-ui/./src/lib/app/components/menu/menu.service.ts","webpack://lib-kakal-ui/./src/lib/app/components/navigation/navbar-bottom/navbar-bottom.component.ts","webpack://lib-kakal-ui/./src/lib/app/components/navigation/navbar/navbar.component.ts","webpack://lib-kakal-ui/./src/lib/app/components/navigation/navbar/navbar.service.ts","webpack://lib-kakal-ui/./src/lib/app/components/pagination/pagination.component.ts","webpack://lib-kakal-ui/./src/lib/app/components/status/status.component.ts","webpack://lib-kakal-ui/./src/lib/app/components/status/status.model.ts","webpack://lib-kakal-ui/./src/lib/app/components/stepper/stepper.component.ts","webpack://lib-kakal-ui/./src/lib/app/components/table/table.component.ts","webpack://lib-kakal-ui/./src/lib/app/components/typography/typography.component.ts","webpack://lib-kakal-ui/./src/lib/app/components/typography/typography.service.ts","webpack://lib-kakal-ui/./src/lib/app/examples/dashboard-ex/dashboard-ex.component.ts","webpack://lib-kakal-ui/./src/lib/app/examples/layout-ex/layout-ex.component.ts","webpack://lib-kakal-ui/./src/lib/app/examples/stepper-ex/stepper-ex.component.ts","webpack://lib-kakal-ui/./src/lib/app/examples/table-ex/table-ex.component.ts","webpack://lib-kakal-ui/./src/lib/app/screens/dashboard/dashboard.component.ts","webpack://lib-kakal-ui/./src/lib/app/screens/layout/layout.component.ts","webpack://lib-kakal-ui/./src/lib/app/screens/layout/layout.service.ts","webpack://lib-kakal-ui/./src/lib/app/utilities/directives/color.directive.ts","webpack://lib-kakal-ui/./src/lib/app/utilities/directives/size.directive.ts","webpack://lib-kakal-ui/./src/lib/app/utilities/directives/variant.directive.ts","webpack://lib-kakal-ui/./src/lib/styles/theme.ts"],"sourcesContent":["export default \"* {\\n  font-family: \\\"open sans hebrew\\\" !important;\\n  src: url(\\\"../assets/fonts/opanSansHebrew/OpenSansHebrew-Regular.ttf\\\") format(\\\"opentype\\\") !important;\\n}\\n\\nhtml,\\nbody,\\napp-root,\\n#root {\\n  height: 100%;\\n  box-sizing: border-box;\\n  font-size: 10px;\\n}\\n\\nbody {\\n  margin: 0;\\n  padding: 0;\\n  font-family: \\\"open sans hebrew\\\", \\\"Helvetica Neue\\\", sans-serif;\\n  src: url(\\\"../assets/fonts/opanSansHebrew/OpenSansHebrew-Regular.ttf\\\") format(\\\"opentype\\\") !important;\\n  box-sizing: border-box;\\n}\\n\\n::ng-deep mat-grid-list,\\nmat-grid-tile {\\n  height: 100%;\\n  width: 100%;\\n}\\n\\n.material-icons {\\n  font-family: \\\"Material Icons\\\" !important;\\n}\\n\\n@media screen and (max-width: 1280px) {\\n  html {\\n    font-size: 8px;\\n  }\\n}\\n/* iPads (landscape) ----------- */\\n@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation: landscape) {\\n  html {\\n    font-size: 8px;\\n  }\\n}\\n/* iPads (portrait) ----------- */\\n@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation: portrait) {\\n  html {\\n    font-size: 10px;\\n  }\\n}\\nform,\\napp-form-input {\\n  width: 100%;\\n  font-size: 16px;\\n}\\n\\nmat-grid-tile.button-tile ::ng-deep div.mat-grid-tile-content {\\n  align-items: start !important;\\n  justify-content: start !important;\\n}\";","export default \"* {\\n  font-family: \\\"open sans hebrew\\\" !important;\\n  src: url(\\\"../assets/fonts/opanSansHebrew/OpenSansHebrew-Regular.ttf\\\") format(\\\"opentype\\\") !important;\\n}\\n\\nhtml,\\nbody,\\napp-root,\\n#root {\\n  height: 100%;\\n  box-sizing: border-box;\\n  font-size: 10px;\\n}\\n\\nbody {\\n  margin: 0;\\n  padding: 0;\\n  font-family: \\\"open sans hebrew\\\", \\\"Helvetica Neue\\\", sans-serif;\\n  src: url(\\\"../assets/fonts/opanSansHebrew/OpenSansHebrew-Regular.ttf\\\") format(\\\"opentype\\\") !important;\\n  box-sizing: border-box;\\n}\\n\\n::ng-deep mat-grid-list,\\nmat-grid-tile {\\n  height: 100%;\\n  width: 100%;\\n}\\n\\n.material-icons {\\n  font-family: \\\"Material Icons\\\" !important;\\n}\\n\\n@media screen and (max-width: 1280px) {\\n  html {\\n    font-size: 8px;\\n  }\\n}\\n/* iPads (landscape) ----------- */\\n@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation: landscape) {\\n  html {\\n    font-size: 8px;\\n  }\\n}\\n/* iPads (portrait) ----------- */\\n@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation: portrait) {\\n  html {\\n    font-size: 10px;\\n  }\\n}\\n:host {\\n  width: 100%;\\n}\\n\\nmat-toolbar {\\n  padding-left: 40px;\\n  padding-right: 40px;\\n}\\n\\ndiv {\\n  height: 100%;\\n}\\n\\nbutton.prev {\\n  background-color: #fff !important;\\n}\";","export default \"* {\\n  font-family: \\\"open sans hebrew\\\" !important;\\n  src: url(\\\"../assets/fonts/opanSansHebrew/OpenSansHebrew-Regular.ttf\\\") format(\\\"opentype\\\") !important;\\n}\\n\\nhtml,\\nbody,\\napp-root,\\n#root {\\n  height: 100%;\\n  box-sizing: border-box;\\n  font-size: 10px;\\n}\\n\\nbody {\\n  margin: 0;\\n  padding: 0;\\n  font-family: \\\"open sans hebrew\\\", \\\"Helvetica Neue\\\", sans-serif;\\n  src: url(\\\"../assets/fonts/opanSansHebrew/OpenSansHebrew-Regular.ttf\\\") format(\\\"opentype\\\") !important;\\n  box-sizing: border-box;\\n}\\n\\n::ng-deep mat-grid-list,\\nmat-grid-tile {\\n  height: 100%;\\n  width: 100%;\\n}\\n\\n.material-icons {\\n  font-family: \\\"Material Icons\\\" !important;\\n}\\n\\n@media screen and (max-width: 1280px) {\\n  html {\\n    font-size: 8px;\\n  }\\n}\\n/* iPads (landscape) ----------- */\\n@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation: landscape) {\\n  html {\\n    font-size: 8px;\\n  }\\n}\\n/* iPads (portrait) ----------- */\\n@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation: portrait) {\\n  html {\\n    font-size: 10px;\\n  }\\n}\\napp-card-status {\\n  width: 100%;\\n}\\n\\ndiv {\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.navbar {\\n  height: 10rem;\\n  -webkit-backdrop-filter: blur(15px) saturate(70%) contrast(70%) brightness(130%);\\n          backdrop-filter: blur(15px) saturate(70%) contrast(70%) brightness(130%);\\n  background-color: #fff !important;\\n  box-sizing: border-box;\\n}\";","export default \"* {\\n  font-family: \\\"open sans hebrew\\\" !important;\\n  src: url(\\\"../assets/fonts/opanSansHebrew/OpenSansHebrew-Regular.ttf\\\") format(\\\"opentype\\\") !important;\\n}\\n\\nhtml,\\nbody,\\napp-root,\\n#root {\\n  height: 100%;\\n  box-sizing: border-box;\\n  font-size: 10px;\\n}\\n\\nbody {\\n  margin: 0;\\n  padding: 0;\\n  font-family: \\\"open sans hebrew\\\", \\\"Helvetica Neue\\\", sans-serif;\\n  src: url(\\\"../assets/fonts/opanSansHebrew/OpenSansHebrew-Regular.ttf\\\") format(\\\"opentype\\\") !important;\\n  box-sizing: border-box;\\n}\\n\\n::ng-deep mat-grid-list,\\nmat-grid-tile {\\n  height: 100%;\\n  width: 100%;\\n}\\n\\n.material-icons {\\n  font-family: \\\"Material Icons\\\" !important;\\n}\\n\\n@media screen and (max-width: 1280px) {\\n  html {\\n    font-size: 8px;\\n  }\\n}\\n/* iPads (landscape) ----------- */\\n@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation: landscape) {\\n  html {\\n    font-size: 8px;\\n  }\\n}\\n/* iPads (portrait) ----------- */\\n@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation: portrait) {\\n  html {\\n    font-size: 10px;\\n  }\\n}\\n.pagination {\\n  height: 5vh;\\n}\\n.pagination ::ng-deep .ngx-pagination .current,\\n.pagination .btn-info {\\n  background-color: transparent !important;\\n  border: 2px solid #d6a348 !important;\\n  font-weight: 550;\\n  color: #d6a348 !important;\\n  border-radius: 5px !important;\\n}\\n.pagination ::ng-deep li.pagination-next > a,\\n.pagination ::ng-deep li.pagination-previous > a {\\n  color: #d6a348 !important;\\n}\\n.pagination ::ng-deep .pagination-next {\\n  padding-left: 40px !important;\\n}\\n.pagination ::ng-deep .pagination-previous {\\n  padding-right: 40px !important;\\n}\\n.pagination ::ng-deep .pagination-next a::after,\\n.pagination ::ng-deep .pagination-next.disabled::after {\\n  display: none !important;\\n}\\n.pagination ::ng-deep li.pagination-previous a::before,\\n.pagination ::ng-deep li.pagination-previous.disabled::before {\\n  display: none !important;\\n}\";","export default \"* {\\n  font-family: \\\"open sans hebrew\\\" !important;\\n  src: url(\\\"../assets/fonts/opanSansHebrew/OpenSansHebrew-Regular.ttf\\\") format(\\\"opentype\\\") !important;\\n}\\n\\nhtml,\\nbody,\\napp-root,\\n#root {\\n  height: 100%;\\n  box-sizing: border-box;\\n  font-size: 10px;\\n}\\n\\nbody {\\n  margin: 0;\\n  padding: 0;\\n  font-family: \\\"open sans hebrew\\\", \\\"Helvetica Neue\\\", sans-serif;\\n  src: url(\\\"../assets/fonts/opanSansHebrew/OpenSansHebrew-Regular.ttf\\\") format(\\\"opentype\\\") !important;\\n  box-sizing: border-box;\\n}\\n\\n::ng-deep mat-grid-list,\\nmat-grid-tile {\\n  height: 100%;\\n  width: 100%;\\n}\\n\\n.material-icons {\\n  font-family: \\\"Material Icons\\\" !important;\\n}\\n\\n@media screen and (max-width: 1280px) {\\n  html {\\n    font-size: 8px;\\n  }\\n}\\n/* iPads (landscape) ----------- */\\n@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation: landscape) {\\n  html {\\n    font-size: 8px;\\n  }\\n}\\n/* iPads (portrait) ----------- */\\n@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation: portrait) {\\n  html {\\n    font-size: 10px;\\n  }\\n}\\nmat-table {\\n  width: 100%;\\n  height: 100%;\\n  background-color: transparent !important;\\n}\\n\\nmat-cell {\\n  height: inherit;\\n}\\nmat-cell.center {\\n  justify-content: center;\\n}\\n\\nmat-header-cell.center {\\n  justify-content: center;\\n}\\n\\nmat-header-row.accent {\\n  border-bottom: #ff6f2e solid 3px;\\n}\\n\\nmat-header-row.primary {\\n  border-bottom: #d6a348 solid 3px;\\n}\\n\\nmat-row {\\n  height: 5rem;\\n}\\n\\n.cell-input {\\n  width: 85%;\\n}\\n.cell-input app-column-form {\\n  width: inherit;\\n}\\n\\n::ng-deep .mat-sort-header-arrow {\\n  color: #d6a348 !important;\\n}\";","export default \"* {\\n  font-family: \\\"open sans hebrew\\\" !important;\\n  src: url(\\\"../assets/fonts/opanSansHebrew/OpenSansHebrew-Regular.ttf\\\") format(\\\"opentype\\\") !important;\\n}\\n\\nhtml,\\nbody,\\napp-root,\\n#root {\\n  height: 100%;\\n  box-sizing: border-box;\\n  font-size: 10px;\\n}\\n\\nbody {\\n  margin: 0;\\n  padding: 0;\\n  font-family: \\\"open sans hebrew\\\", \\\"Helvetica Neue\\\", sans-serif;\\n  src: url(\\\"../assets/fonts/opanSansHebrew/OpenSansHebrew-Regular.ttf\\\") format(\\\"opentype\\\") !important;\\n  box-sizing: border-box;\\n}\\n\\n::ng-deep mat-grid-list,\\nmat-grid-tile {\\n  height: 100%;\\n  width: 100%;\\n}\\n\\n.material-icons {\\n  font-family: \\\"Material Icons\\\" !important;\\n}\\n\\n@media screen and (max-width: 1280px) {\\n  html {\\n    font-size: 8px;\\n  }\\n}\\n/* iPads (landscape) ----------- */\\n@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation: landscape) {\\n  html {\\n    font-size: 8px;\\n  }\\n}\\n/* iPads (portrait) ----------- */\\n@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation: portrait) {\\n  html {\\n    font-size: 10px;\\n  }\\n}\\n:host {\\n  width: 100%;\\n  height: 100%;\\n}\\n\\ndiv {\\n  height: calc(100% - 10rem);\\n}\\n\\ndiv.container {\\n  height: inherit;\\n  width: 40%;\\n}\\n\\nkkl-dashboard-card {\\n  width: 100;\\n  height: 100%;\\n}\";","export default \"<div class=\\\"kkl-card-status\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n  <div appVariant appSize  [type]=\\\"status.type\\\" [matBadge]=\\\"status?.value\\\" matBadgeColor=\\\"accent\\\"\\r\\n    matBadgeSize=\\\"medium\\\">\\r\\n    <div class=\\\"icon-container\\\">\\r\\n      <kkl-icon [key]=\\\"status.svgUrl\\\" [size]=\\\"3.5\\\"></kkl-icon>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"text-container\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"end start\\\" [fxFlexOffset]=\\\"5\\\">\\r\\n    <kkl-typography [size]=\\\"1.2\\\" [bold]=\\\"600\\\">\\r\\n      {{ status.label }}\\r\\n    </kkl-typography>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<div [ngClass]=\\\"type\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n  <div appSize [size]=\\\"6\\\" (click)=\\\"onStepClick()\\\" [matBadge]=\\\"step.value\\\" matBadgeColor=\\\"accent\\\" matBadgeSize=\\\"medium\\\">\\r\\n    <mat-card appVariant [type]=\\\"step.type\\\" [variant]=\\\"step.variant\\\" [ngClass]=\\\"{\\r\\n        'mat-elevation-z0': true,\\r\\n        active: (active$ | async)\\r\\n      }\\\">\\r\\n      <mat-card-content appButton dir=\\\"rtl\\\">\\r\\n        <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n          <div fxFlex=\\\"80\\\">\\r\\n            <kkl-icon [active$]=\\\"active$\\\" [color]=\\\"'default'\\\" type=\\\"svg\\\" [key]=\\\"step.svgUrl || ''\\\" [size]=\\\"step.size\\\">\\r\\n            </kkl-icon>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n  <div class=\\\"label-container\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxFlex=\\\"40\\\">\\r\\n    <kkl-typography [ngClass]=\\\"{ active: (active$ | async) }\\\" [classes]=\\\"stepTextClasses\\\"\\r\\n      [activeClasses]=\\\"activeStepTextClasses\\\" [active$]=\\\"active$\\\" [size]=\\\"1.1\\\">\\r\\n      {{ step.label }}\\r\\n    </kkl-typography>\\r\\n  </div>\\r\\n</div>\";","export default \"<div [ngClass]=\\\"type\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxFill>\\r\\n    <div class=\\\"card-svg-container\\\" (click)=\\\"onStepClick()\\\" fxFill>\\r\\n      <mat-card appVariant [type]=\\\"step.type\\\" [variant]=\\\"step.variant\\\" [ngClass]=\\\"{\\r\\n          'mat-elevation-z0': true,\\r\\n          active: (active$ | async)\\r\\n        }\\\">\\r\\n        <mat-card-content kklButton>\\r\\n          <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n            <div fxFlex=\\\"80\\\">\\r\\n              <kkl-icon  [active$]=\\\"active$\\\" [color]=\\\"'primary'\\\" [key]=\\\"step.svgUrl\\\" [size]=\\\"step.size\\\">\\r\\n              </kkl-icon>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"15\\\" [ngClass]=\\\"{ active: (active$ | async) }\\\" fxLayout=\\\"column\\\"\\r\\n              fxLayoutAlign=\\\"end center\\\">\\r\\n              <kkl-typography [active$]=\\\"active$\\\" [classes]=\\\"wizardClasses\\\" [activeClasses]=\\\"activeWizardClasses\\\">\\r\\n                {{ step.label }}\\r\\n              </kkl-typography>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </div>\\r\\n  \";","export default \"<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxFill>\\r\\n\\r\\n  <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"formGroup\\\">\\r\\n\\r\\n    <mat-grid-list [cols]=\\\"cols\\\" [rowHeight]=\\\"(rowHeight || 9) + 'rem'\\\" [gutterSize]=\\\"(gutter) + 'rem'\\\" [dir]=\\\"'rtl'\\\">\\r\\n\\r\\n      <ng-container *ngFor=\\\"let question of questions\\\">\\r\\n\\r\\n        <ng-container [ngSwitch]=\\\"question.controlType\\\">\\r\\n\\r\\n\\r\\n          <!-- GROUP INPUT SECTION -->\\r\\n          <ng-container *ngSwitchCase=\\\"'group'\\\">\\r\\n            <kkl-form [group]=\\\"question.group\\\"></kkl-form>\\r\\n          </ng-container>\\r\\n\\r\\n\\r\\n          <!-- DEFAULT INPUT -->\\r\\n          <ng-container *ngSwitchDefault>\\r\\n\\r\\n            <mat-grid-tile [colspan]=\\\"question?.gridProps?.cols || 1\\\">\\r\\n              <kkl-form-input (selected)=\\\"onSelect($event)\\\" [control]=\\\"formGroup.controls[question.key]\\\" [question]=\\\"question\\\"></kkl-form-input>\\r\\n            </mat-grid-tile>\\r\\n\\r\\n            <mat-grid-tile *ngIf=\\\"question?.gridProps?.offset\\\"> </mat-grid-tile>\\r\\n\\r\\n          </ng-container>\\r\\n\\r\\n        </ng-container>\\r\\n      </ng-container>\\r\\n\\r\\n\\r\\n\\r\\n      <mat-grid-tile  *ngIf=\\\"hasButton\\\">\\r\\n        <ng-container *ngTemplateOutlet=\\\"slots?.button; context: { question }\\\">\\r\\n        </ng-container>\\r\\n      </mat-grid-tile>\\r\\n    </mat-grid-list>\\r\\n\\r\\n  </form>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"icon-container\\\">\\r\\n  <mat-icon\\r\\n    appColor\\r\\n    [color$]=\\\"color$.asObservable()\\\"\\r\\n    [color]=\\\"color\\\"\\r\\n    appSize\\r\\n    [size]=\\\"size\\\"\\r\\n    [ngStyle]=\\\"{ background: backgroundColor }\\\"\\r\\n    *ngIf=\\\"type === 'svg'\\\"\\r\\n    [svgIcon]=\\\"key\\\"\\r\\n  >\\r\\n  </mat-icon>\\r\\n  <mat-icon\\r\\n    appColor\\r\\n    [color$]=\\\"color$\\\"\\r\\n    [color]=\\\"color\\\"\\r\\n    [ngStyle]=\\\"{ transform: scale }\\\"\\r\\n    *ngIf=\\\"type === 'mat'\\\"\\r\\n    >{{ key }}</mat-icon\\r\\n  >\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"links themed-element\\\" [dir]=\\\"'rtl'\\\">\\r\\n  <kkl-card-user></kkl-card-user>\\r\\n  <mat-accordion class=\\\"menu\\\">\\r\\n    <mat-expansion-panel\\r\\n      class=\\\"mat-elevation-z0\\\"\\r\\n      *ngFor=\\\"let list of menu; let i = index\\\"\\r\\n    >\\r\\n      <mat-expansion-panel-header *ngIf=\\\"list.label\\\">\\r\\n        <div mat-subheader>\\r\\n          <kkl-typography variant=\\\"button\\\" color=\\\"primary\\\" [bold]=\\\"600\\\">\\r\\n            {{ list.label }}\\r\\n          </kkl-typography>\\r\\n        </div>\\r\\n      </mat-expansion-panel-header>\\r\\n      <mat-list>\\r\\n        <kkl-menu-item\\r\\n          *ngFor=\\\"let link of list?.links; let i = index\\\"\\r\\n          [link]=\\\"link\\\"\\r\\n          (click)=\\\"onLinkClick(link, list.prefix)\\\"\\r\\n        ></kkl-menu-item>\\r\\n      </mat-list>\\r\\n    </mat-expansion-panel>\\r\\n  </mat-accordion>\\r\\n  <mat-list>\\r\\n    <mat-list-item appButton>\\r\\n      <kkl-icon color=\\\"primary\\\" [key]=\\\"logoutItem.svgUrl\\\" mat-list-icon></kkl-icon>\\r\\n      <div class=\\\"logout\\\" mat-line>\\r\\n        <kkl-typography variant=\\\"button\\\" color=\\\"primary\\\" [bold]=\\\"600\\\">\\r\\n          {{ logoutItem.label }}\\r\\n        </kkl-typography>\\r\\n      </div>\\r\\n    </mat-list-item>\\r\\n  </mat-list>\\r\\n</div>\\r\\n\";","export default \"<mat-toolbar fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" fxFill dir=\\\"rtl\\\">\\r\\n    <div fxFlex=\\\"10\\\">\\r\\n      <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n        <button\\r\\n          class=\\\"prev mat-elevation-z1\\\"\\r\\n          mat-icon-button\\r\\n          (click)=\\\"onPrevious()\\\"\\r\\n        >\\r\\n          <kkl-icon type=\\\"mat\\\" key=\\\"chevron_right\\\"></kkl-icon>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div fxFlex=\\\"30\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n      <kkl-icon type=\\\"svg\\\" [size]=\\\"27.5\\\" key=\\\"bottomTreeLands\\\"></kkl-icon>\\r\\n    </div>\\r\\n    <div\\r\\n      fxFlex=\\\"10\\\"\\r\\n      fxLayout=\\\"row\\\"\\r\\n      [fxLayoutAlign]=\\\"hasSave ? 'space-between center' : 'end center'\\\"\\r\\n    >\\r\\n      <button *ngIf=\\\"hasSave\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"onSave()\\\" >\\r\\n        <kkl-typography color=\\\"paper\\\"> שמירה </kkl-typography>\\r\\n      </button>\\r\\n      <button\\r\\n        *ngIf=\\\"hasNext\\\"\\r\\n        mat-raised-button\\r\\n        [disabled]=\\\"!hasNext\\\"\\r\\n        color=\\\"primary\\\"\\r\\n        (click)=\\\"onNext()\\\"\\r\\n      >\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n          <kkl-typography color=\\\"paper\\\"> {{ buttonText || \\\"המשך\\\" }} </kkl-typography>\\r\\n          <kkl-icon\\r\\n            [color]=\\\"hasNext ? 'paper' : 'disable'\\\"\\r\\n            type=\\\"mat\\\"\\r\\n            key=\\\"chevron_left\\\"\\r\\n          ></kkl-icon>\\r\\n        </div>\\r\\n      </button>\\r\\n    </div>\\r\\n  </mat-toolbar>\\r\\n  \";","export default \"<mat-toolbar\\r\\n  dir=\\\"rtl\\\"\\r\\n  class=\\\"navbar mat-elevation-z4\\\"\\r\\n  xLayout=\\\"row\\\"\\r\\n  fxLayoutAlign=\\\"start center\\\"\\r\\n>\\r\\n  <!-- toggle menu button -->\\r\\n  <div\\r\\n    fxLayout=\\\"column\\\"\\r\\n    fxLayoutAlign=\\\"center center\\\"\\r\\n    fxFlex=\\\"5\\\"\\r\\n    appUnderline\\r\\n    appButton\\r\\n    (click)=\\\"toggleMenu()\\\"\\r\\n  >\\r\\n    <div fxFlex=\\\"40\\\">\\r\\n      <kkl-icon\\r\\n        *ngIf=\\\"!isOpen\\\"\\r\\n        type=\\\"svg\\\"\\r\\n        key=\\\"tree\\\"\\r\\n        color=\\\"primary\\\"\\r\\n        [size]=\\\"4\\\"\\r\\n      ></kkl-icon>\\r\\n      <kkl-icon\\r\\n        *ngIf=\\\"isOpen\\\"\\r\\n        type=\\\"svg\\\"\\r\\n        [key]=\\\"openIcon\\\"\\r\\n        color=\\\"primary\\\"\\r\\n        [size]=\\\"4\\\"\\r\\n      ></kkl-icon>\\r\\n    </div>\\r\\n    <div fxFlex=\\\"10\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n      <kkl-typography [size]=\\\"1\\\" color=\\\"primary\\\">\\r\\n        {{ isOpen ? closeLabel : openLabel }}\\r\\n      </kkl-typography>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center start\\\" fxFlex=\\\"10\\\">\\r\\n    <kkl-typography [size]=\\\"2.4\\\">\\r\\n      {{ title$ | async }}\\r\\n    </kkl-typography>\\r\\n  </div>\\r\\n\\r\\n  <!-- main navbar links -->\\r\\n  <div fxFlex=\\\"grow\\\">\\r\\n    <div\\r\\n      class=\\\"status-container\\\"\\r\\n      fxLayoutAlign=\\\"center center\\\"\\r\\n    >\\r\\n      <div fxLayout=\\\"row\\\" *ngFor=\\\"let status of (status$ | async)\\\">\\r\\n        <kkl-card-status [status]=\\\"status\\\"></kkl-card-status>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div fxFlex></div>\\r\\n\\r\\n  <!-- left side logo -->\\r\\n  <div\\r\\n    fxLayout=\\\"row\\\"\\r\\n    fxLayoutAlign=\\\"end center\\\"\\r\\n    class=\\\"logo-container\\\"\\r\\n    fxFlex=\\\"10\\\"\\r\\n  >\\r\\n    <div *ngFor=\\\"let logo of logos\\\">\\r\\n      <kkl-icon [key]=\\\"logo.key\\\" [size]=\\\"logo.size\\\"></kkl-icon>\\r\\n    </div>\\r\\n  </div>\\r\\n</mat-toolbar>\\r\\n\";","export default \"<div class=\\\"status-container\\\" fxFill fxFlex=\\\"row\\\">\\r\\n  <mat-grid-list\\r\\n    [cols]=\\\"cols || 8\\\"\\r\\n    [rowHeight]=\\\"(height || 2) + 'vh'\\\"\\r\\n    [gutterSize]=\\\"gutter || '2' + 'px'\\\"\\r\\n    [dir]=\\\"'rtl'\\\"\\r\\n  >\\r\\n    <mat-grid-tile [colspan]=\\\"cols || 8\\\">\\r\\n      <kkl-typography *ngIf=\\\"!slots\\\">\\r\\n        {{ status.label }}\\r\\n      </kkl-typography>\\r\\n\\r\\n      <ng-container\\r\\n        *ngTemplateOutlet=\\\"slots?.textRef; context :{status}\\\"\\r\\n      ></ng-container>\\r\\n    </mat-grid-tile>\\r\\n    <mat-grid-tile *ngFor=\\\"let step of steps; let i = index\\\">\\r\\n      <div fxLayout=\\\"column\\\">\\r\\n        <div [ngClass]=\\\"{ 'status-bar': true, active: !!step }\\\"></div>\\r\\n        <div\\r\\n          class=\\\"step-label\\\"\\r\\n          *ngIf=\\\"hasLabel\\\"\\r\\n          fxLayout=\\\"column\\\"\\r\\n          fxLayoutAlign=\\\"end center\\\"\\r\\n        >\\r\\n          <kkl-typography [color]=\\\"step ? 'accent' : 'disable'\\\" size=\\\"12\\\">\\r\\n            0{{ i + 1 }}\\r\\n          </kkl-typography>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-grid-tile>\\r\\n  </mat-grid-list>\\r\\n</div>\\r\\n\";","export default \"<div [fxLayout]=\\\"direction\\\" class=\\\"steps-container\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n  <ng-container *ngFor=\\\"let step of steps; let i = index\\\" dir=\\\"rtl\\\">\\r\\n    <div appButton appSize [divider]=\\\"3\\\" [type]=\\\"step.type\\\">\\r\\n      <ng-container *ngIf=\\\"!stepRef\\\">\\r\\n        <ng-container [ngSwitch]=\\\"step.type\\\">\\r\\n          <ng-container *ngSwitchCase=\\\"'step'\\\">\\r\\n            <kkl-card-step (onStepChange)=\\\"onStepChange(step)\\\" [step]=\\\"step\\\"></kkl-card-step>\\r\\n          </ng-container>\\r\\n          <ng-container *ngSwitchCase=\\\"'wizard'\\\">\\r\\n            <kkl-card-wizard (onStepChange)=\\\"onStepChange(step)\\\" [step]=\\\"step\\\"></kkl-card-wizard>\\r\\n          </ng-container>\\r\\n          <ng-container *ngSwitchCase=\\\"'status'\\\">\\r\\n            <kkl-card-status [status]=\\\"step\\\"></kkl-card-status>\\r\\n          </ng-container>\\r\\n        </ng-container>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container *ngTemplateOutlet=\\\"stepRef; context: { step: this.step }\\\">\\r\\n      </ng-container>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"step.divider\\\" appSize [size]=\\\"2\\\" [divider]=\\\"step.divider\\\" class=\\\"divider-container\\\" fxLayout=\\\"column\\\"\\r\\n      fxLayoutAlign=\\\"center center\\\">\\r\\n      <div *ngIf=\\\"step.divider\\\" class=\\\"divider\\\"></div>\\r\\n    </div>\\r\\n  </ng-container>\\r\\n</div>\";","export default \"<div>\\r\\n  <mat-table\\r\\n    (matSortChange)=\\\"onSort($event)\\\"\\r\\n    mat-table\\r\\n    matSort\\r\\n    [dataSource]=\\\"$data | async | paginate: pagination\\\"\\r\\n    [dir]=\\\"'rtl'\\\"\\r\\n  >\\r\\n    <ng-container\\r\\n      *ngFor=\\\"let column of tableColumns\\\"\\r\\n      [matColumnDef]=\\\"column.columnDef\\\"\\r\\n    >\\r\\n      <!-- COLUMN HEADER SECTION-->\\r\\n\\r\\n      <ng-container *ngIf=\\\"!column.sortable\\\">\\r\\n        <mat-header-cell\\r\\n          *matHeaderCellDef\\r\\n          [ngClass]=\\\"{ center: column.center }\\\"\\r\\n        >\\r\\n          <!-- DEFAULT HEADER -->\\r\\n          <kkl-typography [bold]=\\\"600\\\" *ngIf=\\\"!column.filterable\\\">\\r\\n            {{ column.label }}\\r\\n          </kkl-typography>\\r\\n\\r\\n          <ng-container\\r\\n            *ngIf=\\\"column.columnDef === 'actions' && column.slotRef\\\"\\r\\n          >\\r\\n            <ng-container\\r\\n              *ngTemplateOutlet=\\\"\\r\\n                headerSlots[column.columnDef];\\r\\n                context: { $implicit: column }\\r\\n              \\\"\\r\\n            >\\r\\n            </ng-container>\\r\\n          </ng-container>\\r\\n\\r\\n          <!-- FILTER HEADER -->\\r\\n          <app-column-filter\\r\\n            *ngIf=\\\"column.filterable\\\"\\r\\n            [column]=\\\"column\\\"\\r\\n          ></app-column-filter>\\r\\n        </mat-header-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- SORT HEADER -->\\r\\n      <ng-container *ngIf=\\\"column.sortable\\\">\\r\\n        <mat-header-cell\\r\\n          mat-sort-header\\r\\n          *matHeaderCellDef\\r\\n          [ngClass]=\\\"{ center: column.center }\\\"\\r\\n          [start]=\\\"column.sortDir\\\"\\r\\n        >\\r\\n          <kkl-typography [bold]=\\\"600\\\" [size]=\\\"1.2\\\">\\r\\n            {{ column.label }}\\r\\n          </kkl-typography>\\r\\n        </mat-header-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- COLUMN CELL SECTION-->\\r\\n\\r\\n      <mat-cell\\r\\n        *matCellDef=\\\"let cell; let i = index\\\"\\r\\n        [ngClass]=\\\"{ center: column.center }\\\"\\r\\n        [attr.colspan]=\\\"i\\\"\\r\\n      >\\r\\n        <!-- DEFAULT SECTION-->\\r\\n        <ng-container *ngIf=\\\"!cell.editable\\\">\\r\\n          <ng-container [ngSwitch]=\\\"column.type\\\">\\r\\n            <ng-container *ngSwitchCase=\\\"'custom'\\\">\\r\\n              <ng-container\\r\\n                *ngTemplateOutlet=\\\"\\r\\n                  rowSlots[column.columnDef];\\r\\n                  context: { cell: this.cell, column: this.column }\\r\\n                \\\"\\r\\n              >\\r\\n              </ng-container>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container *ngSwitchCase=\\\"'actions'\\\">\\r\\n              <ng-container\\r\\n                *ngTemplateOutlet=\\\"\\r\\n                  rowSlots['actions'];\\r\\n                  context: { cell: this.cell, column: this.column }\\r\\n                \\\"\\r\\n              >\\r\\n              </ng-container>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container *ngSwitchDefault>\\r\\n              <kkl-typography>\\r\\n                {{ cell.item[column.columnDef] | format: type }}\\r\\n              </kkl-typography>\\r\\n            </ng-container>\\r\\n          </ng-container>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- FORM SECTION-->\\r\\n        <ng-container *ngIf=\\\"cell.editable\\\">\\r\\n          <ng-container [ngSwitch]=\\\"column.type\\\">\\r\\n            <ng-container *ngSwitchDefault>\\r\\n              <div class=\\\"cell-input\\\">\\r\\n                <app-column-form\\r\\n                  *ngIf=\\\"column?.question\\\"\\r\\n                  [control]=\\\"cell.formGroup.controls[column.columnDef]\\\"\\r\\n                  [question]=\\\"column?.question\\\"\\r\\n                ></app-column-form>\\r\\n              </div>\\r\\n            </ng-container>\\r\\n            <ng-container *ngSwitchCase=\\\"'actions'\\\">\\r\\n              <ng-container\\r\\n                *ngTemplateOutlet=\\\"\\r\\n                  rowSlots['actions'];\\r\\n                  context: { cell: this.cell, column: this.column }\\r\\n                \\\"\\r\\n              >\\r\\n              </ng-container>\\r\\n            </ng-container>\\r\\n          </ng-container>\\r\\n        </ng-container>\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <mat-header-row\\r\\n      [ngClass]=\\\"[theme]\\\"\\r\\n      *matHeaderRowDef=\\\"columnDefs\\\"\\r\\n    ></mat-header-row>\\r\\n\\r\\n    <mat-row\\r\\n      *matRowDef=\\\"let row; columns: columnDefs\\\"\\r\\n      (click)=\\\"onRowClicked(row)\\\"\\r\\n    ></mat-row>\\r\\n  </mat-table>\\r\\n\\r\\n  <app-pagination [pagination]=\\\"pagination\\\"></app-pagination>\\r\\n</div>\\r\\n\";","export default \"<span\\r\\n  [dir]=\\\"'rtl'\\\"\\r\\n  appClasses\\r\\n  [classes]=\\\"classes\\\"\\r\\n  [classes$]=\\\"classes$\\\"\\r\\n  [ngClass]=\\\"['fontFamily']\\\"\\r\\n>\\r\\n  <ng-content></ng-content>\\r\\n</span>\\r\\n\";","export default \"<div>\\r\\n  <kkl-dashboard [cards]=\\\"cards\\\" [moduleTitle]=\\\"moduleTitle\\\" [width]=\\\"width\\\"></kkl-dashboard>\\r\\n</div>\\r\\n\";","export default \"<kkl-layout\\r\\n  [logos]=\\\"logos\\\"\\r\\n  [openIcon]=\\\"openIcon\\\"\\r\\n  [hideWizardPath]=\\\"hideWizardPath\\\"\\r\\n  [showStatusPath]=\\\"showStatusPath\\\"\\r\\n>\\r\\n  <kkl-stepper\\r\\n    class=\\\"mat-elevation-z6\\\"\\r\\n    wizard\\r\\n    [steps]=\\\"steps\\\"\\r\\n    [direction]=\\\"direction\\\"\\r\\n    (changStep)=\\\"onChangeStep($event)\\\"\\r\\n  ></kkl-stepper>\\r\\n  <kkl-menu [masterPrefix]=\\\"prefix\\\" (changePath)=\\\"onChangePath($event)\\\" menu [menu]=\\\"menu\\\"> </kkl-menu>\\r\\n  <ng-content></ng-content>\\r\\n</kkl-layout>\\r\\n\";","export default \"<div *ngIf=\\\"direction === 'row'\\\" class=\\\"container\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" dir=\\\"rtl\\\" fxFill>\\r\\n    <div fxFlex=\\\"20\\\">\\r\\n      <kkl-stepper (changStep)=\\\"onStepChange($event)\\\" [steps]=\\\"steps\\\" [direction]=\\\"direction\\\"></kkl-stepper>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"direction === 'column'\\\" class=\\\"wizard\\\">\\r\\n    <kkl-stepper\\r\\n      (changStep)=\\\"onStepChange($event)\\\"\\r\\n      [steps]=\\\"steps\\\"\\r\\n      [direction]=\\\"direction\\\"\\r\\n    ></kkl-stepper>\\r\\n  </div>\\r\\n\";","export default \"<div class=\\\"container\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n  <div class=\\\"table\\\">\\r\\n    <app-table\\r\\n      [data]=\\\"data\\\"\\r\\n      [columns]=\\\"columns\\\"\\r\\n      [model]=\\\"model\\\"\\r\\n      [options]=\\\"options\\\"\\r\\n      [rowSlots]=\\\"{status}\\\"\\r\\n    ></app-table>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #status let-cell=\\\"cell\\\">\\r\\n  <div class=\\\"status\\\">\\r\\n    <app-status [status]=\\\"cell.item?.status\\\"></app-status>\\r\\n  </div>\\r\\n</ng-template>\\r\\n`;\\r\\n\";","export default \"<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n  <div\\r\\n    class=\\\"container\\\"\\r\\n    fxLayout=\\\"column\\\"\\r\\n    fxLayoutAlign=\\\"center center\\\"\\r\\n    [ngStyle]=\\\"{ 'width.rem': width || 80 }\\\"\\r\\n  >\\r\\n    <div fxFlex=\\\"8\\\" *ngIf=\\\"moduleTitle\\\">\\r\\n      <kkl-typography [bold]=\\\"600\\\" [size]=\\\"3\\\">{{ moduleTitle }}</kkl-typography>\\r\\n    </div>\\r\\n    <mat-grid-list\\r\\n      [cols]=\\\"cols\\\"\\r\\n      [rowHeight]=\\\"((md$ | async) ? 16 : 24) + 'rem'\\\"\\r\\n      gutterSize=\\\"4rem\\\"\\r\\n      [dir]=\\\"'rtl'\\\"\\r\\n    >\\r\\n      <ng-container *ngFor=\\\"let card of cards; let i = index\\\">\\r\\n        <mat-grid-tile>\\r\\n          <div\\r\\n            appSize\\r\\n            [size]=\\\"(md$ | async) ? 16 : 24\\\"\\r\\n            (click)=\\\"onCardClick(card)\\\"\\r\\n          >\\r\\n            <kkl-card-dashboard [card]=\\\"card\\\"> </kkl-card-dashboard>\\r\\n          </div>\\r\\n        </mat-grid-tile>\\r\\n      </ng-container>\\r\\n    </mat-grid-list>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\r\\n  <mat-sidenav-content>\\r\\n    <app-navbar\\r\\n      [logos]=\\\"logos\\\"\\r\\n      [openIcon]=\\\"openIcon\\\"\\r\\n      (menuToggle)=\\\"menuDrawer.toggle()\\\"\\r\\n    ></app-navbar>\\r\\n\\r\\n    <mat-sidenav\\r\\n      class=\\\"wizard\\\"\\r\\n      opened=\\\"true\\\"\\r\\n      mode=\\\"side\\\"\\r\\n      position=\\\"start\\\"\\r\\n      *ngIf=\\\"!(wizard$ | async)\\\"\\r\\n    >\\r\\n      <div\\r\\n        class=\\\"stepper-container\\\"\\r\\n        fxLayout=\\\"column\\\"\\r\\n        fxLayoutAlign=\\\"center center\\\"\\r\\n      >\\r\\n        <ng-content select=\\\"[wizard]\\\"></ng-content>\\r\\n      </div>\\r\\n    </mat-sidenav>\\r\\n\\r\\n    <mat-sidenav #menuDrawer class=\\\"menu\\\" mode=\\\"side\\\" position=\\\"end\\\">\\r\\n      <div class=\\\"menu-container\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start end\\\">\\r\\n        <ng-content select=\\\"[menu]\\\"></ng-content>\\r\\n      </div>\\r\\n    </mat-sidenav>\\r\\n\\r\\n    <ng-content></ng-content>\\r\\n  </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n\";","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { moduleMetadata, Story, Meta } from '@storybook/angular';\\r\\nimport { CommonModule } from '@angular/common';\\r\\nimport { MaterialModule } from '../material/material.module';\\r\\n\\r\\nimport { TypographyComponent } from '../app/components/typography/typography.component';\\r\\nimport { IconComponent } from '../app/components/icon/icon.component';\\r\\n\\r\\nimport { CardDashboardComponent } from '../app/components/cards/card-dashboard/card-dashboard.component';\\r\\nimport { CardStatusComponent } from '../app/components/cards/card-status/card-status.component';\\r\\nimport { CardStepComponent } from '../app/components/cards/card-step/card-step.component';\\r\\nimport { CardWizardComponent } from '../app/components/cards/card-wizard/card-wizard.component';\\r\\nimport { CardUserComponent } from '../app/components/cards/card-user/card-user.component';\\r\\n\\r\\nimport { StepModel } from '../app/components/step/step.model';\\r\\n\\r\\nimport { VariantDirective } from '../app/utilities/directives/variant.directive';\\r\\nimport { ClassesDirective } from '../app/utilities/directives/classes.directive';\\r\\nimport { ColorDirective } from '../app/utilities/directives/color.directive';\\r\\nimport { SizeDirective } from '../app/utilities/directives/size.directive';\\r\\n\\r\\nexport default {\\r\\n  title: 'Cards',\\r\\n  decorators: [\\r\\n    moduleMetadata({\\r\\n      declarations: [\\r\\n        IconComponent,\\r\\n        TypographyComponent,\\r\\n        CardDashboardComponent,\\r\\n        CardStatusComponent,\\r\\n        CardStepComponent,\\r\\n        CardUserComponent,\\r\\n        CardWizardComponent,\\r\\n        ClassesDirective,\\r\\n        VariantDirective,\\r\\n        ColorDirective,\\r\\n        SizeDirective,\\r\\n      ],\\r\\n      imports: [CommonModule, MaterialModule],\\r\\n    }),\\r\\n  ],\\r\\n} as Meta;\\r\\n\\r\\nconst CardDashboardTemplate: Story<CardDashboardComponent> = (\\r\\n  args: CardDashboardComponent\\r\\n) => ({\\r\\n  props: args,\\r\\n  template: `\\r\\n    <div style='\\r\\n    height: 100px;\\r\\n    background: black;\\r\\n    width: 100px;\\r\\n    border-radius: 12px;\\r\\n    margin: 0 auto;'>\\r\\n    <app-card-dashboard ${Object.keys(args).reduce(\\r\\n      (acc, key) =>\\r\\n        `${acc} [${key}]='${\\r\\n          typeof args[key] === 'object' ? JSON.stringify(args[key]) : args[key]\\r\\n        }'`,\\r\\n      ''\\r\\n    )}>\\r\\n    </app-card-dashboard>\\r\\n    </div>`,\\r\\n});\\r\\n\\r\\nexport const Dashboard = CardDashboardTemplate.bind({});\\r\\nDashboard.args = {\\r\\n  card: {\\r\\n    label: 'test',\\r\\n    size: 15,\\r\\n    svgUrl: 'assets',\\r\\n  },\\r\\n};\\r\\n\\r\\nconst CardStatusTemplate: Story<CardStatusComponent> = (\\r\\n  args: CardStatusComponent\\r\\n) => ({\\r\\n  props: args,\\r\\n  template: `\\r\\n    <div style='    flex-direction: row;\\r\\n    box-sizing: border-box;\\r\\n    display: flex;\\r\\n    place-content: center;\\r\\n    align-items: center;'>\\r\\n    <app-card-status ${Object.keys(args).reduce(\\r\\n      (acc, key) =>\\r\\n        `${acc} [${key}]='${\\r\\n          typeof args[key] === 'object' ? JSON.stringify(args[key]) : args[key]\\r\\n        }'`,\\r\\n      ''\\r\\n    )}></app-card-status>\\r\\n    </div>`,\\r\\n});\\r\\n\\r\\nexport const Status = CardStatusTemplate.bind({});\\r\\nStatus.args = {\\r\\n  status: new StepModel({\\r\\n    variant: 'circle',\\r\\n    type: 'status',\\r\\n    size: 8,\\r\\n    isActive: false,\\r\\n    path: 'assets',\\r\\n    svgUrl: 'assets',\\r\\n    label: 'ספר נכסים',\\r\\n    value: null,\\r\\n  }),\\r\\n};\\r\\n\\r\\nconst CardStepTemplate: Story<CardStepComponent> = (\\r\\n  args: CardStepComponent\\r\\n) => ({\\r\\n  props: args,\\r\\n  template: `<app-card-step ${Object.keys(args).reduce(\\r\\n    (acc, key) =>\\r\\n      `${acc} [${key}]='${\\r\\n        typeof args[key] === 'object' ? JSON.stringify(args[key]) : args[key]\\r\\n      }'`,\\r\\n    ''\\r\\n  )}></app-card-step>`,\\r\\n});\\r\\n\\r\\nexport const Step = CardStepTemplate.bind({});\\r\\nStep.args = {};\\r\\n\\r\\nconst CardWizardTemplate: Story<CardWizardComponent> = (\\r\\n  args: CardWizardComponent\\r\\n) => ({\\r\\n  props: args,\\r\\n  template: `<app-card-wizard ${Object.keys(args).reduce(\\r\\n    (acc, key) =>\\r\\n      `${acc} [${key}]='${\\r\\n        typeof args[key] === 'object' ? JSON.stringify(args[key]) : args[key]\\r\\n      }'`,\\r\\n    ''\\r\\n  )}></app-card-wizard>`,\\r\\n});\\r\\n\\r\\nexport const Wizard = CardWizardTemplate.bind({});\\r\\nWizard.args = {};\\r\\n\\r\\n// CARD USER\\r\\nconst CardUserTemplate: Story<CardUserComponent> = (args: CardUserComponent) => ({\\r\\n  props: args,\\r\\n});\\r\\n\\r\\nexport const User = CardUserTemplate.bind({});\\r\\nUser.args = {};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Dashboard\":{\"startLoc\":{\"col\":61,\"line\":43},\"endLoc\":{\"col\":2,\"line\":63},\"startBody\":{\"col\":61,\"line\":43},\"endBody\":{\"col\":2,\"line\":63}},\"Status\":{\"startLoc\":{\"col\":55,\"line\":74},\"endLoc\":{\"col\":2,\"line\":92},\"startBody\":{\"col\":55,\"line\":74},\"endBody\":{\"col\":2,\"line\":92}},\"Step\":{\"startLoc\":{\"col\":51,\"line\":108},\"endLoc\":{\"col\":2,\"line\":119},\"startBody\":{\"col\":51,\"line\":108},\"endBody\":{\"col\":2,\"line\":119}},\"Wizard\":{\"startLoc\":{\"col\":55,\"line\":124},\"endLoc\":{\"col\":2,\"line\":135},\"startBody\":{\"col\":55,\"line\":124},\"endBody\":{\"col\":2,\"line\":135}},\"User\":{\"startLoc\":{\"col\":51,\"line\":141},\"endLoc\":{\"col\":2,\"line\":143},\"startBody\":{\"col\":51,\"line\":141},\"endBody\":{\"col\":2,\"line\":143}}};\n    \nimport { moduleMetadata, Story, Meta } from '@storybook/angular';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MaterialModule } from '../material/material.module';\r\n\r\nimport { TypographyComponent } from '../app/components/typography/typography.component';\r\nimport { IconComponent } from '../app/components/icon/icon.component';\r\n\r\nimport { CardDashboardComponent } from '../app/components/cards/card-dashboard/card-dashboard.component';\r\nimport { CardStatusComponent } from '../app/components/cards/card-status/card-status.component';\r\nimport { CardStepComponent } from '../app/components/cards/card-step/card-step.component';\r\nimport { CardWizardComponent } from '../app/components/cards/card-wizard/card-wizard.component';\r\nimport { CardUserComponent } from '../app/components/cards/card-user/card-user.component';\r\n\r\nimport { StepModel } from '../app/components/step/step.model';\r\n\r\nimport { VariantDirective } from '../app/utilities/directives/variant.directive';\r\nimport { ClassesDirective } from '../app/utilities/directives/classes.directive';\r\nimport { ColorDirective } from '../app/utilities/directives/color.directive';\r\nimport { SizeDirective } from '../app/utilities/directives/size.directive';\r\n\r\nexport default {\r\n  title: 'Cards',\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [\r\n        IconComponent,\r\n        TypographyComponent,\r\n        CardDashboardComponent,\r\n        CardStatusComponent,\r\n        CardStepComponent,\r\n        CardUserComponent,\r\n        CardWizardComponent,\r\n        ClassesDirective,\r\n        VariantDirective,\r\n        ColorDirective,\r\n        SizeDirective,\r\n      ],\r\n      imports: [CommonModule, MaterialModule],\r\n    }),\r\n  ],\r\n} as Meta;\r\n\r\nconst CardDashboardTemplate: Story<CardDashboardComponent> = (\r\n  args: CardDashboardComponent\r\n) => ({\r\n  props: args,\r\n  template: `\r\n    <div style='\r\n    height: 100px;\r\n    background: black;\r\n    width: 100px;\r\n    border-radius: 12px;\r\n    margin: 0 auto;'>\r\n    <app-card-dashboard ${Object.keys(args).reduce(\r\n      (acc, key) =>\r\n        `${acc} [${key}]='${\r\n          typeof args[key] === 'object' ? JSON.stringify(args[key]) : args[key]\r\n        }'`,\r\n      ''\r\n    )}>\r\n    </app-card-dashboard>\r\n    </div>`,\r\n});\r\n\r\nexport const Dashboard = CardDashboardTemplate.bind({});;\r\nDashboard.args = {\r\n  card: {\r\n    label: 'test',\r\n    size: 15,\r\n    svgUrl: 'assets',\r\n  },\r\n};\r\n\r\nconst CardStatusTemplate: Story<CardStatusComponent> = (\r\n  args: CardStatusComponent\r\n) => ({\r\n  props: args,\r\n  template: `\r\n    <div style='    flex-direction: row;\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    place-content: center;\r\n    align-items: center;'>\r\n    <app-card-status ${Object.keys(args).reduce(\r\n      (acc, key) =>\r\n        `${acc} [${key}]='${\r\n          typeof args[key] === 'object' ? JSON.stringify(args[key]) : args[key]\r\n        }'`,\r\n      ''\r\n    )}></app-card-status>\r\n    </div>`,\r\n});\r\n\r\nexport const Status = CardStatusTemplate.bind({});;\r\nStatus.args = {\r\n  status: new StepModel({\r\n    variant: 'circle',\r\n    type: 'status',\r\n    size: 8,\r\n    isActive: false,\r\n    path: 'assets',\r\n    svgUrl: 'assets',\r\n    label: 'ספר נכסים',\r\n    value: null,\r\n  }),\r\n};\r\n\r\nconst CardStepTemplate: Story<CardStepComponent> = (\r\n  args: CardStepComponent\r\n) => ({\r\n  props: args,\r\n  template: `<app-card-step ${Object.keys(args).reduce(\r\n    (acc, key) =>\r\n      `${acc} [${key}]='${\r\n        typeof args[key] === 'object' ? JSON.stringify(args[key]) : args[key]\r\n      }'`,\r\n    ''\r\n  )}></app-card-step>`,\r\n});\r\n\r\nexport const Step = CardStepTemplate.bind({});;\r\nStep.args = {};\r\n\r\nconst CardWizardTemplate: Story<CardWizardComponent> = (\r\n  args: CardWizardComponent\r\n) => ({\r\n  props: args,\r\n  template: `<app-card-wizard ${Object.keys(args).reduce(\r\n    (acc, key) =>\r\n      `${acc} [${key}]='${\r\n        typeof args[key] === 'object' ? JSON.stringify(args[key]) : args[key]\r\n      }'`,\r\n    ''\r\n  )}></app-card-wizard>`,\r\n});\r\n\r\nexport const Wizard = CardWizardTemplate.bind({});;\r\nWizard.args = {};\r\n\r\n// CARD USER\r\nconst CardUserTemplate: Story<CardUserComponent> = (args: CardUserComponent) => ({\r\n  props: args,\r\n});\r\n\r\nexport const User = CardUserTemplate.bind({});\r\nUser.args = {};\r\n\n\n\nDashboard.parameters = { storySource: { source: \"(\\r\\n  args: CardDashboardComponent\\r\\n) => ({\\r\\n  props: args,\\r\\n  template: `\\r\\n    <div style='\\r\\n    height: 100px;\\r\\n    background: black;\\r\\n    width: 100px;\\r\\n    border-radius: 12px;\\r\\n    margin: 0 auto;'>\\r\\n    <app-card-dashboard ${Object.keys(args).reduce(\\r\\n      (acc, key) =>\\r\\n        `${acc} [${key}]='${\\r\\n          typeof args[key] === 'object' ? JSON.stringify(args[key]) : args[key]\\r\\n        }'`,\\r\\n      ''\\r\\n    )}>\\r\\n    </app-card-dashboard>\\r\\n    </div>`,\\r\\n})\" }, ...Dashboard.parameters };\nStatus.parameters = { storySource: { source: \"(\\r\\n  args: CardStatusComponent\\r\\n) => ({\\r\\n  props: args,\\r\\n  template: `\\r\\n    <div style='    flex-direction: row;\\r\\n    box-sizing: border-box;\\r\\n    display: flex;\\r\\n    place-content: center;\\r\\n    align-items: center;'>\\r\\n    <app-card-status ${Object.keys(args).reduce(\\r\\n      (acc, key) =>\\r\\n        `${acc} [${key}]='${\\r\\n          typeof args[key] === 'object' ? JSON.stringify(args[key]) : args[key]\\r\\n        }'`,\\r\\n      ''\\r\\n    )}></app-card-status>\\r\\n    </div>`,\\r\\n})\" }, ...Status.parameters };\nStep.parameters = { storySource: { source: \"(\\r\\n  args: CardStepComponent\\r\\n) => ({\\r\\n  props: args,\\r\\n  template: `<app-card-step ${Object.keys(args).reduce(\\r\\n    (acc, key) =>\\r\\n      `${acc} [${key}]='${\\r\\n        typeof args[key] === 'object' ? JSON.stringify(args[key]) : args[key]\\r\\n      }'`,\\r\\n    ''\\r\\n  )}></app-card-step>`,\\r\\n})\" }, ...Step.parameters };\nWizard.parameters = { storySource: { source: \"(\\r\\n  args: CardWizardComponent\\r\\n) => ({\\r\\n  props: args,\\r\\n  template: `<app-card-wizard ${Object.keys(args).reduce(\\r\\n    (acc, key) =>\\r\\n      `${acc} [${key}]='${\\r\\n        typeof args[key] === 'object' ? JSON.stringify(args[key]) : args[key]\\r\\n      }'`,\\r\\n    ''\\r\\n  )}></app-card-wizard>`,\\r\\n})\" }, ...Wizard.parameters };\nUser.parameters = { storySource: { source: \"(args: CardUserComponent) => ({\\r\\n  props: args,\\r\\n})\" }, ...User.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { moduleMetadata, Story, Meta } from '@storybook/angular';\\r\\nimport { CommonModule } from '@angular/common';\\r\\nimport {MaterialModule} from \\\"../material/material.module\\\";\\r\\nimport {BrowserAnimationsModule} from \\\"@angular/platform-browser/animations\\\";\\r\\nimport {ExpandPanelComponent} from '../app/components/expand-panel/expand-panel.component';\\r\\nimport { IconComponent } from '../app/components/icon/icon.component';\\r\\nimport { TypographyComponent } from '../app/components/typography/typography.component';\\r\\nimport { ClassesDirective } from '../app/utilities/directives/classes.directive';\\r\\n\\r\\nexport default {\\r\\n  title: 'Expanding Panel',\\r\\n  component: ExpandPanelComponent,\\r\\n  decorators: [\\r\\n    moduleMetadata({\\r\\n      declarations: [IconComponent,TypographyComponent,ClassesDirective],\\r\\n      imports: [CommonModule, MaterialModule, BrowserAnimationsModule],\\r\\n    }),\\r\\n  ],\\r\\n} as Meta;\\r\\n\\r\\nconst Template: Story<ExpandPanelComponent> = (args: ExpandPanelComponent) => ({\\r\\n  props: args,\\r\\n  template: `<app-expand-panel>\\r\\n  <kkl-typography bold=\\\"600\\\" title>example</kkl-typography>\\r\\n  <p content>example</p>\\r\\n  </app-expand-panel>`\\r\\n});\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\nDefault.args = {\\r\\n};\\r\\n\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":46,\"line\":21},\"endLoc\":{\"col\":2,\"line\":27},\"startBody\":{\"col\":46,\"line\":21},\"endBody\":{\"col\":2,\"line\":27}}};\n    \nimport { moduleMetadata, Story, Meta } from '@storybook/angular';\r\nimport { CommonModule } from '@angular/common';\r\nimport {MaterialModule} from \"../material/material.module\";\r\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\r\nimport {ExpandPanelComponent} from '../app/components/expand-panel/expand-panel.component';\r\nimport { IconComponent } from '../app/components/icon/icon.component';\r\nimport { TypographyComponent } from '../app/components/typography/typography.component';\r\nimport { ClassesDirective } from '../app/utilities/directives/classes.directive';\r\n\r\nexport default {\r\n  title: 'Expanding Panel',\r\n  component: ExpandPanelComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [IconComponent,TypographyComponent,ClassesDirective],\r\n      imports: [CommonModule, MaterialModule, BrowserAnimationsModule],\r\n    }),\r\n  ],\r\n} as Meta;\r\n\r\nconst Template: Story<ExpandPanelComponent> = (args: ExpandPanelComponent) => ({\r\n  props: args,\r\n  template: `<app-expand-panel>\r\n  <kkl-typography bold=\"600\" title>example</kkl-typography>\r\n  <p content>example</p>\r\n  </app-expand-panel>`\r\n});\r\n\r\nexport const Default = Template.bind({});\r\nDefault.args = {\r\n};\r\n\r\n\n\n\nDefault.parameters = { storySource: { source: \"(args: ExpandPanelComponent) => ({\\r\\n  props: args,\\r\\n  template: `<app-expand-panel>\\r\\n  <kkl-typography bold=\\\"600\\\" title>example</kkl-typography>\\r\\n  <p content>example</p>\\r\\n  </app-expand-panel>`\\r\\n})\" }, ...Default.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { moduleMetadata, Story, Meta } from '@storybook/angular';\\r\\nimport { APP_BASE_HREF, CommonModule } from '@angular/common';\\r\\nimport { AppRoutingModule } from '../app/app-routing.module';\\r\\nimport { MaterialModule } from '../material/material.module';\\r\\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\\r\\n\\r\\nimport { MenuComponent } from '../app/components/menu/menu.component';\\r\\nimport { TypographyComponent } from '../app/components/typography/typography.component';\\r\\nimport { CardUserComponent } from '../app/components/cards/card-user/card-user.component';\\r\\nimport { MenuItemComponent } from '../app/components/menu-item/menu-item.component';\\r\\nimport { IconComponent } from '../app/components/icon/icon.component';\\r\\n\\r\\nimport { ClassesDirective } from '../app/utilities/directives/classes.directive';\\r\\nimport { ColorDirective } from '../app/utilities/directives/color.directive';\\r\\nimport { SizeDirective } from '../app/utilities/directives/size.directive';\\r\\nimport { ButtonDirective } from '../app/utilities/directives/button.directive';\\r\\n\\r\\nexport default {\\r\\n  title: 'Menu',\\r\\n  component: MenuComponent,\\r\\n  decorators: [\\r\\n    moduleMetadata({\\r\\n      declarations: [\\r\\n        MenuItemComponent,\\r\\n        CardUserComponent,\\r\\n        TypographyComponent,\\r\\n        IconComponent,\\r\\n\\r\\n        SizeDirective, ColorDirective, ClassesDirective, ButtonDirective],\\r\\n      providers: [],\\r\\n      imports: [\\r\\n        CommonModule,\\r\\n        MaterialModule,\\r\\n        BrowserAnimationsModule,\\r\\n      ],\\r\\n    }),\\r\\n  ],\\r\\n} as Meta;\\r\\n\\r\\nconst Template: Story<MenuComponent> = (args: MenuComponent) => ({\\r\\n  props: args,\\r\\n});\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\nDefault.args = {\\r\\n  menu: [\\r\\n    {\\r\\n      label: 'ראשי',\\r\\n      prefix: 'assets',\\r\\n      links: [],\\r\\n    },\\r\\n    {\\r\\n      label: 'פיקוח',\\r\\n      prefix: 'supervision',\\r\\n      links: [],\\r\\n    },\\r\\n    {\\r\\n      label: 'שומה',\\r\\n      prefix: 'evaluation',\\r\\n      links: [],\\r\\n    },\\r\\n    {\\r\\n      label: 'עסקאות',\\r\\n      prefix: 'transactions',\\r\\n      links: [],\\r\\n    },\\r\\n    {\\r\\n      label: 'מדידות',\\r\\n      prefix: 'measurements',\\r\\n      links: [],\\r\\n    },\\r\\n    {\\r\\n      label: 'תכנון',\\r\\n      prefix: 'design',\\r\\n      links: [],\\r\\n    },\\r\\n  ],\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":39,\"line\":40},\"endLoc\":{\"col\":2,\"line\":42},\"startBody\":{\"col\":39,\"line\":40},\"endBody\":{\"col\":2,\"line\":42}}};\n    \nimport { moduleMetadata, Story, Meta } from '@storybook/angular';\r\nimport { APP_BASE_HREF, CommonModule } from '@angular/common';\r\nimport { AppRoutingModule } from '../app/app-routing.module';\r\nimport { MaterialModule } from '../material/material.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { MenuComponent } from '../app/components/menu/menu.component';\r\nimport { TypographyComponent } from '../app/components/typography/typography.component';\r\nimport { CardUserComponent } from '../app/components/cards/card-user/card-user.component';\r\nimport { MenuItemComponent } from '../app/components/menu-item/menu-item.component';\r\nimport { IconComponent } from '../app/components/icon/icon.component';\r\n\r\nimport { ClassesDirective } from '../app/utilities/directives/classes.directive';\r\nimport { ColorDirective } from '../app/utilities/directives/color.directive';\r\nimport { SizeDirective } from '../app/utilities/directives/size.directive';\r\nimport { ButtonDirective } from '../app/utilities/directives/button.directive';\r\n\r\nexport default {\r\n  title: 'Menu',\r\n  component: MenuComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [\r\n        MenuItemComponent,\r\n        CardUserComponent,\r\n        TypographyComponent,\r\n        IconComponent,\r\n\r\n        SizeDirective, ColorDirective, ClassesDirective, ButtonDirective],\r\n      providers: [],\r\n      imports: [\r\n        CommonModule,\r\n        MaterialModule,\r\n        BrowserAnimationsModule,\r\n      ],\r\n    }),\r\n  ],\r\n} as Meta;\r\n\r\nconst Template: Story<MenuComponent> = (args: MenuComponent) => ({\r\n  props: args,\r\n});\r\n\r\nexport const Default = Template.bind({});\r\nDefault.args = {\r\n  menu: [\r\n    {\r\n      label: 'ראשי',\r\n      prefix: 'assets',\r\n      links: [],\r\n    },\r\n    {\r\n      label: 'פיקוח',\r\n      prefix: 'supervision',\r\n      links: [],\r\n    },\r\n    {\r\n      label: 'שומה',\r\n      prefix: 'evaluation',\r\n      links: [],\r\n    },\r\n    {\r\n      label: 'עסקאות',\r\n      prefix: 'transactions',\r\n      links: [],\r\n    },\r\n    {\r\n      label: 'מדידות',\r\n      prefix: 'measurements',\r\n      links: [],\r\n    },\r\n    {\r\n      label: 'תכנון',\r\n      prefix: 'design',\r\n      links: [],\r\n    },\r\n  ],\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"(args: MenuComponent) => ({\\r\\n  props: args,\\r\\n})\" }, ...Default.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { CommonModule } from '@angular/common';\\r\\nimport { Meta, moduleMetadata, Story } from '@storybook/angular';\\r\\nimport { MaterialModule } from '../material/material.module';\\r\\nimport { BrowserModule } from '@angular/platform-browser';\\r\\n\\r\\nimport { NavbarComponent } from '../app/components/navigation/navbar/navbar.component';\\r\\nimport { CardStatusComponent } from '../app/components/cards/card-status/card-status.component';\\r\\nimport { IconComponent } from '../app/components/icon/icon.component';\\r\\nimport { TypographyComponent } from '../app/components/typography/typography.component';\\r\\n\\r\\nimport { StepModel } from '../app/components/step/step.model';\\r\\n\\r\\nimport { SizeDirective } from './../app/utilities/directives/size.directive';\\r\\nimport { ButtonDirective } from '../app/utilities/directives/button.directive';\\r\\nimport { ColorDirective } from '../app/utilities/directives/color.directive';\\r\\nimport { ClassesDirective } from '../app/utilities/directives/classes.directive';\\r\\nimport { NavbarService } from '../app/components/navigation/navbar/navbar.service';\\r\\nimport { IconModel } from '../app/components/icon/icon.model';\\r\\n\\r\\nexport default {\\r\\n  title: 'Navbar',\\r\\n  component: NavbarComponent,\\r\\n  decorators: [\\r\\n    moduleMetadata({\\r\\n      declarations: [\\r\\n        IconComponent,\\r\\n        TypographyComponent,\\r\\n\\r\\n        CardStatusComponent,\\r\\n\\r\\n        SizeDirective,\\r\\n        ColorDirective,\\r\\n        ClassesDirective,\\r\\n        ButtonDirective,\\r\\n      ],\\r\\n      providers: [NavbarService],\\r\\n      imports: [\\r\\n        CommonModule,\\r\\n        MaterialModule,\\r\\n        BrowserModule,\\r\\n      ],\\r\\n    }),\\r\\n  ],\\r\\n} as Meta;\\r\\n\\r\\nconst Template: Story<NavbarComponent> = (args: NavbarComponent) => ({\\r\\n  props: args,\\r\\n});\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\nDefault.args = {\\r\\n  openIcon: 'treegradientlands',\\r\\n  logos: [new IconModel('logo', 7)],\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":41,\"line\":46},\"endLoc\":{\"col\":2,\"line\":48},\"startBody\":{\"col\":41,\"line\":46},\"endBody\":{\"col\":2,\"line\":48}}};\n    \nimport { CommonModule } from '@angular/common';\r\nimport { Meta, moduleMetadata, Story } from '@storybook/angular';\r\nimport { MaterialModule } from '../material/material.module';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { NavbarComponent } from '../app/components/navigation/navbar/navbar.component';\r\nimport { CardStatusComponent } from '../app/components/cards/card-status/card-status.component';\r\nimport { IconComponent } from '../app/components/icon/icon.component';\r\nimport { TypographyComponent } from '../app/components/typography/typography.component';\r\n\r\nimport { StepModel } from '../app/components/step/step.model';\r\n\r\nimport { SizeDirective } from './../app/utilities/directives/size.directive';\r\nimport { ButtonDirective } from '../app/utilities/directives/button.directive';\r\nimport { ColorDirective } from '../app/utilities/directives/color.directive';\r\nimport { ClassesDirective } from '../app/utilities/directives/classes.directive';\r\nimport { NavbarService } from '../app/components/navigation/navbar/navbar.service';\r\nimport { IconModel } from '../app/components/icon/icon.model';\r\n\r\nexport default {\r\n  title: 'Navbar',\r\n  component: NavbarComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [\r\n        IconComponent,\r\n        TypographyComponent,\r\n\r\n        CardStatusComponent,\r\n\r\n        SizeDirective,\r\n        ColorDirective,\r\n        ClassesDirective,\r\n        ButtonDirective,\r\n      ],\r\n      providers: [NavbarService],\r\n      imports: [\r\n        CommonModule,\r\n        MaterialModule,\r\n        BrowserModule,\r\n      ],\r\n    }),\r\n  ],\r\n} as Meta;\r\n\r\nconst Template: Story<NavbarComponent> = (args: NavbarComponent) => ({\r\n  props: args,\r\n});\r\n\r\nexport const Default = Template.bind({});\r\nDefault.args = {\r\n  openIcon: 'treegradientlands',\r\n  logos: [new IconModel('logo', 7)],\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"(args: NavbarComponent) => ({\\r\\n  props: args,\\r\\n})\" }, ...Default.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { Meta, moduleMetadata, Story } from '@storybook/angular';\\r\\nimport { CommonModule } from '@angular/common';\\r\\nimport { MaterialModule } from '../material/material.module';\\r\\nimport { IconComponent } from '../app/components/icon/icon.component';\\r\\nimport { TypographyComponent } from '../app/components/typography/typography.component';\\r\\nimport { NavbarBottomComponent } from '../app/components/navigation/navbar-bottom/navbar-bottom.component';\\r\\nimport { ColorDirective } from '../app/utilities/directives/color.directive';\\r\\nimport { SizeDirective } from '../app/utilities/directives/size.directive';\\r\\nimport { ClassesDirective } from '../app/utilities/directives/classes.directive';\\r\\n\\r\\nexport default {\\r\\n  title: 'NavbarBottom',\\r\\n  component: NavbarBottomComponent,\\r\\n  decorators: [\\r\\n    moduleMetadata({\\r\\n      declarations: [IconComponent, TypographyComponent, ColorDirective, ClassesDirective, SizeDirective],\\r\\n      imports: [CommonModule, MaterialModule],\\r\\n    }),\\r\\n  ],\\r\\n} as Meta;\\r\\n\\r\\nconst Template: Story<NavbarBottomComponent> = (\\r\\n  args: NavbarBottomComponent\\r\\n) => ({\\r\\n  props: args,\\r\\n});\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\nDefault.args = {\\r\\n  buttonText: 'המשך',\\r\\n  hasNext: true,\\r\\n};\\r\\n\\r\\nexport const Save = Template.bind({});\\r\\nSave.args = {\\r\\n  buttonText: 'המשך',\\r\\n  hasNext: true,\\r\\n  hasSave : true\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":47,\"line\":22},\"endLoc\":{\"col\":2,\"line\":26},\"startBody\":{\"col\":47,\"line\":22},\"endBody\":{\"col\":2,\"line\":26}},\"Save\":{\"startLoc\":{\"col\":47,\"line\":22},\"endLoc\":{\"col\":2,\"line\":26},\"startBody\":{\"col\":47,\"line\":22},\"endBody\":{\"col\":2,\"line\":26}}};\n    \nimport { Meta, moduleMetadata, Story } from '@storybook/angular';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MaterialModule } from '../material/material.module';\r\nimport { IconComponent } from '../app/components/icon/icon.component';\r\nimport { TypographyComponent } from '../app/components/typography/typography.component';\r\nimport { NavbarBottomComponent } from '../app/components/navigation/navbar-bottom/navbar-bottom.component';\r\nimport { ColorDirective } from '../app/utilities/directives/color.directive';\r\nimport { SizeDirective } from '../app/utilities/directives/size.directive';\r\nimport { ClassesDirective } from '../app/utilities/directives/classes.directive';\r\n\r\nexport default {\r\n  title: 'NavbarBottom',\r\n  component: NavbarBottomComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [IconComponent, TypographyComponent, ColorDirective, ClassesDirective, SizeDirective],\r\n      imports: [CommonModule, MaterialModule],\r\n    }),\r\n  ],\r\n} as Meta;\r\n\r\nconst Template: Story<NavbarBottomComponent> = (\r\n  args: NavbarBottomComponent\r\n) => ({\r\n  props: args,\r\n});\r\n\r\nexport const Default = Template.bind({});;\r\nDefault.args = {\r\n  buttonText: 'המשך',\r\n  hasNext: true,\r\n};\r\n\r\nexport const Save = Template.bind({});\r\nSave.args = {\r\n  buttonText: 'המשך',\r\n  hasNext: true,\r\n  hasSave : true\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"(\\r\\n  args: NavbarBottomComponent\\r\\n) => ({\\r\\n  props: args,\\r\\n})\" }, ...Default.parameters };\nSave.parameters = { storySource: { source: \"(\\r\\n  args: NavbarBottomComponent\\r\\n) => ({\\r\\n  props: args,\\r\\n})\" }, ...Save.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { CardStatusComponent } from './../app/components/cards/card-status/card-status.component';\\r\\nimport { moduleMetadata, Story, Meta } from '@storybook/angular';\\r\\nimport { CommonModule } from '@angular/common';\\r\\nimport { MaterialModule } from '../material/material.module';\\r\\nimport { CardStepModel } from '../app/components/cards/card-step/card-step.model';\\r\\n\\r\\nimport { StepperExComponent } from '../app/examples/stepper-ex/stepper-ex.component';\\r\\n\\r\\nimport { StepperComponent } from '../app/components/stepper/stepper.component';\\r\\nimport { IconComponent } from '../app/components/icon/icon.component';\\r\\nimport { TypographyComponent } from '../app/components/typography/typography.component';\\r\\nimport { CardStepComponent } from '../app/components/cards/card-step/card-step.component';\\r\\nimport { CardWizardComponent } from '../app/components/cards/card-wizard/card-wizard.component';\\r\\n\\r\\nimport { ButtonDirective } from '../app/utilities/directives/button.directive';\\r\\nimport { ClassesDirective } from '../app/utilities/directives/classes.directive';\\r\\nimport { VariantDirective } from '../app/utilities/directives/variant.directive';\\r\\nimport { ColorDirective } from '../app/utilities/directives/color.directive';\\r\\nimport { SizeDirective } from '../app/utilities/directives/size.directive';\\r\\n\\r\\nexport default {\\r\\n  title: 'Stepper',\\r\\n  component: StepperExComponent,\\r\\n  decorators: [\\r\\n    moduleMetadata({\\r\\n      declarations: [\\r\\n        IconComponent,\\r\\n        TypographyComponent,\\r\\n\\r\\n        StepperExComponent,\\r\\n\\r\\n        StepperComponent,\\r\\n        CardStepComponent,\\r\\n        CardWizardComponent,\\r\\n        CardStatusComponent,\\r\\n\\r\\n        SizeDirective,\\r\\n        VariantDirective,\\r\\n        ClassesDirective,\\r\\n        ButtonDirective,\\r\\n        ColorDirective,\\r\\n      ],\\r\\n\\r\\n      imports: [CommonModule, MaterialModule],\\r\\n    }),\\r\\n  ],\\r\\n} as Meta;\\r\\n\\r\\nconst Template: Story<StepperExComponent> = (args: StepperExComponent) => ({\\r\\n  props: args,\\r\\n});\\r\\n\\r\\nexport const Stepper = Template.bind({});\\r\\n\\r\\nStepper.args = {\\r\\n  steps: [\\r\\n    new CardStepModel({\\r\\n      label: 'פירוט הנכס',\\r\\n      svgUrl: 'home',\\r\\n      path: 'details',\\r\\n      isActive: true,\\r\\n      size: 3,\\r\\n      divider: 5,\\r\\n    }),\\r\\n    new CardStepModel({\\r\\n      label: 'תנועות',\\r\\n      svgUrl: 'list',\\r\\n      path: 'movements',\\r\\n      size: 3,\\r\\n      divider: 5,\\r\\n    }),\\r\\n    new CardStepModel({\\r\\n      label: 'עסקאות',\\r\\n      svgUrl: 'transactions',\\r\\n      path: 'transactions',\\r\\n      size: 3,\\r\\n      divider: 5,\\r\\n    }),\\r\\n    new CardStepModel({\\r\\n      label: 'תתי חלקה',\\r\\n      svgUrl: 'building',\\r\\n      path: 'subdivision',\\r\\n      size: 3,\\r\\n      divider: 5,\\r\\n    }),\\r\\n    new CardStepModel({\\r\\n      label: 'פרצליציה',\\r\\n      svgUrl: 'add',\\r\\n      path: 'parcellation',\\r\\n      size: 3,\\r\\n    }),\\r\\n  ],\\r\\n\\r\\n  direction: 'row',\\r\\n};\\r\\n\\r\\nexport const Navigation = Template.bind({});\\r\\n\\r\\nNavigation.args = {\\r\\n  steps: [\\r\\n    new CardStepModel({\\r\\n      label: 'פירוט הנכס',\\r\\n      svgUrl: 'home',\\r\\n      path: 'details',\\r\\n      isActive: true,\\r\\n      size: 3,\\r\\n      value: 4,\\r\\n      variant: 'square',\\r\\n      type: 'step'\\r\\n\\r\\n\\r\\n    }),\\r\\n    new CardStepModel({\\r\\n      label: 'תנועות',\\r\\n      svgUrl: 'list',\\r\\n      path: 'movements',\\r\\n      size: 3,\\r\\n      value: 4,\\r\\n      variant: 'square',\\r\\n      type: 'step'\\r\\n\\r\\n\\r\\n    }),\\r\\n    new CardStepModel({\\r\\n      label: 'עסקאות',\\r\\n      svgUrl: 'transactions',\\r\\n      path: 'transactions',\\r\\n      size: 3,\\r\\n      value: 4,\\r\\n      variant: 'square',\\r\\n      type: 'step'\\r\\n\\r\\n\\r\\n    }),\\r\\n    new CardStepModel({\\r\\n      label: 'תתי חלקה',\\r\\n      svgUrl: 'building',\\r\\n      path: 'subdivision',\\r\\n      size: 3,\\r\\n      value: 4,\\r\\n      variant: 'square',\\r\\n      type: 'step'\\r\\n\\r\\n\\r\\n    }),\\r\\n    new CardStepModel({\\r\\n      label: 'פרצליציה',\\r\\n      svgUrl: 'add',\\r\\n      path: 'parcellation',\\r\\n      size: 3,\\r\\n      value: 4,\\r\\n      variant: 'square',\\r\\n      type: 'step'\\r\\n\\r\\n\\r\\n    }),\\r\\n  ],\\r\\n\\r\\n  direction: 'row',\\r\\n};\\r\\nexport const Status = Template.bind({});\\r\\n\\r\\nStatus.args = {\\r\\n  steps: [\\r\\n    new CardStepModel({\\r\\n      label: 'איזור תנועות',\\r\\n      svgUrl: 'reload',\\r\\n      value: 6,\\r\\n      size: 6,\\r\\n      type: 'status',\\r\\n    }),\\r\\n    new CardStepModel({\\r\\n      label: 'הערת אזהרה',\\r\\n      svgUrl: 'reload',\\r\\n      value: 6,\\r\\n      size: 6,\\r\\n      type: 'status',\\r\\n    }),\\r\\n    new CardStepModel({\\r\\n      label: 'דיווח לרשות המיסים',\\r\\n      svgUrl: 'reload',\\r\\n      value: 6,\\r\\n      size: 6,\\r\\n      type: 'status',\\r\\n    }),\\r\\n    new CardStepModel({\\r\\n      label: 'העברת חזקה',\\r\\n      svgUrl: 'reload',\\r\\n      value: 6,\\r\\n      size: 6,\\r\\n      type: 'status',\\r\\n    }),\\r\\n    new CardStepModel({\\r\\n      label: 'רישום בטאבו',\\r\\n      svgUrl: 'reload',\\r\\n      value: 6,\\r\\n      size: 6,\\r\\n      type: 'status',\\r\\n    }),\\r\\n    new CardStepModel({\\r\\n      label: 'עדכון ספר נכסים',\\r\\n      svgUrl: 'reload',\\r\\n      value: 6,\\r\\n      size: 6,\\r\\n      type: 'status',\\r\\n    }),\\r\\n  ],\\r\\n  direction: 'row',\\r\\n};\\r\\n\\r\\nexport const Wizard = Template.bind({});\\r\\n\\r\\nWizard.args = {\\r\\n  steps: [\\r\\n    new CardStepModel({\\r\\n      label: 'פירוט הנכס',\\r\\n      svgUrl: 'home',\\r\\n      path: 'details',\\r\\n      size: 3,\\r\\n      variant: 'square',\\r\\n      type: 'wizard'\\r\\n    }),\\r\\n    new CardStepModel({\\r\\n      label: 'תנועות',\\r\\n      svgUrl: 'list',\\r\\n      path: 'movements',\\r\\n      size: 3,\\r\\n      isActive: true,\\r\\n      variant: 'square',\\r\\n      type: 'wizard'\\r\\n    }),\\r\\n    new CardStepModel({\\r\\n      label: 'עסקאות',\\r\\n      svgUrl: 'transactions',\\r\\n      path: 'transactions',\\r\\n      size: 3,\\r\\n      variant: 'square',\\r\\n      type: 'wizard'\\r\\n    }),\\r\\n    new CardStepModel({\\r\\n      label: 'תתי חלקה',\\r\\n      svgUrl: 'building',\\r\\n      path: 'subdivision',\\r\\n      size: 3,\\r\\n      variant: 'square',\\r\\n      type: 'wizard'\\r\\n    }),\\r\\n    new CardStepModel({\\r\\n      label: 'פרצליציה',\\r\\n      svgUrl: 'add',\\r\\n      path: 'parcellation',\\r\\n      size: 3,\\r\\n      variant: 'square',\\r\\n      type: 'wizard'\\r\\n    }),\\r\\n  ],\\r\\n\\r\\n  direction: 'column',\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Stepper\":{\"startLoc\":{\"col\":44,\"line\":49},\"endLoc\":{\"col\":2,\"line\":51},\"startBody\":{\"col\":44,\"line\":49},\"endBody\":{\"col\":2,\"line\":51}},\"Navigation\":{\"startLoc\":{\"col\":44,\"line\":49},\"endLoc\":{\"col\":2,\"line\":51},\"startBody\":{\"col\":44,\"line\":49},\"endBody\":{\"col\":2,\"line\":51}},\"Status\":{\"startLoc\":{\"col\":44,\"line\":49},\"endLoc\":{\"col\":2,\"line\":51},\"startBody\":{\"col\":44,\"line\":49},\"endBody\":{\"col\":2,\"line\":51}},\"Wizard\":{\"startLoc\":{\"col\":44,\"line\":49},\"endLoc\":{\"col\":2,\"line\":51},\"startBody\":{\"col\":44,\"line\":49},\"endBody\":{\"col\":2,\"line\":51}}};\n    \nimport { CardStatusComponent } from './../app/components/cards/card-status/card-status.component';\r\nimport { moduleMetadata, Story, Meta } from '@storybook/angular';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MaterialModule } from '../material/material.module';\r\nimport { CardStepModel } from '../app/components/cards/card-step/card-step.model';\r\n\r\nimport { StepperExComponent } from '../app/examples/stepper-ex/stepper-ex.component';\r\n\r\nimport { StepperComponent } from '../app/components/stepper/stepper.component';\r\nimport { IconComponent } from '../app/components/icon/icon.component';\r\nimport { TypographyComponent } from '../app/components/typography/typography.component';\r\nimport { CardStepComponent } from '../app/components/cards/card-step/card-step.component';\r\nimport { CardWizardComponent } from '../app/components/cards/card-wizard/card-wizard.component';\r\n\r\nimport { ButtonDirective } from '../app/utilities/directives/button.directive';\r\nimport { ClassesDirective } from '../app/utilities/directives/classes.directive';\r\nimport { VariantDirective } from '../app/utilities/directives/variant.directive';\r\nimport { ColorDirective } from '../app/utilities/directives/color.directive';\r\nimport { SizeDirective } from '../app/utilities/directives/size.directive';\r\n\r\nexport default {\r\n  title: 'Stepper',\r\n  component: StepperExComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [\r\n        IconComponent,\r\n        TypographyComponent,\r\n\r\n        StepperExComponent,\r\n\r\n        StepperComponent,\r\n        CardStepComponent,\r\n        CardWizardComponent,\r\n        CardStatusComponent,\r\n\r\n        SizeDirective,\r\n        VariantDirective,\r\n        ClassesDirective,\r\n        ButtonDirective,\r\n        ColorDirective,\r\n      ],\r\n\r\n      imports: [CommonModule, MaterialModule],\r\n    }),\r\n  ],\r\n} as Meta;\r\n\r\nconst Template: Story<StepperExComponent> = (args: StepperExComponent) => ({\r\n  props: args,\r\n});\r\n\r\nexport const Stepper = Template.bind({});;\r\n\r\nStepper.args = {\r\n  steps: [\r\n    new CardStepModel({\r\n      label: 'פירוט הנכס',\r\n      svgUrl: 'home',\r\n      path: 'details',\r\n      isActive: true,\r\n      size: 3,\r\n      divider: 5,\r\n    }),\r\n    new CardStepModel({\r\n      label: 'תנועות',\r\n      svgUrl: 'list',\r\n      path: 'movements',\r\n      size: 3,\r\n      divider: 5,\r\n    }),\r\n    new CardStepModel({\r\n      label: 'עסקאות',\r\n      svgUrl: 'transactions',\r\n      path: 'transactions',\r\n      size: 3,\r\n      divider: 5,\r\n    }),\r\n    new CardStepModel({\r\n      label: 'תתי חלקה',\r\n      svgUrl: 'building',\r\n      path: 'subdivision',\r\n      size: 3,\r\n      divider: 5,\r\n    }),\r\n    new CardStepModel({\r\n      label: 'פרצליציה',\r\n      svgUrl: 'add',\r\n      path: 'parcellation',\r\n      size: 3,\r\n    }),\r\n  ],\r\n\r\n  direction: 'row',\r\n};\r\n\r\nexport const Navigation = Template.bind({});;\r\n\r\nNavigation.args = {\r\n  steps: [\r\n    new CardStepModel({\r\n      label: 'פירוט הנכס',\r\n      svgUrl: 'home',\r\n      path: 'details',\r\n      isActive: true,\r\n      size: 3,\r\n      value: 4,\r\n      variant: 'square',\r\n      type: 'step'\r\n\r\n\r\n    }),\r\n    new CardStepModel({\r\n      label: 'תנועות',\r\n      svgUrl: 'list',\r\n      path: 'movements',\r\n      size: 3,\r\n      value: 4,\r\n      variant: 'square',\r\n      type: 'step'\r\n\r\n\r\n    }),\r\n    new CardStepModel({\r\n      label: 'עסקאות',\r\n      svgUrl: 'transactions',\r\n      path: 'transactions',\r\n      size: 3,\r\n      value: 4,\r\n      variant: 'square',\r\n      type: 'step'\r\n\r\n\r\n    }),\r\n    new CardStepModel({\r\n      label: 'תתי חלקה',\r\n      svgUrl: 'building',\r\n      path: 'subdivision',\r\n      size: 3,\r\n      value: 4,\r\n      variant: 'square',\r\n      type: 'step'\r\n\r\n\r\n    }),\r\n    new CardStepModel({\r\n      label: 'פרצליציה',\r\n      svgUrl: 'add',\r\n      path: 'parcellation',\r\n      size: 3,\r\n      value: 4,\r\n      variant: 'square',\r\n      type: 'step'\r\n\r\n\r\n    }),\r\n  ],\r\n\r\n  direction: 'row',\r\n};\r\nexport const Status = Template.bind({});;\r\n\r\nStatus.args = {\r\n  steps: [\r\n    new CardStepModel({\r\n      label: 'איזור תנועות',\r\n      svgUrl: 'reload',\r\n      value: 6,\r\n      size: 6,\r\n      type: 'status',\r\n    }),\r\n    new CardStepModel({\r\n      label: 'הערת אזהרה',\r\n      svgUrl: 'reload',\r\n      value: 6,\r\n      size: 6,\r\n      type: 'status',\r\n    }),\r\n    new CardStepModel({\r\n      label: 'דיווח לרשות המיסים',\r\n      svgUrl: 'reload',\r\n      value: 6,\r\n      size: 6,\r\n      type: 'status',\r\n    }),\r\n    new CardStepModel({\r\n      label: 'העברת חזקה',\r\n      svgUrl: 'reload',\r\n      value: 6,\r\n      size: 6,\r\n      type: 'status',\r\n    }),\r\n    new CardStepModel({\r\n      label: 'רישום בטאבו',\r\n      svgUrl: 'reload',\r\n      value: 6,\r\n      size: 6,\r\n      type: 'status',\r\n    }),\r\n    new CardStepModel({\r\n      label: 'עדכון ספר נכסים',\r\n      svgUrl: 'reload',\r\n      value: 6,\r\n      size: 6,\r\n      type: 'status',\r\n    }),\r\n  ],\r\n  direction: 'row',\r\n};\r\n\r\nexport const Wizard = Template.bind({});\r\n\r\nWizard.args = {\r\n  steps: [\r\n    new CardStepModel({\r\n      label: 'פירוט הנכס',\r\n      svgUrl: 'home',\r\n      path: 'details',\r\n      size: 3,\r\n      variant: 'square',\r\n      type: 'wizard'\r\n    }),\r\n    new CardStepModel({\r\n      label: 'תנועות',\r\n      svgUrl: 'list',\r\n      path: 'movements',\r\n      size: 3,\r\n      isActive: true,\r\n      variant: 'square',\r\n      type: 'wizard'\r\n    }),\r\n    new CardStepModel({\r\n      label: 'עסקאות',\r\n      svgUrl: 'transactions',\r\n      path: 'transactions',\r\n      size: 3,\r\n      variant: 'square',\r\n      type: 'wizard'\r\n    }),\r\n    new CardStepModel({\r\n      label: 'תתי חלקה',\r\n      svgUrl: 'building',\r\n      path: 'subdivision',\r\n      size: 3,\r\n      variant: 'square',\r\n      type: 'wizard'\r\n    }),\r\n    new CardStepModel({\r\n      label: 'פרצליציה',\r\n      svgUrl: 'add',\r\n      path: 'parcellation',\r\n      size: 3,\r\n      variant: 'square',\r\n      type: 'wizard'\r\n    }),\r\n  ],\r\n\r\n  direction: 'column',\r\n};\r\n\n\n\nStepper.parameters = { storySource: { source: \"(args: StepperExComponent) => ({\\r\\n  props: args,\\r\\n})\" }, ...Stepper.parameters };\nNavigation.parameters = { storySource: { source: \"(args: StepperExComponent) => ({\\r\\n  props: args,\\r\\n})\" }, ...Navigation.parameters };\nStatus.parameters = { storySource: { source: \"(args: StepperExComponent) => ({\\r\\n  props: args,\\r\\n})\" }, ...Status.parameters };\nWizard.parameters = { storySource: { source: \"(args: StepperExComponent) => ({\\r\\n  props: args,\\r\\n})\" }, ...Wizard.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { moduleMetadata, Story, Meta } from '@storybook/angular';\\r\\nimport { CommonModule, DatePipe, DecimalPipe } from '@angular/common';\\r\\n\\r\\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\\r\\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\\r\\nimport { NgxPaginationModule, PaginationInstance } from 'ngx-pagination';\\r\\nimport { ColumnFilterComponent } from '../app/components/columns/column-filter/column-filter.component';\\r\\nimport { ColumnFormComponent } from '../app/components/columns/column-form/column-form.component';\\r\\nimport { ColumnsService } from '../app/components/columns/columns.service';\\r\\nimport { FormService } from '../app/components/form/services/form.service';\\r\\nimport { PaginationComponent } from '../app/components/pagination/pagination.component';\\r\\nimport { StatusComponent } from '../app/components/status/status.component';\\r\\nimport { TableComponent } from '../app/components/table/table.component';\\r\\nimport { TableService } from '../app/components/table/table.service';\\r\\nimport { TypographyComponent } from '../app/components/typography/typography.component';\\r\\nimport { TableExComponent } from '../app/examples/table-ex/table-ex.component';\\r\\nimport { ClassesDirective } from '../app/utilities/directives/classes.directive';\\r\\nimport { AssetsModel } from '../app/utilities/models/assets.model';\\r\\nimport { AreaPipe } from '../app/utilities/pipes/area.pipe';\\r\\nimport { FormatPipe } from '../app/utilities/pipes/format.pipe';\\r\\nimport { MaterialModule } from '../material/material.module';\\r\\nimport { ColumnModel } from '../app/components/columns/column.model';\\r\\n\\r\\nexport default {\\r\\n  title: 'Table',\\r\\n  component: TableExComponent,\\r\\n  decorators: [\\r\\n    moduleMetadata({\\r\\n      declarations: [\\r\\n        TableComponent,\\r\\n        StatusComponent,\\r\\n        ColumnFilterComponent,\\r\\n        ColumnFormComponent,\\r\\n        PaginationComponent,\\r\\n        TypographyComponent,\\r\\n        ClassesDirective,\\r\\n        FormatPipe,\\r\\n        AreaPipe,\\r\\n      ],\\r\\n      providers: [\\r\\n        FormService,\\r\\n        TableService,\\r\\n        ColumnsService,\\r\\n        FormatPipe,\\r\\n        AreaPipe,\\r\\n        DatePipe,\\r\\n        DecimalPipe,\\r\\n      ],\\r\\n      imports: [\\r\\n        ReactiveFormsModule,\\r\\n        BrowserAnimationsModule,\\r\\n        FormsModule,\\r\\n        CommonModule,\\r\\n        NgxPaginationModule,\\r\\n        MaterialModule,\\r\\n      ],\\r\\n    }),\\r\\n  ],\\r\\n} as Meta;\\r\\n\\r\\nconst Template: Story<TableExComponent<any>> = (\\r\\n  args: TableExComponent<any>\\r\\n) => ({\\r\\n  props: args,\\r\\n});\\r\\n\\r\\nconst pagination: PaginationInstance = {\\r\\n  itemsPerPage: 6,\\r\\n  currentPage: 1,\\r\\n  totalItems: 12,\\r\\n};\\r\\n\\r\\nconst { data, columns, options } = {\\r\\n  data: [\\r\\n    {\\r\\n      id: 20,\\r\\n      block: 20,\\r\\n      division: 10,\\r\\n      subdivision: 0,\\r\\n      area: 2692,\\r\\n      areaOwn: 748,\\r\\n      property: '',\\r\\n      status: {\\r\\n        label: 'ממתין לטיפול עורך דין',\\r\\n        value: 4,\\r\\n      },\\r\\n      description: '',\\r\\n      location: 'קריית שמונה',\\r\\n    },\\r\\n    {\\r\\n      id: 20,\\r\\n      block: 20,\\r\\n      division: 20,\\r\\n      subdivision: 0,\\r\\n      area: 2692,\\r\\n      areaOwn: null,\\r\\n      property: '',\\r\\n      status: {\\r\\n        label: 'שוריין ע\\\"י פיננסים',\\r\\n        value: 5,\\r\\n      },\\r\\n      description: '',\\r\\n      location: 'קריית שמונה',\\r\\n    },\\r\\n    {\\r\\n      id: 24,\\r\\n      block: 24,\\r\\n      division: 20,\\r\\n      subdivision: 0,\\r\\n      area: 2692,\\r\\n      areaOwn: null,\\r\\n      property: '',\\r\\n      status: {\\r\\n        label: 'ממתין לרו\\\"ח',\\r\\n        value: 3,\\r\\n      },\\r\\n      description: '',\\r\\n      location: 'קריית שמונה',\\r\\n    },\\r\\n    {\\r\\n      id: 20,\\r\\n      block: 20,\\r\\n      division: 54,\\r\\n      subdivision: 0,\\r\\n      area: 1037,\\r\\n      areaOwn: null,\\r\\n      property: '',\\r\\n      status: {\\r\\n        label: 'התקבלה עסקה חדשה',\\r\\n        value: 1,\\r\\n      },\\r\\n      description: '',\\r\\n      location: 'קריית שמונה',\\r\\n    },\\r\\n    {\\r\\n      id: 20,\\r\\n      block: 20,\\r\\n      division: 20,\\r\\n      subdivision: 0,\\r\\n      area: 680,\\r\\n      areaOwn: null,\\r\\n      property: '',\\r\\n      status: {\\r\\n        label: 'ממתין לפיננסים',\\r\\n        value: 1,\\r\\n      },\\r\\n      description: '',\\r\\n      location: 'קריית שמונה',\\r\\n    },\\r\\n    {\\r\\n      id: 20,\\r\\n      block: 20,\\r\\n      division: 20,\\r\\n      subdivision: 0,\\r\\n      area: 2692,\\r\\n      areaOwn: 748,\\r\\n      property: '',\\r\\n      status: {\\r\\n        label: 'ממתין לטיפול עורך דין',\\r\\n        value: 4,\\r\\n      },\\r\\n      description: '',\\r\\n      location: 'קריית שמונה',\\r\\n    },\\r\\n  ],\\r\\n  columns: [\\r\\n    new ColumnModel({ label: 'גוש', type: 'number' }),\\r\\n    new ColumnModel({ label: 'חלקה', type: 'number' }),\\r\\n    new ColumnModel({ label: 'תת חלקה', type: 'number' }),\\r\\n    new ColumnModel({ label: 'שטח מ\\\"ר', type: 'number' }),\\r\\n    new ColumnModel({ label: 'שטח בבעלות הימנותא', type: 'number' }),\\r\\n    new ColumnModel({ label: 'זכות במס', type: 'text' }),\\r\\n    new ColumnModel({ label: 'סטטוס', type: 'custom', center: true }),\\r\\n    new ColumnModel({ label: 'תיאור', type: 'text' }),\\r\\n    new ColumnModel({ label: 'יישוב', type: 'text' }),\\r\\n  ],\\r\\n  options: {\\r\\n    pagination: pagination,\\r\\n    filters: ['id', '_constructor-name_'],\\r\\n  },\\r\\n};\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\nDefault.args = {\\r\\n  data: data,\\r\\n  columns: columns,\\r\\n  model: new AssetsModel(),\\r\\n  options: options,\\r\\n};\\r\\n\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":47,\"line\":61},\"endLoc\":{\"col\":2,\"line\":65},\"startBody\":{\"col\":47,\"line\":61},\"endBody\":{\"col\":2,\"line\":65}}};\n    \nimport { moduleMetadata, Story, Meta } from '@storybook/angular';\r\nimport { CommonModule, DatePipe, DecimalPipe } from '@angular/common';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { NgxPaginationModule, PaginationInstance } from 'ngx-pagination';\r\nimport { ColumnFilterComponent } from '../app/components/columns/column-filter/column-filter.component';\r\nimport { ColumnFormComponent } from '../app/components/columns/column-form/column-form.component';\r\nimport { ColumnsService } from '../app/components/columns/columns.service';\r\nimport { FormService } from '../app/components/form/services/form.service';\r\nimport { PaginationComponent } from '../app/components/pagination/pagination.component';\r\nimport { StatusComponent } from '../app/components/status/status.component';\r\nimport { TableComponent } from '../app/components/table/table.component';\r\nimport { TableService } from '../app/components/table/table.service';\r\nimport { TypographyComponent } from '../app/components/typography/typography.component';\r\nimport { TableExComponent } from '../app/examples/table-ex/table-ex.component';\r\nimport { ClassesDirective } from '../app/utilities/directives/classes.directive';\r\nimport { AssetsModel } from '../app/utilities/models/assets.model';\r\nimport { AreaPipe } from '../app/utilities/pipes/area.pipe';\r\nimport { FormatPipe } from '../app/utilities/pipes/format.pipe';\r\nimport { MaterialModule } from '../material/material.module';\r\nimport { ColumnModel } from '../app/components/columns/column.model';\r\n\r\nexport default {\r\n  title: 'Table',\r\n  component: TableExComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [\r\n        TableComponent,\r\n        StatusComponent,\r\n        ColumnFilterComponent,\r\n        ColumnFormComponent,\r\n        PaginationComponent,\r\n        TypographyComponent,\r\n        ClassesDirective,\r\n        FormatPipe,\r\n        AreaPipe,\r\n      ],\r\n      providers: [\r\n        FormService,\r\n        TableService,\r\n        ColumnsService,\r\n        FormatPipe,\r\n        AreaPipe,\r\n        DatePipe,\r\n        DecimalPipe,\r\n      ],\r\n      imports: [\r\n        ReactiveFormsModule,\r\n        BrowserAnimationsModule,\r\n        FormsModule,\r\n        CommonModule,\r\n        NgxPaginationModule,\r\n        MaterialModule,\r\n      ],\r\n    }),\r\n  ],\r\n} as Meta;\r\n\r\nconst Template: Story<TableExComponent<any>> = (\r\n  args: TableExComponent<any>\r\n) => ({\r\n  props: args,\r\n});\r\n\r\nconst pagination: PaginationInstance = {\r\n  itemsPerPage: 6,\r\n  currentPage: 1,\r\n  totalItems: 12,\r\n};\r\n\r\nconst { data, columns, options } = {\r\n  data: [\r\n    {\r\n      id: 20,\r\n      block: 20,\r\n      division: 10,\r\n      subdivision: 0,\r\n      area: 2692,\r\n      areaOwn: 748,\r\n      property: '',\r\n      status: {\r\n        label: 'ממתין לטיפול עורך דין',\r\n        value: 4,\r\n      },\r\n      description: '',\r\n      location: 'קריית שמונה',\r\n    },\r\n    {\r\n      id: 20,\r\n      block: 20,\r\n      division: 20,\r\n      subdivision: 0,\r\n      area: 2692,\r\n      areaOwn: null,\r\n      property: '',\r\n      status: {\r\n        label: 'שוריין ע\"י פיננסים',\r\n        value: 5,\r\n      },\r\n      description: '',\r\n      location: 'קריית שמונה',\r\n    },\r\n    {\r\n      id: 24,\r\n      block: 24,\r\n      division: 20,\r\n      subdivision: 0,\r\n      area: 2692,\r\n      areaOwn: null,\r\n      property: '',\r\n      status: {\r\n        label: 'ממתין לרו\"ח',\r\n        value: 3,\r\n      },\r\n      description: '',\r\n      location: 'קריית שמונה',\r\n    },\r\n    {\r\n      id: 20,\r\n      block: 20,\r\n      division: 54,\r\n      subdivision: 0,\r\n      area: 1037,\r\n      areaOwn: null,\r\n      property: '',\r\n      status: {\r\n        label: 'התקבלה עסקה חדשה',\r\n        value: 1,\r\n      },\r\n      description: '',\r\n      location: 'קריית שמונה',\r\n    },\r\n    {\r\n      id: 20,\r\n      block: 20,\r\n      division: 20,\r\n      subdivision: 0,\r\n      area: 680,\r\n      areaOwn: null,\r\n      property: '',\r\n      status: {\r\n        label: 'ממתין לפיננסים',\r\n        value: 1,\r\n      },\r\n      description: '',\r\n      location: 'קריית שמונה',\r\n    },\r\n    {\r\n      id: 20,\r\n      block: 20,\r\n      division: 20,\r\n      subdivision: 0,\r\n      area: 2692,\r\n      areaOwn: 748,\r\n      property: '',\r\n      status: {\r\n        label: 'ממתין לטיפול עורך דין',\r\n        value: 4,\r\n      },\r\n      description: '',\r\n      location: 'קריית שמונה',\r\n    },\r\n  ],\r\n  columns: [\r\n    new ColumnModel({ label: 'גוש', type: 'number' }),\r\n    new ColumnModel({ label: 'חלקה', type: 'number' }),\r\n    new ColumnModel({ label: 'תת חלקה', type: 'number' }),\r\n    new ColumnModel({ label: 'שטח מ\"ר', type: 'number' }),\r\n    new ColumnModel({ label: 'שטח בבעלות הימנותא', type: 'number' }),\r\n    new ColumnModel({ label: 'זכות במס', type: 'text' }),\r\n    new ColumnModel({ label: 'סטטוס', type: 'custom', center: true }),\r\n    new ColumnModel({ label: 'תיאור', type: 'text' }),\r\n    new ColumnModel({ label: 'יישוב', type: 'text' }),\r\n  ],\r\n  options: {\r\n    pagination: pagination,\r\n    filters: ['id', '_constructor-name_'],\r\n  },\r\n};\r\n\r\nexport const Default = Template.bind({});\r\nDefault.args = {\r\n  data: data,\r\n  columns: columns,\r\n  model: new AssetsModel(),\r\n  options: options,\r\n};\r\n\r\n\n\n\nDefault.parameters = { storySource: { source: \"(\\r\\n  args: TableExComponent<any>\\r\\n) => ({\\r\\n  props: args,\\r\\n})\" }, ...Default.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { moduleMetadata, Story, Meta } from '@storybook/angular';\\r\\nimport { CommonModule } from '@angular/common';\\r\\nimport { TypographyComponent } from \\\"../app/components/typography/typography.component\\\";\\r\\nimport { MaterialModule } from \\\"../material/material.module\\\";\\r\\nimport { ClassesDirective } from '../app/utilities/directives/classes.directive';\\r\\n\\r\\nexport default {\\r\\n  title: 'Typography',\\r\\n  component: TypographyComponent,\\r\\n\\r\\n  decorators: [\\r\\n    moduleMetadata({\\r\\n      declarations: [TypographyComponent, ClassesDirective],\\r\\n      imports: [CommonModule, MaterialModule],\\r\\n    }),\\r\\n  ],\\r\\n} as Meta;\\r\\n\\r\\nconst Template: Story<TypographyComponent> = (args: TypographyComponent) => ({\\r\\n  props: args,\\r\\n  template: `<kkl-typography ${Object.keys(args).reduce((acc, key) => `${acc} [${key}]='${typeof args[key] === 'object' ? JSON.stringify(args[key]) : args[key]}'`, '')} > Hello World </kkl-typography>`\\r\\n});\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\nDefault.args = {\\r\\n};\\r\\n\\r\\nexport const Title = Template.bind({});\\r\\nTitle.args = {\\r\\n  size: 16,\\r\\n  bold: 600,\\r\\n  classes: {\\r\\n    fontSize: 16,\\r\\n    fontWeight: 600,\\r\\n    color: 'primary',\\r\\n  }\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":45,\"line\":19},\"endLoc\":{\"col\":2,\"line\":22},\"startBody\":{\"col\":45,\"line\":19},\"endBody\":{\"col\":2,\"line\":22}},\"Title\":{\"startLoc\":{\"col\":45,\"line\":19},\"endLoc\":{\"col\":2,\"line\":22},\"startBody\":{\"col\":45,\"line\":19},\"endBody\":{\"col\":2,\"line\":22}}};\n    \nimport { moduleMetadata, Story, Meta } from '@storybook/angular';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TypographyComponent } from \"../app/components/typography/typography.component\";\r\nimport { MaterialModule } from \"../material/material.module\";\r\nimport { ClassesDirective } from '../app/utilities/directives/classes.directive';\r\n\r\nexport default {\r\n  title: 'Typography',\r\n  component: TypographyComponent,\r\n\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [TypographyComponent, ClassesDirective],\r\n      imports: [CommonModule, MaterialModule],\r\n    }),\r\n  ],\r\n} as Meta;\r\n\r\nconst Template: Story<TypographyComponent> = (args: TypographyComponent) => ({\r\n  props: args,\r\n  template: `<kkl-typography ${Object.keys(args).reduce((acc, key) => `${acc} [${key}]='${typeof args[key] === 'object' ? JSON.stringify(args[key]) : args[key]}'`, '')} > Hello World </kkl-typography>`\r\n});\r\n\r\nexport const Default = Template.bind({});;\r\nDefault.args = {\r\n};\r\n\r\nexport const Title = Template.bind({});\r\nTitle.args = {\r\n  size: 16,\r\n  bold: 600,\r\n  classes: {\r\n    fontSize: 16,\r\n    fontWeight: 600,\r\n    color: 'primary',\r\n  }\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"(args: TypographyComponent) => ({\\r\\n  props: args,\\r\\n  template: `<kkl-typography ${Object.keys(args).reduce((acc, key) => `${acc} [${key}]='${typeof args[key] === 'object' ? JSON.stringify(args[key]) : args[key]}'`, '')} > Hello World </kkl-typography>`\\r\\n})\" }, ...Default.parameters };\nTitle.parameters = { storySource: { source: \"(args: TypographyComponent) => ({\\r\\n  props: args,\\r\\n  template: `<kkl-typography ${Object.keys(args).reduce((acc, key) => `${acc} [${key}]='${typeof args[key] === 'object' ? JSON.stringify(args[key]) : args[key]}'`, '')} > Hello World </kkl-typography>`\\r\\n})\" }, ...Title.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { CardDashboardModel } from '../../app/components/cards/card-dashboard/card-dashboard.model';\\r\\nimport { moduleMetadata, Story, Meta } from '@storybook/angular';\\r\\nimport { CommonModule } from '@angular/common';\\r\\nimport { MaterialModule } from '../../material/material.module';\\r\\n\\r\\nimport { SizeDirective } from '../../app/utilities/directives/size.directive';\\r\\nimport { IconComponent } from '../../app/components/icon/icon.component';\\r\\nimport { ClassesDirective } from '../../app/utilities/directives/classes.directive';\\r\\nimport { VariantDirective } from '../../app/utilities/directives/variant.directive';\\r\\nimport { TypographyComponent } from '../../app/components/typography/typography.component';\\r\\nimport { ButtonDirective } from '../../app/utilities/directives/button.directive';\\r\\nimport { ColorDirective } from '../../app/utilities/directives/color.directive';\\r\\nimport { DashboardExComponent } from '../../app/examples/dashboard-ex/dashboard-ex.component';\\r\\nimport { CardDashboardComponent } from '../../app/components/cards/card-dashboard/card-dashboard.component';\\r\\nimport { BreakpointService } from '../../app/utilities/services/breakpoint.service';\\r\\nimport { DashboardComponent } from '../../app/screens/dashboard/dashboard.component';\\r\\n\\r\\nexport default {\\r\\n  title: 'Screen - Dashboard',\\r\\n  component: DashboardExComponent,\\r\\n  decorators: [\\r\\n    moduleMetadata({\\r\\n      declarations: [\\r\\n        IconComponent,\\r\\n        TypographyComponent,\\r\\n\\r\\n        DashboardComponent,\\r\\n        CardDashboardComponent,\\r\\n        DashboardExComponent,\\r\\n\\r\\n        SizeDirective,\\r\\n        VariantDirective,\\r\\n        ClassesDirective,\\r\\n        ButtonDirective,\\r\\n        ColorDirective,\\r\\n      ],\\r\\n\\r\\n      providers: [BreakpointService],\\r\\n      imports: [CommonModule, MaterialModule],\\r\\n    }),\\r\\n  ],\\r\\n} as Meta;\\r\\n\\r\\nconst Template: Story<DashboardExComponent> = (args: DashboardExComponent) => ({\\r\\n  props: args,\\r\\n});\\r\\n\\r\\nexport const Dashboard = Template.bind({});\\r\\n\\r\\nDashboard.args = {\\r\\n  cards: [\\r\\n    new CardDashboardModel({\\r\\n      label: 'פירוט הנכס',\\r\\n      svgUrl: 'home',\\r\\n      path: 'details',\\r\\n    }),\\r\\n    new CardDashboardModel({\\r\\n      label: 'תנועות',\\r\\n      svgUrl: 'list',\\r\\n      path: 'movements',\\r\\n    }),\\r\\n    new CardDashboardModel({\\r\\n      label: 'עסקאות',\\r\\n      svgUrl: 'transactions',\\r\\n      path: 'transactions',\\r\\n    }),\\r\\n    new CardDashboardModel({\\r\\n      label: 'תתי חלקה',\\r\\n      svgUrl: 'building',\\r\\n      path: 'subdivision',\\r\\n    }),\\r\\n  ],\\r\\n  width: 50\\r\\n};\\r\\n\\r\\nexport const Foresrty = Template.bind({});\\r\\n\\r\\nForesrty.args = {\\r\\n  cards: [\\r\\n    new CardDashboardModel({\\r\\n      label: 'פירוט הנכס',\\r\\n      svgUrl: 'home',\\r\\n      path: 'details',\\r\\n    }),\\r\\n    new CardDashboardModel({\\r\\n      label: 'תנועות',\\r\\n      svgUrl: 'list',\\r\\n      path: 'movements',\\r\\n    }),\\r\\n  ],\\r\\n  width: 50\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Dashboard\":{\"startLoc\":{\"col\":46,\"line\":44},\"endLoc\":{\"col\":2,\"line\":46},\"startBody\":{\"col\":46,\"line\":44},\"endBody\":{\"col\":2,\"line\":46}},\"Foresrty\":{\"startLoc\":{\"col\":46,\"line\":44},\"endLoc\":{\"col\":2,\"line\":46},\"startBody\":{\"col\":46,\"line\":44},\"endBody\":{\"col\":2,\"line\":46}}};\n    \nimport { CardDashboardModel } from '../../app/components/cards/card-dashboard/card-dashboard.model';\r\nimport { moduleMetadata, Story, Meta } from '@storybook/angular';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MaterialModule } from '../../material/material.module';\r\n\r\nimport { SizeDirective } from '../../app/utilities/directives/size.directive';\r\nimport { IconComponent } from '../../app/components/icon/icon.component';\r\nimport { ClassesDirective } from '../../app/utilities/directives/classes.directive';\r\nimport { VariantDirective } from '../../app/utilities/directives/variant.directive';\r\nimport { TypographyComponent } from '../../app/components/typography/typography.component';\r\nimport { ButtonDirective } from '../../app/utilities/directives/button.directive';\r\nimport { ColorDirective } from '../../app/utilities/directives/color.directive';\r\nimport { DashboardExComponent } from '../../app/examples/dashboard-ex/dashboard-ex.component';\r\nimport { CardDashboardComponent } from '../../app/components/cards/card-dashboard/card-dashboard.component';\r\nimport { BreakpointService } from '../../app/utilities/services/breakpoint.service';\r\nimport { DashboardComponent } from '../../app/screens/dashboard/dashboard.component';\r\n\r\nexport default {\r\n  title: 'Screen - Dashboard',\r\n  component: DashboardExComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [\r\n        IconComponent,\r\n        TypographyComponent,\r\n\r\n        DashboardComponent,\r\n        CardDashboardComponent,\r\n        DashboardExComponent,\r\n\r\n        SizeDirective,\r\n        VariantDirective,\r\n        ClassesDirective,\r\n        ButtonDirective,\r\n        ColorDirective,\r\n      ],\r\n\r\n      providers: [BreakpointService],\r\n      imports: [CommonModule, MaterialModule],\r\n    }),\r\n  ],\r\n} as Meta;\r\n\r\nconst Template: Story<DashboardExComponent> = (args: DashboardExComponent) => ({\r\n  props: args,\r\n});\r\n\r\nexport const Dashboard = Template.bind({});;\r\n\r\nDashboard.args = {\r\n  cards: [\r\n    new CardDashboardModel({\r\n      label: 'פירוט הנכס',\r\n      svgUrl: 'home',\r\n      path: 'details',\r\n    }),\r\n    new CardDashboardModel({\r\n      label: 'תנועות',\r\n      svgUrl: 'list',\r\n      path: 'movements',\r\n    }),\r\n    new CardDashboardModel({\r\n      label: 'עסקאות',\r\n      svgUrl: 'transactions',\r\n      path: 'transactions',\r\n    }),\r\n    new CardDashboardModel({\r\n      label: 'תתי חלקה',\r\n      svgUrl: 'building',\r\n      path: 'subdivision',\r\n    }),\r\n  ],\r\n  width: 50\r\n};\r\n\r\nexport const Foresrty = Template.bind({});\r\n\r\nForesrty.args = {\r\n  cards: [\r\n    new CardDashboardModel({\r\n      label: 'פירוט הנכס',\r\n      svgUrl: 'home',\r\n      path: 'details',\r\n    }),\r\n    new CardDashboardModel({\r\n      label: 'תנועות',\r\n      svgUrl: 'list',\r\n      path: 'movements',\r\n    }),\r\n  ],\r\n  width: 50\r\n};\r\n\n\n\nDashboard.parameters = { storySource: { source: \"(args: DashboardExComponent) => ({\\r\\n  props: args,\\r\\n})\" }, ...Dashboard.parameters };\nForesrty.parameters = { storySource: { source: \"(args: DashboardExComponent) => ({\\r\\n  props: args,\\r\\n})\" }, ...Foresrty.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { NavbarService } from './../../app/components/navigation/navbar/navbar.service';\\r\\nimport { CardDashboardModel } from '../../app/components/cards/card-dashboard/card-dashboard.model';\\r\\nimport { moduleMetadata, Story, Meta } from '@storybook/angular';\\r\\nimport { CommonModule } from '@angular/common';\\r\\nimport { MaterialModule } from '../../material/material.module';\\r\\n\\r\\nimport { SizeDirective } from '../../app/utilities/directives/size.directive';\\r\\nimport { IconComponent } from '../../app/components/icon/icon.component';\\r\\nimport { ClassesDirective } from '../../app/utilities/directives/classes.directive';\\r\\nimport { VariantDirective } from '../../app/utilities/directives/variant.directive';\\r\\nimport { TypographyComponent } from '../../app/components/typography/typography.component';\\r\\nimport { ButtonDirective } from '../../app/utilities/directives/button.directive';\\r\\nimport { ColorDirective } from '../../app/utilities/directives/color.directive';\\r\\nimport { DashboardExComponent } from '../../app/examples/dashboard-ex/dashboard-ex.component';\\r\\nimport { BreakpointService } from '../../app/utilities/services/breakpoint.service';\\r\\nimport { LayoutComponent } from '../../app/screens/layout/layout.component';\\r\\nimport { CardWizardComponent } from '../../app/components/cards/card-wizard/card-wizard.component';\\r\\nimport { MenuItemComponent } from '../../app/components/menu-item/menu-item.component';\\r\\nimport { MenuComponent } from '../../app/components/menu/menu.component';\\r\\nimport { NavbarComponent } from '../../app/components/navigation/navbar/navbar.component';\\r\\nimport { StepperComponent } from '../../app/components/stepper/stepper.component';\\r\\nimport { MenuService } from '../../app/components/menu/menu.service';\\r\\nimport { LayoutService } from '../../app/screens/layout/layout.service';\\r\\nimport { LayoutExComponent } from '../../app/examples/layout-ex/layout-ex.component';\\r\\nimport { CardStatusComponent } from '../../app/components/cards/card-status/card-status.component';\\r\\nimport { CardStepComponent } from '../../app/components/cards/card-step/card-step.component';\\r\\nimport { CardUserComponent } from '../../app/components/cards/card-user/card-user.component';\\r\\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\\r\\nimport { CardStepModel } from '../../app/components/cards/card-step/card-step.model';\\r\\nimport { MenuItemModel } from '../../app/components/menu-item/menu-item.model';\\r\\nimport { IconModel } from '../../app/components/icon/icon.model';\\r\\n\\r\\nexport default {\\r\\n  title: 'Screen - Layout',\\r\\n  component: LayoutExComponent,\\r\\n  decorators: [\\r\\n    moduleMetadata({\\r\\n      declarations: [\\r\\n        IconComponent,\\r\\n        TypographyComponent,\\r\\n\\r\\n        LayoutExComponent,\\r\\n\\r\\n        LayoutComponent,\\r\\n\\r\\n        NavbarComponent,\\r\\n        CardStatusComponent,\\r\\n        CardUserComponent,\\r\\n\\r\\n        MenuComponent,\\r\\n        MenuItemComponent,\\r\\n\\r\\n        StepperComponent,\\r\\n        CardWizardComponent,\\r\\n        CardStepComponent,\\r\\n\\r\\n        SizeDirective,\\r\\n        VariantDirective,\\r\\n        ClassesDirective,\\r\\n        ButtonDirective,\\r\\n        ColorDirective,\\r\\n      ],\\r\\n\\r\\n      providers: [LayoutService, NavbarService, MenuService, BreakpointService],\\r\\n      imports: [CommonModule, MaterialModule, BrowserAnimationsModule],\\r\\n    }),\\r\\n  ],\\r\\n} as Meta;\\r\\n\\r\\nconst Template: Story<LayoutExComponent> = (args: LayoutExComponent) => ({\\r\\n  props: args,\\r\\n});\\r\\n\\r\\n\\r\\n//  titles: Map<string, string> = new Map([\\r\\n//   ['lands', 'מקרקעין'],\\r\\n//   ['neches', 'מנהלת ספר הכסים'],\\r\\n// ]);\\r\\n\\r\\nexport const Defualt = Template.bind({});\\r\\n\\r\\nDefualt.args = {\\r\\n  openIcon: 'treegradientlands',\\r\\n  logos: [new IconModel('logo', 7)],\\r\\n};\\r\\n\\r\\nexport const WithWizard = Template.bind({});\\r\\n\\r\\nWithWizard.args = {\\r\\n  openIcon: 'treegradientlands',\\r\\n\\r\\n  logos: [new IconModel('logo', 7)],\\r\\n  steps: [\\r\\n    new CardStepModel({\\r\\n      label: 'פירוט הנכס',\\r\\n      svgUrl: 'home',\\r\\n      path: 'details',\\r\\n      size: 2,\\r\\n      variant: 'square',\\r\\n      type: 'wizard'\\r\\n    }),\\r\\n    new CardStepModel({\\r\\n      label: 'תנועות',\\r\\n      svgUrl: 'list',\\r\\n      path: 'movements',\\r\\n      size: 2,\\r\\n      isActive: true,\\r\\n      variant: 'square',\\r\\n      type: 'wizard'\\r\\n    }),\\r\\n    new CardStepModel({\\r\\n      label: 'עסקאות',\\r\\n      svgUrl: 'transactions',\\r\\n      path: 'transactions',\\r\\n      size: 2,\\r\\n      variant: 'square',\\r\\n      type: 'wizard'\\r\\n    }),\\r\\n    new CardStepModel({\\r\\n      label: 'תתי חלקה',\\r\\n      svgUrl: 'building',\\r\\n      path: 'subdivision',\\r\\n      size: 2,\\r\\n      variant: 'square',\\r\\n      type: 'wizard'\\r\\n    }),\\r\\n    new CardStepModel({\\r\\n      label: 'פרצליציה',\\r\\n      svgUrl: 'add',\\r\\n      path: 'parcellation',\\r\\n      size: 2,\\r\\n      variant: 'square',\\r\\n      type: 'wizard'\\r\\n    }),\\r\\n  ],\\r\\n\\r\\n};\\r\\n\\r\\nexport const WithMenu = Template.bind({});\\r\\n\\r\\nWithMenu.args = {\\r\\n  openIcon: 'treegradientlands',\\r\\n  logos: [new IconModel('logo', 7)],\\r\\n\\r\\n  menu: [\\r\\n    {\\r\\n      label: 'ראשי',\\r\\n      prefix: 'neches',\\r\\n      links: [\\r\\n        new MenuItemModel({ label: 'ספר נכסים', path: 'neches' }),\\r\\n        new MenuItemModel({ label: 'חיפוש נכס', path: 'search' }),\\r\\n        new MenuItemModel({ label: 'עסקאות', path: 'transactions' }),\\r\\n        new MenuItemModel({ label: 'תבניות מייל', path: 'mail' }),\\r\\n        new MenuItemModel({ label: 'רשימת עורכי דין', path: 'loyer' }),\\r\\n      ],\\r\\n    },\\r\\n    {\\r\\n      label: 'פיקוח',\\r\\n      prefix: 'supervision',\\r\\n      links: [],\\r\\n    },\\r\\n    {\\r\\n      label: 'שומה',\\r\\n      prefix: 'evaluation',\\r\\n      links: [],\\r\\n    },\\r\\n    {\\r\\n      label: 'עסקאות',\\r\\n      prefix: 'transactions',\\r\\n      links: [],\\r\\n    },\\r\\n    {\\r\\n      label: 'מדידות',\\r\\n      prefix: 'measurements',\\r\\n      links: [],\\r\\n    },\\r\\n    {\\r\\n      label: 'תכנון',\\r\\n      prefix: 'design',\\r\\n      links: [],\\r\\n    },\\r\\n  ],\\r\\n\\r\\n};\\r\\n\\r\\nexport const WithStatus = Template.bind({});\\r\\n\\r\\nWithStatus.args = {\\r\\n  openIcon: 'treegradientlands',\\r\\n  logos: [new IconModel('logo', 7)],\\r\\n  status: [\\r\\n    new CardStepModel({\\r\\n      label: 'איזור תנועות',\\r\\n      svgUrl: 'reload',\\r\\n      value: 6,\\r\\n      size: 6,\\r\\n      type: 'status',\\r\\n    }),\\r\\n    new CardStepModel({\\r\\n      label: 'הערת אזהרה',\\r\\n      svgUrl: 'reload',\\r\\n      value: 6,\\r\\n      size: 6,\\r\\n      type: 'status',\\r\\n    }),\\r\\n    new CardStepModel({\\r\\n      label: 'דיווח לרשות המיסים',\\r\\n      svgUrl: 'reload',\\r\\n      value: 6,\\r\\n      size: 6,\\r\\n      type: 'status',\\r\\n    }),\\r\\n    new CardStepModel({\\r\\n      label: 'העברת חזקה',\\r\\n      svgUrl: 'reload',\\r\\n      value: 6,\\r\\n      size: 6,\\r\\n      type: 'status',\\r\\n    }),\\r\\n    new CardStepModel({\\r\\n      label: 'רישום בטאבו',\\r\\n      svgUrl: 'reload',\\r\\n      value: 6,\\r\\n      size: 6,\\r\\n      type: 'status',\\r\\n    }),\\r\\n    new CardStepModel({\\r\\n      label: 'עדכון ספר נכסים',\\r\\n      svgUrl: 'reload',\\r\\n      value: 6,\\r\\n      size: 6,\\r\\n      type: 'status',\\r\\n    }),\\r\\n  ]\\r\\n};\\r\\n\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Defualt\":{\"startLoc\":{\"col\":43,\"line\":70},\"endLoc\":{\"col\":2,\"line\":72},\"startBody\":{\"col\":43,\"line\":70},\"endBody\":{\"col\":2,\"line\":72}},\"WithWizard\":{\"startLoc\":{\"col\":43,\"line\":70},\"endLoc\":{\"col\":2,\"line\":72},\"startBody\":{\"col\":43,\"line\":70},\"endBody\":{\"col\":2,\"line\":72}},\"WithMenu\":{\"startLoc\":{\"col\":43,\"line\":70},\"endLoc\":{\"col\":2,\"line\":72},\"startBody\":{\"col\":43,\"line\":70},\"endBody\":{\"col\":2,\"line\":72}},\"WithStatus\":{\"startLoc\":{\"col\":43,\"line\":70},\"endLoc\":{\"col\":2,\"line\":72},\"startBody\":{\"col\":43,\"line\":70},\"endBody\":{\"col\":2,\"line\":72}}};\n    \nimport { NavbarService } from './../../app/components/navigation/navbar/navbar.service';\r\nimport { CardDashboardModel } from '../../app/components/cards/card-dashboard/card-dashboard.model';\r\nimport { moduleMetadata, Story, Meta } from '@storybook/angular';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MaterialModule } from '../../material/material.module';\r\n\r\nimport { SizeDirective } from '../../app/utilities/directives/size.directive';\r\nimport { IconComponent } from '../../app/components/icon/icon.component';\r\nimport { ClassesDirective } from '../../app/utilities/directives/classes.directive';\r\nimport { VariantDirective } from '../../app/utilities/directives/variant.directive';\r\nimport { TypographyComponent } from '../../app/components/typography/typography.component';\r\nimport { ButtonDirective } from '../../app/utilities/directives/button.directive';\r\nimport { ColorDirective } from '../../app/utilities/directives/color.directive';\r\nimport { DashboardExComponent } from '../../app/examples/dashboard-ex/dashboard-ex.component';\r\nimport { BreakpointService } from '../../app/utilities/services/breakpoint.service';\r\nimport { LayoutComponent } from '../../app/screens/layout/layout.component';\r\nimport { CardWizardComponent } from '../../app/components/cards/card-wizard/card-wizard.component';\r\nimport { MenuItemComponent } from '../../app/components/menu-item/menu-item.component';\r\nimport { MenuComponent } from '../../app/components/menu/menu.component';\r\nimport { NavbarComponent } from '../../app/components/navigation/navbar/navbar.component';\r\nimport { StepperComponent } from '../../app/components/stepper/stepper.component';\r\nimport { MenuService } from '../../app/components/menu/menu.service';\r\nimport { LayoutService } from '../../app/screens/layout/layout.service';\r\nimport { LayoutExComponent } from '../../app/examples/layout-ex/layout-ex.component';\r\nimport { CardStatusComponent } from '../../app/components/cards/card-status/card-status.component';\r\nimport { CardStepComponent } from '../../app/components/cards/card-step/card-step.component';\r\nimport { CardUserComponent } from '../../app/components/cards/card-user/card-user.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { CardStepModel } from '../../app/components/cards/card-step/card-step.model';\r\nimport { MenuItemModel } from '../../app/components/menu-item/menu-item.model';\r\nimport { IconModel } from '../../app/components/icon/icon.model';\r\n\r\nexport default {\r\n  title: 'Screen - Layout',\r\n  component: LayoutExComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [\r\n        IconComponent,\r\n        TypographyComponent,\r\n\r\n        LayoutExComponent,\r\n\r\n        LayoutComponent,\r\n\r\n        NavbarComponent,\r\n        CardStatusComponent,\r\n        CardUserComponent,\r\n\r\n        MenuComponent,\r\n        MenuItemComponent,\r\n\r\n        StepperComponent,\r\n        CardWizardComponent,\r\n        CardStepComponent,\r\n\r\n        SizeDirective,\r\n        VariantDirective,\r\n        ClassesDirective,\r\n        ButtonDirective,\r\n        ColorDirective,\r\n      ],\r\n\r\n      providers: [LayoutService, NavbarService, MenuService, BreakpointService],\r\n      imports: [CommonModule, MaterialModule, BrowserAnimationsModule],\r\n    }),\r\n  ],\r\n} as Meta;\r\n\r\nconst Template: Story<LayoutExComponent> = (args: LayoutExComponent) => ({\r\n  props: args,\r\n});\r\n\r\n\r\n//  titles: Map<string, string> = new Map([\r\n//   ['lands', 'מקרקעין'],\r\n//   ['neches', 'מנהלת ספר הכסים'],\r\n// ]);\r\n\r\nexport const Defualt = Template.bind({});;\r\n\r\nDefualt.args = {\r\n  openIcon: 'treegradientlands',\r\n  logos: [new IconModel('logo', 7)],\r\n};\r\n\r\nexport const WithWizard = Template.bind({});;\r\n\r\nWithWizard.args = {\r\n  openIcon: 'treegradientlands',\r\n\r\n  logos: [new IconModel('logo', 7)],\r\n  steps: [\r\n    new CardStepModel({\r\n      label: 'פירוט הנכס',\r\n      svgUrl: 'home',\r\n      path: 'details',\r\n      size: 2,\r\n      variant: 'square',\r\n      type: 'wizard'\r\n    }),\r\n    new CardStepModel({\r\n      label: 'תנועות',\r\n      svgUrl: 'list',\r\n      path: 'movements',\r\n      size: 2,\r\n      isActive: true,\r\n      variant: 'square',\r\n      type: 'wizard'\r\n    }),\r\n    new CardStepModel({\r\n      label: 'עסקאות',\r\n      svgUrl: 'transactions',\r\n      path: 'transactions',\r\n      size: 2,\r\n      variant: 'square',\r\n      type: 'wizard'\r\n    }),\r\n    new CardStepModel({\r\n      label: 'תתי חלקה',\r\n      svgUrl: 'building',\r\n      path: 'subdivision',\r\n      size: 2,\r\n      variant: 'square',\r\n      type: 'wizard'\r\n    }),\r\n    new CardStepModel({\r\n      label: 'פרצליציה',\r\n      svgUrl: 'add',\r\n      path: 'parcellation',\r\n      size: 2,\r\n      variant: 'square',\r\n      type: 'wizard'\r\n    }),\r\n  ],\r\n\r\n};\r\n\r\nexport const WithMenu = Template.bind({});;\r\n\r\nWithMenu.args = {\r\n  openIcon: 'treegradientlands',\r\n  logos: [new IconModel('logo', 7)],\r\n\r\n  menu: [\r\n    {\r\n      label: 'ראשי',\r\n      prefix: 'neches',\r\n      links: [\r\n        new MenuItemModel({ label: 'ספר נכסים', path: 'neches' }),\r\n        new MenuItemModel({ label: 'חיפוש נכס', path: 'search' }),\r\n        new MenuItemModel({ label: 'עסקאות', path: 'transactions' }),\r\n        new MenuItemModel({ label: 'תבניות מייל', path: 'mail' }),\r\n        new MenuItemModel({ label: 'רשימת עורכי דין', path: 'loyer' }),\r\n      ],\r\n    },\r\n    {\r\n      label: 'פיקוח',\r\n      prefix: 'supervision',\r\n      links: [],\r\n    },\r\n    {\r\n      label: 'שומה',\r\n      prefix: 'evaluation',\r\n      links: [],\r\n    },\r\n    {\r\n      label: 'עסקאות',\r\n      prefix: 'transactions',\r\n      links: [],\r\n    },\r\n    {\r\n      label: 'מדידות',\r\n      prefix: 'measurements',\r\n      links: [],\r\n    },\r\n    {\r\n      label: 'תכנון',\r\n      prefix: 'design',\r\n      links: [],\r\n    },\r\n  ],\r\n\r\n};\r\n\r\nexport const WithStatus = Template.bind({});\r\n\r\nWithStatus.args = {\r\n  openIcon: 'treegradientlands',\r\n  logos: [new IconModel('logo', 7)],\r\n  status: [\r\n    new CardStepModel({\r\n      label: 'איזור תנועות',\r\n      svgUrl: 'reload',\r\n      value: 6,\r\n      size: 6,\r\n      type: 'status',\r\n    }),\r\n    new CardStepModel({\r\n      label: 'הערת אזהרה',\r\n      svgUrl: 'reload',\r\n      value: 6,\r\n      size: 6,\r\n      type: 'status',\r\n    }),\r\n    new CardStepModel({\r\n      label: 'דיווח לרשות המיסים',\r\n      svgUrl: 'reload',\r\n      value: 6,\r\n      size: 6,\r\n      type: 'status',\r\n    }),\r\n    new CardStepModel({\r\n      label: 'העברת חזקה',\r\n      svgUrl: 'reload',\r\n      value: 6,\r\n      size: 6,\r\n      type: 'status',\r\n    }),\r\n    new CardStepModel({\r\n      label: 'רישום בטאבו',\r\n      svgUrl: 'reload',\r\n      value: 6,\r\n      size: 6,\r\n      type: 'status',\r\n    }),\r\n    new CardStepModel({\r\n      label: 'עדכון ספר נכסים',\r\n      svgUrl: 'reload',\r\n      value: 6,\r\n      size: 6,\r\n      type: 'status',\r\n    }),\r\n  ]\r\n};\r\n\r\n\n\n\nDefualt.parameters = { storySource: { source: \"(args: LayoutExComponent) => ({\\r\\n  props: args,\\r\\n})\" }, ...Defualt.parameters };\nWithWizard.parameters = { storySource: { source: \"(args: LayoutExComponent) => ({\\r\\n  props: args,\\r\\n})\" }, ...WithWizard.parameters };\nWithMenu.parameters = { storySource: { source: \"(args: LayoutExComponent) => ({\\r\\n  props: args,\\r\\n})\" }, ...WithMenu.parameters };\nWithStatus.parameters = { storySource: { source: \"(args: LayoutExComponent) => ({\\r\\n  props: args,\\r\\n})\" }, ...WithStatus.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { moduleMetadata, Story, Meta } from '@storybook/angular';\\r\\nimport { CommonModule } from '@angular/common';\\r\\nimport {NavbarComponent} from \\\"../../app/components/navigation/navbar/navbar.component\\\";\\r\\n\\r\\nexport default {\\r\\n  title: 'Screen - Login',\\r\\n  component: () => {},\\r\\n  decorators: [\\r\\n    moduleMetadata({\\r\\n      declarations: [],\\r\\n      imports: [CommonModule],\\r\\n    }),\\r\\n  ],\\r\\n} as Meta;\\r\\n\\r\\nconst Template: Story<() => {}> = (args: () => {}) => ({\\r\\n  props: args,\\r\\n});\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\nDefault.args = {\\r\\n\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":34,\"line\":16},\"endLoc\":{\"col\":2,\"line\":18},\"startBody\":{\"col\":34,\"line\":16},\"endBody\":{\"col\":2,\"line\":18}}};\n    \nimport { moduleMetadata, Story, Meta } from '@storybook/angular';\r\nimport { CommonModule } from '@angular/common';\r\nimport {NavbarComponent} from \"../../app/components/navigation/navbar/navbar.component\";\r\n\r\nexport default {\r\n  title: 'Screen - Login',\r\n  component: () => {},\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [],\r\n      imports: [CommonModule],\r\n    }),\r\n  ],\r\n} as Meta;\r\n\r\nconst Template: Story<() => {}> = (args: () => {}) => ({\r\n  props: args,\r\n});\r\n\r\nexport const Default = Template.bind({});\r\nDefault.args = {\r\n\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"(args: () => {}) => ({\\r\\n  props: args,\\r\\n})\" }, ...Default.parameters };","import { Component, Input } from '@angular/core';\r\nimport { StepModel } from '../../step/step.model';\r\n\r\n@Component({\r\n  selector: 'kkl-card-status',\r\n  template: (require('./card-status.component.html').default || require('./card-status.component.html')).length ? (require('./card-status.component.html').default || require('./card-status.component.html')) : '',\r\n  styles: [(require('./card-status.component.scss').default || require('./card-status.component.scss')).length ? (require('./card-status.component.scss').default || require('./card-status.component.scss')) : ''],\r\n})\r\nexport class CardStatusComponent  {\r\n\r\n  @Input() public status: StepModel;\r\n\r\n  constructor() {}\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Classes } from '../../../utilities/directives/classes.directive';\r\nimport { CardStepModel, StepType } from './card-step.model';\r\n\r\n@Component({\r\n  selector: 'kkl-card-step',\r\n  template: (require('./card-step.component.html').default || require('./card-step.component.html')).length ? (require('./card-step.component.html').default || require('./card-step.component.html')) : '',\r\n  styles: [(require('./card-step.component.scss').default || require('./card-step.component.scss')).length ? (require('./card-step.component.scss').default || require('./card-step.component.scss')) : '']\r\n})\r\nexport class CardStepComponent implements OnInit {\r\n\r\n  @Input() public step: CardStepModel;\r\n\r\n  public type: StepType;\r\n  public active$: Observable<boolean>;\r\n\r\n\r\n  public stepTextClasses: Classes = {\r\n    color: 'text',\r\n    fontWeight: 500,\r\n    fontSize: 1.1\r\n  }\r\n  public activeStepTextClasses: Classes = {\r\n    ...this.stepTextClasses,\r\n    fontWeight: 600,\r\n  }\r\n\r\n\r\n  @Output() onStepChange: EventEmitter<CardStepModel> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.type = this.step.type;\r\n    this.active$ = this.step.getActiveObs();\r\n  }\r\n\r\n  public onStepClick(): void {\r\n    if (!this.step.isActive) {\r\n      this.onStepChange.emit(this.step);\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Classes } from '../../../utilities/directives/classes.directive';\r\nimport { CardStepModel, StepType } from '../card-step/card-step.model';\r\n\r\n@Component({\r\n  selector: 'kkl-card-wizard',\r\n  template: (require('./card-wizard.component.html').default || require('./card-wizard.component.html')).length ? (require('./card-wizard.component.html').default || require('./card-wizard.component.html')) : '',\r\n  styles: [(require('./card-wizard.component.scss').default || require('./card-wizard.component.scss')).length ? (require('./card-wizard.component.scss').default || require('./card-wizard.component.scss')) : '']\r\n})\r\nexport class CardWizardComponent implements OnInit {\r\n\r\n  @Input() public step: CardStepModel;\r\n\r\n  public type: StepType;\r\n  public active$: Observable<boolean>;\r\n\r\n\r\n  public wizardClasses: Classes = {\r\n    color: 'text',\r\n    fontWeight: 500,\r\n    fontSize: 1.1\r\n  }\r\n  public activeWizardClasses: Classes = {\r\n    ...this.wizardClasses,\r\n    color: 'paper',\r\n    fontWeight: 600,\r\n  }\r\n\r\n  @Output() onStepChange: EventEmitter<CardStepModel> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.type = this.step.type;\r\n    this.active$ = this.step.getActiveObs();\r\n  }\r\n\r\n  public onStepClick(): void {\r\n    if (!this.step.isActive) {\r\n      this.onStepChange.emit(this.step);\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { SelectOption } from '../../form/models/question-select.model';\r\nimport { ColumnModel } from '../column.model';\r\n\r\n@Component({\r\n  selector: 'app-column-filter',\r\n  template: (require('./column-filter.component.html').default || require('./column-filter.component.html')).length ? (require('./column-filter.component.html').default || require('./column-filter.component.html')) : '',\r\n})\r\nexport class ColumnFilterComponent implements OnInit {\r\n  @Input() column: ColumnModel;\r\n  public label: string;\r\n  public options: SelectOption[];\r\n\r\n  @Output() optionSelect: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.label = this.column.label;\r\n    this.options = this.column.filterOptions;\r\n  }\r\n\r\n  public onOptionSelect(value) {\r\n    this.optionSelect.emit(value);\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { QuestionSelectModel, SelectOption } from '../../form/models/question-select.model';\r\nimport { QuestionBase } from '../../form/services/form.service';\r\nimport { MessageService } from '../../form/services/message.service';\r\n\r\n@Component({\r\n  selector: 'app-column-form',\r\n  template: (require('./column-form.component.html').default || require('./column-form.component.html')).length ? (require('./column-form.component.html').default || require('./column-form.component.html')) : '',\r\n  styles: [(require('./column-form.component.scss').default || require('./column-form.component.scss')).length ? (require('./column-form.component.scss').default || require('./column-form.component.scss')) : '']\r\n})\r\nexport class ColumnFormComponent implements OnInit {\r\n\r\n  @Input() public question: QuestionBase;\r\n  @Input() public control: FormControl;\r\n\r\n  public type: string;\r\n  public label: string;\r\n  public icon: string;\r\n  public options: SelectOption[]\r\n  public error: string = ''\r\n\r\n  public color: string;\r\n  public iconType: string = 'svg';\r\n  public iconRotate: number = 0;\r\n\r\n  @Output() public selected: EventEmitter<QuestionSelectModel> = new EventEmitter();\r\n  @Output() public register: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(\r\n    private messageService: MessageService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n    this.type = this.question?.type\r\n    this.label = this.question?.label || ''\r\n    this.icon = this.question?.icon || ''\r\n\r\n    if (this.question instanceof QuestionSelectModel) {\r\n      this.options = this.question.options;\r\n    }\r\n\r\n    this.subscribeToControl()\r\n  }\r\n\r\n  // subscription section\r\n  private subscribeToControl() {\r\n\r\n    if (this.control.disabled) {\r\n      this.color = 'disable';\r\n    }\r\n\r\n\r\n    this.control.valueChanges.subscribe((value) => {\r\n      if (this.control.disabled) {\r\n        this.color = 'disable';\r\n      } else if (this.control.errors) {\r\n        this.color = 'danger';\r\n      } else {\r\n        this.color = '';\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  public validate() {\r\n    this.error = this.messageService.getErrorMessage(this.control, this.label);\r\n\r\n    if (this.error) {\r\n      this.color = 'danger';\r\n    }\r\n\r\n    this.control.valueChanges.subscribe(() => {\r\n      this.error = this.messageService.getErrorMessage(this.control, this.label);\r\n    });\r\n  }\r\n\r\n  public onSelectChange() {\r\n    if (this.question instanceof QuestionSelectModel) {\r\n      this.selected.emit(this.question)\r\n      this.question.onSelectChange()\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { ElementRef } from '@angular/core';\r\nimport { SelectOption } from '../form/models/question-select.model';\r\nimport { ControlType } from '../form/models/question.model';\r\nimport { Question } from '../form/services/form.service';\r\n\r\nexport declare type SortDir = 'desc' | 'asc';\r\n\r\nexport declare type ColumnType =\r\n  | 'number'\r\n  | 'date'\r\n  | 'text'\r\n  | 'custom'\r\n  | 'actions'\r\n  | 'expend';\r\n\r\nexport class ColumnModel {\r\n  public columnDef?: any;\r\n  public label?: string;\r\n  public cell?: (element) => string;\r\n  public type?: ColumnType;\r\n  public control?: ControlType;\r\n  public question?: Question;\r\n  public slotRef?: ElementRef;\r\n  public center?: boolean;\r\n  public selectable?: boolean;\r\n  public sortable?: boolean;\r\n  public sortDir?: SortDir;\r\n  public filterable?: boolean;\r\n  public filterOptions?: SelectOption[];\r\n\r\n\r\n  constructor(options?: {\r\n    columnDef?: string;\r\n    label?: string;\r\n    cell?: (element) => string;\r\n    type?: ColumnType;\r\n    control?: ControlType;\r\n    question?: Question;\r\n    slotRef?: ElementRef;\r\n    selectable?: boolean;\r\n    center?: boolean;\r\n    sortable?: boolean;\r\n    sortDir?: SortDir;\r\n    filterable?: boolean;\r\n    filterOptions?: SelectOption[];\r\n  }) {\r\n    this.columnDef = options?.columnDef || '';\r\n    this.label = options?.label || '';\r\n    this.type = options?.type || 'text';\r\n    this.cell = (element) => `${element[this.columnDef]}`;\r\n    this.control = options?.control;\r\n    this.question = options?.question;\r\n    this.slotRef = options?.slotRef || null;\r\n    this.center = options?.center || false;\r\n    this.selectable = options?.selectable || false;\r\n    this.sortable = options?.sortable || false;\r\n    this.sortDir = options?.sortDir || 'asc';\r\n    this.filterable = options?.filterable || false;\r\n    this.filterOptions = options?.filterOptions || [];\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ColumnModel } from './column.model';\r\n\r\nexport interface ColumnsData<T> {\r\n  columns: ColumnModel[];\r\n  columnsDefs: (string| keyof T)[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ColumnsService<T> {\r\n  constructor() {}\r\n\r\n  private setColumnDefsFromType(model: T): string[] {\r\n    return Object.keys(model);\r\n  }\r\n\r\n  private filterColumnDefs(columnDefs: (string| keyof T)[], filters: [keyof T | string]): (string| keyof T)[] {\r\n    return columnDefs.filter((item) => !filters.includes(item));\r\n  }\r\n\r\n  private setColumnDefs(model: T, filters: [keyof T | string]): (string| keyof T)[] {\r\n    return this.filterColumnDefs(this.setColumnDefsFromType(model), filters);\r\n  }\r\n\r\n  private setColumnWithColumnDefs(\r\n    columns: ColumnModel[],\r\n    columnDefs:  (string| keyof T)[]\r\n  ): ColumnModel[] {\r\n    return columns.map((column, i) => {\r\n      return new ColumnModel({\r\n        ...column,\r\n        columnDef: column.columnDef || columnDefs[i],\r\n      });\r\n    });\r\n  }\r\n\r\n  private setColumnDefsFromColumns(\r\n    columns: ColumnModel[],\r\n    columnDefs: (string| keyof T)[]\r\n  ):  (string| keyof T)[] {\r\n    if (columns.length > columnDefs.length) {\r\n      columnDefs = columns.map((column) => column.columnDef);\r\n    }\r\n    return columnDefs;\r\n  }\r\n\r\n  private initColumnsDefs(model, filters):  (string| keyof T)[] {\r\n    return this.setColumnDefs(model, filters);\r\n  }\r\n\r\n  private getColumnsDefs(columns: ColumnModel[], columnDefs: (string| keyof T)[]) {\r\n    return this.setColumnDefsFromColumns(columns, columnDefs);\r\n  }\r\n\r\n  public getColumns(\r\n    model: T,\r\n    filters: (string| keyof T)[],\r\n    tableColumns: ColumnModel[]\r\n  ): ColumnsData<T> {\r\n    const columnsDefs = this.initColumnsDefs(model, filters);\r\n    const columns = this.setColumnWithColumnDefs(tableColumns, columnsDefs);\r\n\r\n    return { columns, columnsDefs: this.getColumnsDefs(columns, columnsDefs) };\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'kkl-expand-panel',\r\n  template: (require('./expand-panel.component.html').default || require('./expand-panel.component.html')).length ? (require('./expand-panel.component.html').default || require('./expand-panel.component.html')) : '',\r\n  styles: [(require('./expand-panel.component.scss').default || require('./expand-panel.component.scss')).length ? (require('./expand-panel.component.scss').default || require('./expand-panel.component.scss')) : '']\r\n})\r\nexport class ExpandPanelComponent implements OnInit {\r\n // prop for custom class\r\n @Input() public variant: string;\r\n @Input() public hideToggle: boolean;\r\n @Input() public hideHeader: boolean;\r\n @Input() public disabled: boolean;\r\n\r\n\r\n @Input() public expanded: boolean;\r\n\r\n public panelOpenState = false;\r\n\r\n @Output() expand: EventEmitter<void> = new EventEmitter();\r\n @Output() closed: EventEmitter<void> = new EventEmitter();\r\n @Output() opened: EventEmitter<void> = new EventEmitter();\r\n\r\n constructor() {}\r\n\r\n ngOnInit(): void {\r\n  this.variant = this.variant || '';\r\n  this.expanded = this.expanded || false;\r\n  this.hideToggle = this.hideToggle || false;\r\n  this.hideHeader = this.hideHeader || false;\r\n }\r\n\r\n public onPanelExpend() {\r\n   this.expand.emit();\r\n }\r\n\r\n public onPanelClosed() {\r\n   this.panelOpenState = false\r\n   this.closed.emit();\r\n }\r\n\r\n public onPanelOpen() {\r\n   this.panelOpenState = true\r\n   this.opened.emit();\r\n }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-form-group',\r\n  template: (require('./form-group.component.html').default || require('./form-group.component.html')).length ? (require('./form-group.component.html').default || require('./form-group.component.html')) : '',\r\n  styles: [(require('./form-group.component.scss').default || require('./form-group.component.scss')).length ? (require('./form-group.component.scss').default || require('./form-group.component.scss')) : '']\r\n})\r\nexport class FormGroupComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { MessageService } from '../services/message.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { QuestionBase } from '../services/form.service';\r\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { QuestionSelectModel, SelectOption } from '../models/question-select.model';\r\nimport { GridProps } from '../models/question.model';\r\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\r\n\r\n@Component({\r\n  selector: 'kkl-form-input',\r\n  template: (require('./form-input.component.html').default || require('./form-input.component.html')).length ? (require('./form-input.component.html').default || require('./form-input.component.html')) : '',\r\n  styles: [(require('./form-input.component.scss').default || require('./form-input.component.scss')).length ? (require('./form-input.component.scss').default || require('./form-input.component.scss')) : '']\r\n})\r\nexport class FormInputComponent implements OnInit {\r\n\r\n    @Input() public question: QuestionBase;\r\n  @Input() public control: FormControl;\r\n\r\n  public type: string;\r\n  public controlType: string;\r\n  public label: string;\r\n  public icon: string;\r\n  public options: SelectOption[]\r\n  public error: string = ''\r\n\r\n  public gridProps: GridProps\r\n  public color: string;\r\n  public iconType: string = 'svg';\r\n  public iconRotate: number = 0;\r\n\r\n  @Output() public selected: EventEmitter<QuestionSelectModel> = new EventEmitter();\r\n  @Output() public optionSelected: EventEmitter<MatAutocompleteSelectedEvent> = new EventEmitter()\r\n  @Output() autocomplete: EventEmitter<FormControl> = new EventEmitter()\r\n\r\n  constructor(\r\n    private messageService: MessageService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.gridProps = this.question.gridProps\r\n    console.log(this.gridProps)\r\n    this.type = this.question?.type\r\n    this.controlType = this.question?.controlType\r\n    this.label = this.question?.label || ''\r\n    this.icon = this.question?.icon || ''\r\n\r\n    if (this.question instanceof QuestionSelectModel) {\r\n      this.options = this.question.options;\r\n    }\r\n\r\n    this.subscribeToControl()\r\n  }\r\n\r\n  // subscription section\r\n  private subscribeToControl() {\r\n\r\n    if (this.control.disabled) {\r\n      this.color = 'disable';\r\n    }\r\n\r\n    this.control.valueChanges.subscribe((value) => {\r\n      if (this.control.disabled) {\r\n        this.color = 'disable';\r\n      } else if (this.control.errors) {\r\n        this.color = 'warn';\r\n      } else {\r\n        this.color = '';\r\n      }\r\n    });\r\n  }\r\n\r\n  public validate() {\r\n    this.error = this.messageService.getErrorMessage(this.control, this.label);\r\n\r\n    if (this.error) {\r\n      this.color = 'warn';\r\n    }\r\n\r\n    this.control.valueChanges.subscribe(() => {\r\n      this.error = this.messageService.getErrorMessage(this.control, this.label);\r\n    });\r\n  }\r\n\r\n  public onSelectChange() {\r\n    if (this.question instanceof QuestionSelectModel) {\r\n      this.selected.emit(this.question)\r\n      this.question.onSelectChange()\r\n    }\r\n  }\r\n  public onAutocomplete() {\r\n    this.autocomplete.emit(this.control)\r\n  }\r\n\r\n  public onOptionSelected(event: MatAutocompleteSelectedEvent) {\r\n    this.optionSelected.emit(event)\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { FormControl } from '@angular/forms';\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { QuestionRadio } from '../models/question-radio';\r\nimport { SelectOption } from '../models/question-select.model';\r\nimport { MatRadioChange } from '@angular/material/radio';\r\n\r\n@Component({\r\n  selector: 'kkl-form-radio',\r\n  template: (require('./form-radio.component.html').default || require('./form-radio.component.html')).length ? (require('./form-radio.component.html').default || require('./form-radio.component.html')) : '',\r\n  styles: [(require('./form-radio.component.scss').default || require('./form-radio.component.scss')).length ? (require('./form-radio.component.scss').default || require('./form-radio.component.scss')) : '']\r\n})\r\nexport class FormRadioComponent implements OnInit {\r\n\r\n  @Input() public question: QuestionRadio\r\n  @Input() public control: FormControl\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  public handleChange(radio: MatRadioChange) {\r\n    this.control.setValue(radio.value)\r\n\r\n  }\r\n}\r\n","import { QuestionSelectModel } from '../models/question-select.model';\r\nimport { Observable } from 'rxjs';\r\nimport { GridProps } from '../models/question.model';\r\nimport { QuestionGroupModel } from '../models/question-group.model';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Component, ElementRef, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Question } from '../services/form.service';\r\n\r\n@Component({\r\n  selector: 'kkl-form',\r\n  template: (require('./form.component.html').default || require('./form.component.html')).length ? (require('./form.component.html').default || require('./form.component.html')) : '',\r\n  styles: [(require('./form.component.scss').default || require('./form.component.scss')).length ? (require('./form.component.scss').default || require('./form.component.scss')) : '']\r\n})\r\nexport class FormComponent implements OnInit {\r\n\r\n\r\n  @Input() public group: QuestionGroupModel;\r\n  @Input() public questions: Question[];\r\n  @Input() public editMode: boolean;\r\n  @Input() public rowHeight: number;\r\n\r\n  @Input() private $questions: Observable<Question[]>;\r\n\r\n  @Input() public slots: {\r\n    button?: ElementRef;\r\n    group?: ElementRef;\r\n  };\r\n\r\n  @Output() register: EventEmitter<FormGroup> = new EventEmitter();\r\n\r\n  public formGroup: FormGroup;\r\n  public grid: GridProps;\r\n  public hasButton: boolean = false;\r\n  public cols: string | number;\r\n  public gutter: number;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    this.formGroup = this.group.formGroup;\r\n    this.questions = this.questions || this.group.questions;\r\n    this.grid = this.group.gridProps;\r\n    this.cols = this.group.gridProps?.cols || 1;\r\n    this.gutter = this.group.gridProps?.gutter || 1;\r\n    this.hasButton = this.group.hasButton || false;\r\n\r\n    if (this.group.formGroup) {\r\n    this.register.emit(this.formGroup);\r\n    }\r\n\r\n    if (this.editMode) {\r\n      this.formGroup.disable();\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    this.register.emit(this.formGroup.value);\r\n  }\r\n\r\n  private subscribeToFormValues() {\r\n    this.formGroup.valueChanges.subscribe((value) => {\r\n      this.register.emit(this.formGroup);\r\n    });\r\n  }\r\n\r\n  public onSelect(question: QuestionSelectModel) {\r\n    console.log(question);\r\n  }\r\n}\r\n","import { ValidatorFn } from '@angular/forms';\r\nimport { GridProps, QuestionBaseModel } from './question.model';\r\n\r\nexport interface RadioOption {\r\n  label: string;\r\n  value: any;\r\n  checked?: boolean;\r\n}\r\n\r\nexport class QuestionRadio extends QuestionBaseModel<string> {\r\n  public options?: RadioOption[];\r\n\r\n  constructor(options?: {\r\n    key: string;\r\n    label: string;\r\n    gridProps?: GridProps;\r\n    icon?: string;\r\n    validations?: ValidatorFn[];\r\n    options?: RadioOption[];\r\n  }) {\r\n    super(options);\r\n    this.key = options.key;\r\n    this.label = options.label;\r\n    this.controlType = 'radio';\r\n    this.gridProps = options.gridProps;\r\n    this.validations = options.validations;\r\n    this.options = options.options;\r\n  }\r\n}\r\n","import { ValidatorFn } from '@angular/forms';\r\n\r\nexport interface GridProps {\r\n  cols?: number;\r\n  rows?: number;\r\n  offset?: number;\r\n  gutter?: number;\r\n  fullWidth?: boolean;\r\n}\r\n\r\nexport type ControlType =\r\n  | 'text'\r\n  | 'password'\r\n  | 'number'\r\n  | 'textarea'\r\n  | 'select'\r\n  | 'calender'\r\n  | 'radio'\r\n  | 'date'\r\n  | 'group'\r\n  | 'custom'\r\n  | 'autocomplete';\r\n\r\nexport type QuestionType = 'default' | 'group' | 'custom';\r\n\r\nexport abstract class QuestionBaseModel<T> {\r\n  public value?: T | undefined;\r\n  public key: string;\r\n  public label: string;\r\n  public type?: QuestionType;\r\n  public controlType?: ControlType;\r\n  public gridProps?: GridProps;\r\n  public icon?: string;\r\n  public customRef?: string;\r\n  public validations?: ValidatorFn[];\r\n  public disabled?: boolean;\r\n  constructor(options: {\r\n    value?: T;\r\n    key?: string;\r\n    label?: string;\r\n    type?: QuestionType;\r\n    controlType?: ControlType;\r\n    disabled?: boolean;\r\n    gridProps?: GridProps;\r\n    icon?: string;\r\n    customRef?: string;\r\n    validations?: ValidatorFn[];\r\n  }) {\r\n    this.key = options.key || '';\r\n    this.value = options.value;\r\n    this.label = options.label || '';\r\n    this.type = options.type || 'default';\r\n    this.controlType = options.controlType || 'text';\r\n    this.disabled = this.disabled || false;\r\n    this.validations = options.validations || [];\r\n    this.gridProps = options.gridProps || {\r\n      cols: 1,\r\n      rows: 1,\r\n      gutter: 0,\r\n      offset: 0,\r\n      fullWidth: false,\r\n    };\r\n    this.icon = options.icon || '';\r\n    this.customRef = options.customRef || '';\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Observable, BehaviorSubject, Subscription } from 'rxjs';\r\nimport { Palette } from '../../../styles/theme';\r\nimport { IconType } from './icon.model';\r\nimport { IconsService } from './icons.service';\r\n\r\n@Component({\r\n  selector: 'kkl-icon',\r\n  template: (require('./icon.component.html').default || require('./icon.component.html')).length ? (require('./icon.component.html').default || require('./icon.component.html')) : '',\r\n  styles: [(require('./icon.component.scss').default || require('./icon.component.scss')).length ? (require('./icon.component.scss').default || require('./icon.component.scss')) : ''],\r\n})\r\nexport class IconComponent implements OnInit {\r\n  @Input() public key: string;\r\n  @Input() public type: IconType;\r\n  @Input() public size: number;\r\n\r\n  @Input() public color: Palette;\r\n  @Input() public activeColor: Palette;\r\n\r\n  @Input() public active$: Observable<boolean>;\r\n\r\n  @Input() public backgroundColor: Palette;\r\n\r\n  public scale: string;\r\n  public color$: BehaviorSubject<Palette>;\r\n\r\n  private subscription: Subscription;\r\n\r\n  constructor(private iconsService: IconsService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.setIcon();\r\n    this.setColor();\r\n    this.setSize();\r\n    this.subscribeToActive();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private setIcon() {\r\n    const isSvg = this.iconsService.setIcon(this.key);\r\n    if (this.type) {\r\n      this.type = this.type;\r\n    } else {\r\n      this.type = isSvg ? 'svg' : 'mat';\r\n    }\r\n  }\r\n\r\n  private setColor() {\r\n    this.color$ = new BehaviorSubject<Palette>(this.color || 'default');\r\n  }\r\n\r\n  private setSize() {\r\n    this.scale = `scale(${this.size || 1})`;\r\n  }\r\n\r\n  private subscribeToActive() {\r\n    if (this.active$) {\r\n      this.subscription = this.active$.subscribe((active: boolean) => {\r\n        active\r\n          ? this.color$.next(this.activeColor || 'paper')\r\n          : this.color$.next(this.color);\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { MenuItemModel } from './menu-item.model';\r\n\r\n@Component({\r\n  selector: 'kkl-menu-item',\r\n  template: (require('./menu-item.component.html').default || require('./menu-item.component.html')).length ? (require('./menu-item.component.html').default || require('./menu-item.component.html')) : '',\r\n  styles: [(require('./menu-item.component.scss').default || require('./menu-item.component.scss')).length ? (require('./menu-item.component.scss').default || require('./menu-item.component.scss')) : '']\r\n})\r\nexport class MenuItemComponent implements OnInit {\r\n\r\n  @Input() public link: MenuItemModel;\r\n\r\n  public active$: Observable<boolean>;\r\n  private isActive: boolean;\r\n\r\n  @Output() click: EventEmitter<void> = new EventEmitter();\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.active$ = this.link.getActiveObs();\r\n  }\r\n\r\n  public onLinkClick() {\r\n    this.click.emit();\r\n  }\r\n\r\n  private subscribeToActive() {\r\n    this.active$.subscribe((active: boolean) => {\r\n      this.isActive = active;\r\n    });\r\n  }\r\n}\r\n","import { BehaviorSubject, Observable } from 'rxjs';\r\nimport { ListItem } from '../list-item/list-item.model';\r\n\r\nexport class MenuItemModel implements ListItem {\r\n  public key?: string;\r\n  public label?: string;\r\n  public path?: string;\r\n  public svgUrl?: string;\r\n  public scale?: number;\r\n  public size?: number;\r\n  public isActive?: boolean;\r\n\r\n  protected $active: BehaviorSubject<boolean>;\r\n\r\n  constructor(options: {\r\n    label?: string;\r\n    path?: string;\r\n    svgUrl?: string;\r\n    isActive?: boolean;\r\n  }) {\r\n    this.label = options?.label;\r\n    this.path = options?.path;\r\n    this.isActive = options?.isActive || false;\r\n    this.svgUrl = options?.svgUrl || 'arrow_right_alt';\r\n    this.$active = new BehaviorSubject(this.isActive || false);\r\n  }\r\n\r\n  public getActiveObs(): Observable<boolean> {\r\n    return this.$active.asObservable();\r\n  }\r\n\r\n  private emitActive(state: boolean) {\r\n    this.$active.next(state);\r\n  }\r\n\r\n  public active(): void {\r\n    this.isActive = true;\r\n    this.emitActive(this.isActive);\r\n  }\r\n  public unactive(): void {\r\n    this.isActive = false;\r\n    this.emitActive(this.isActive);\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { MenuItemModel } from '../menu-item/menu-item.model';\r\nimport { MenuModel } from './menu.model';\r\n\r\n@Component({\r\n  selector: 'kkl-menu',\r\n  template: (require('./menu.component.html').default || require('./menu.component.html')).length ? (require('./menu.component.html').default || require('./menu.component.html')) : '',\r\n  styles: [(require('./menu.component.scss').default || require('./menu.component.scss')).length ? (require('./menu.component.scss').default || require('./menu.component.scss')) : ''],\r\n})\r\nexport class MenuComponent {\r\n\r\n  @Input() public masterPrefix: string\r\n  @Input() public menu: MenuModel[];\r\n  @Input() public hasLogin: boolean = true\r\n\r\n  public logoutItem: MenuItemModel = new MenuItemModel({\r\n    label: 'יציאה',\r\n    isActive: false,\r\n    path: '',\r\n    svgUrl: 'logout',\r\n  });\r\n\r\n  @Output() changePath: EventEmitter<{ path: string, link: string }> = new EventEmitter();\r\n\r\n\r\n  // UPDATE METHOD WHEN CLICK ON STEP\r\n  public onLinkClick(item: MenuItemModel, modulePrefix: string) {\r\n\r\n    if (!item.isActive) {\r\n      const url = `${this.masterPrefix}/${modulePrefix}`;\r\n      const link = item.path !== modulePrefix ? `${url}/${item.path}` : url;\r\n      this.changePath.emit({ link, path: item.path })\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MenuModel } from './menu.model';\r\nimport { MenuItemModel } from '../menu-item/menu-item.model';\r\nimport { ListItemKeys } from '../list-item/list-item.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MenuService {\r\n\r\n  private menu: MenuModel[]\r\n  private modulePrefix: string;\r\n\r\n  constructor() {}\r\n\r\n  public getMenu() {\r\n    return [...this.menu];\r\n  }\r\n\r\n  public getPrefix(): string {\r\n    return this.modulePrefix;\r\n  }\r\n\r\n  public setPrefix(modulePrefix: string) {\r\n    this.modulePrefix = modulePrefix;\r\n  }\r\n\r\n  // METHODS TO HANDLE ACTIVE STEP STATUS\r\n  private activeStep(items: MenuItemModel[], key: ListItemKeys, value: any) {\r\n    items.find((item) => {\r\n      if (item[key] === value) {\r\n        item.active();\r\n      }\r\n    });\r\n  }\r\n\r\n  private unactiveStep(items: MenuItemModel[]) {\r\n    items.find((item) => {\r\n      if (item.isActive) {\r\n        item.unactive();\r\n      }\r\n    });\r\n  }\r\n\r\n  public setSteps(\r\n    items: MenuItemModel[],\r\n    key: ListItemKeys,\r\n    value: string\r\n  ): MenuItemModel[] {\r\n    this.unactiveStep(items);\r\n    this.activeStep(items, key, value);\r\n    return [...items];\r\n  }\r\n\r\n  public setList(\r\n    menu: MenuModel[],\r\n    key: ListItemKeys,\r\n    value: string\r\n  ): MenuModel[] {\r\n    const updateMenu = [...menu];\r\n\r\n    updateMenu.find((list) => {\r\n      if (list.prefix === this.modulePrefix) {\r\n        list.links = this.setSteps(list.links, key, value);\r\n      }\r\n    });\r\n    return updateMenu;\r\n  }\r\n\r\n  public findList(key: string, value: string): MenuModel {\r\n    return {\r\n      ...this.getMenu().find((list: MenuModel) => list[key] === value),\r\n    };\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navbar-bottom',\r\n  template: (require('./navbar-bottom.component.html').default || require('./navbar-bottom.component.html')).length ? (require('./navbar-bottom.component.html').default || require('./navbar-bottom.component.html')) : '',\r\n  styles: [(require('./navbar-bottom.component.scss').default || require('./navbar-bottom.component.scss')).length ? (require('./navbar-bottom.component.scss').default || require('./navbar-bottom.component.scss')) : '']\r\n})\r\nexport class NavbarBottomComponent implements OnInit {\r\n\r\n  @Input() buttonText: string = '';\r\n  @Input() hasNext: boolean;\r\n  @Input() hasSave: boolean;\r\n\r\n  @Output() previous = new EventEmitter();\r\n  @Output() next = new EventEmitter();\r\n  @Output() save = new EventEmitter();\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public onPrevious(): void {\r\n    this.previous.emit();\r\n  }\r\n\r\n  public onNext(): void {\r\n    this.next.emit();\r\n  }\r\n\r\n  public onSave(): void {\r\n    this.save.emit();\r\n  }\r\n}\r\n","import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { CardStepModel } from '../../cards/card-step/card-step.model';\r\nimport { IconModel } from '../../icon/icon.model';\r\nimport { StepModel } from '../../step/step.model';\r\nimport { NavbarService } from './navbar.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  template: (require('./navbar.component.html').default || require('./navbar.component.html')).length ? (require('./navbar.component.html').default || require('./navbar.component.html')) : '',\r\n  styles: [(require('./navbar.component.scss').default || require('./navbar.component.scss')).length ? (require('./navbar.component.scss').default || require('./navbar.component.scss')) : ''],\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n\r\n  @Input() public openIcon: string;\r\n  @Input() public logos: IconModel[];\r\n\r\n  public title$: Observable<string>;\r\n  public status$: Observable<CardStepModel[]>;\r\n  public showStatus$: Observable<boolean>;\r\n\r\n  public isOpen: boolean = false;\r\n  public openLabel: string = 'תפריט';\r\n  public closeLabel: string = 'סגור תפריט';\r\n\r\n  @Output() menuToggle = new EventEmitter();\r\n\r\n  constructor(private navbarService : NavbarService) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.title$ = this.navbarService.getTitleObs()\r\n    this.status$ = this.navbarService.getStatusObs();\r\n   this.showStatus$ = this.navbarService.getShowStatusObs()\r\n\r\n  }\r\n\r\n  public toggleMenu() {\r\n    this.isOpen = !this.isOpen;\r\n    this.menuToggle.emit();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { CardStepModel } from '../../cards/card-step/card-step.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NavbarService {\r\n  private title$: BehaviorSubject<string>;\r\n  private status$: BehaviorSubject<CardStepModel[]>;\r\n  private showStatus$: BehaviorSubject<boolean>;\r\n\r\n  constructor() {\r\n    this.title$ = new BehaviorSubject<string>('');\r\n    this.status$ = new BehaviorSubject<CardStepModel[]>([]);\r\n    this.showStatus$  = new BehaviorSubject<boolean>(true)\r\n  }\r\n\r\n  public getTitleObs(): Observable<string> {\r\n    return this.title$.asObservable();\r\n  }\r\n\r\n  public emitTitle(value: string) {\r\n    return this.title$.next(value);\r\n  }\r\n\r\n  public getStatusObs(): Observable<CardStepModel[]> {\r\n    return this.status$.asObservable();\r\n  }\r\n\r\n  public emitStatus(value: CardStepModel[]): void {\r\n    console.log(value)\r\n    this.status$.next(value);\r\n  }\r\n\r\n  public getShowStatusObs(): Observable<boolean> {\r\n    return this.showStatus$.asObservable();\r\n  }\r\n\r\n  public emitShowStatus(value: boolean): void {\r\n    this.showStatus$.next(value);\r\n  }\r\n\r\n  public toggleStatus(show: boolean, status: CardStepModel[]): void {\r\n    show ? this.emitStatus(status) : this.emitStatus([]);\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { PaginationInstance } from 'ngx-pagination';\r\n\r\n@Component({\r\n  selector: 'app-pagination',\r\n  template: (require('./pagination.component.html').default || require('./pagination.component.html')).length ? (require('./pagination.component.html').default || require('./pagination.component.html')) : '',\r\n  styles: [(require('./pagination.component.scss').default || require('./pagination.component.scss')).length ? (require('./pagination.component.scss').default || require('./pagination.component.scss')) : '']\r\n})\r\nexport class PaginationComponent implements OnInit {\r\n\r\n  @Input() public pagination: PaginationInstance ;\r\n\r\n  @Input() paginationCount: number;\r\n  @Input() maxSize: number;\r\n\r\n  @Output() newPage: EventEmitter<number> = new EventEmitter();\r\n\r\n\r\n  public labels: any = {\r\n    previousLabel: 'הקודם',\r\n    nextLabel: 'הבא',\r\n};\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public onPageChange(number) {\r\n    this.pagination.currentPage = number;\r\n  }\r\n}\r\n","import { Component, ElementRef, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { StatusModel } from './status.model';\r\n\r\n@Component({\r\n  selector: 'app-status',\r\n  template: (require('./status.component.html').default || require('./status.component.html')).length ? (require('./status.component.html').default || require('./status.component.html')) : '',\r\n  styles: [(require('./status.component.scss').default || require('./status.component.scss')).length ? (require('./status.component.scss').default || require('./status.component.scss')) : ''],\r\n})\r\nexport class StatusComponent implements OnInit {\r\n\r\n  @Input() public cols: number\r\n  @Input() public height: number\r\n  @Input() public gutter: number\r\n  @Input() public color: string;\r\n  @Input() public hasLabel: boolean\r\n  @Input() public status: StatusModel;\r\n\r\n  @Input() slots: {textRef: ElementRef }\r\n\r\n  @Output() click  = new EventEmitter()\r\n\r\n  public steps: number[] = [];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.cols = this.cols || 8\r\n    this.color = this.color || 'accent';\r\n\r\n    for (let i = 1; i <= this.status.value; i++) {\r\n      this.steps.push(100);\r\n    }\r\n    for (let i = [...this.steps].length; i < this.cols; i++) {\r\n      this.steps.push(0);\r\n    }\r\n  }\r\n}\r\n","\r\nexport class StatusModel {\r\n\r\n  public label  : string\r\n  public value  : number\r\n\r\n  constructor(\r\n    options: {\r\n      label?: string,\r\n      value?: number,\r\n    }\r\n  ) {\r\n    this.label = options?.label;\r\n    this.value = options?.value;\r\n  }\r\n\r\n  static create(status: StatusModel) {\r\n    return new StatusModel({\r\n      label: status.label,\r\n      value: status.value,\r\n    })\r\n  }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ElementRef,\r\n} from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { CardStepModel } from '../cards/card-step/card-step.model';\r\n\r\n@Component({\r\n  selector: 'kkl-stepper',\r\n  template: (require('./stepper.component.html').default || require('./stepper.component.html')).length ? (require('./stepper.component.html').default || require('./stepper.component.html')) : '',\r\n  styles: [(require('./stepper.component.scss').default || require('./stepper.component.scss')).length ? (require('./stepper.component.scss').default || require('./stepper.component.scss')) : ''],\r\n})\r\nexport class StepperComponent {\r\n\r\n  @Input() steps: CardStepModel[];\r\n\r\n  @Input() steps$: Observable<CardStepModel[]>;\r\n\r\n  @Input() direction: string;\r\n  @Input() stepRef: ElementRef;\r\n\r\n  @Output() changStep = new EventEmitter<CardStepModel>();\r\n\r\n  constructor() { }\r\n\r\n  public onStepChange(step: CardStepModel) {\r\n    this.changStep.emit(step);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\nimport { PaginationInstance } from 'ngx-pagination';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { RowModel } from './models/row.model';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { Sort } from '@angular/material/sort';\r\nimport { TableService } from './table.service';\r\nimport { EditRow, TableDataSource } from './table-datasource';\r\nimport { ColumnModel } from '../columns/column.model';\r\n\r\ndeclare type id = string | number;\r\n\r\nexport interface TableOptions<T> {\r\n  filters?: (keyof T)[];\r\n  pagination?: PaginationInstance;\r\n  editable?: id[];\r\n  pending?: id[];\r\n}\r\n\r\nexport interface Table<T> {\r\n  columns: ColumnModel[];\r\n  data: T[];\r\n  options: TableOptions<T>;\r\n  model: T;\r\n  dataSource: TableDataSource<T>;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-table',\r\n  template: (require('./table.component.html').default || require('./table.component.html')).length ? (require('./table.component.html').default || require('./table.component.html')) : '',\r\n  styles: [(require('./table.component.scss').default || require('./table.component.scss')).length ? (require('./table.component.scss').default || require('./table.component.scss')) : ''],\r\n  providers: [TableService, TableService],\r\n})\r\nexport class TableComponent<T> implements OnInit, Table<T> {\r\n  @Input() public theme: ThemePalette;\r\n\r\n  @Input() public data: T[];\r\n  @Input() public columns: ColumnModel[];\r\n  @Input() public model: T;\r\n  @Input() public options: TableOptions<T>;\r\n\r\n  @Input() public rowSlots: {};\r\n  @Input() public headerSlots: { headerActions: ElementRef };\r\n\r\n  private subscription: Subscription;\r\n\r\n  public dataSource: TableDataSource<T>;\r\n\r\n  public columnDefs: (string | keyof T)[];\r\n\r\n  public $data: Observable<RowModel<T>[]>;\r\n  public $columnDefs: Observable<string[]>;\r\n  public tableColumns: ColumnModel[];\r\n  public pagination: PaginationInstance;\r\n\r\n  @Output() register: EventEmitter<TableDataSource<T>> = new EventEmitter();\r\n  @Output() sort: EventEmitter<Sort> = new EventEmitter();\r\n  @Output() filter: EventEmitter<RowModel<T>> = new EventEmitter();\r\n\r\n  constructor(private tableService: TableService<T>) {}\r\n\r\n  ngOnInit() {\r\n    this.theme = this.theme || 'accent';\r\n    this.setTable();\r\n  }\r\n\r\n  private setTable() {\r\n    const { pagination, filters } = this.options;\r\n\r\n    this.dataSource = new TableDataSource<T>(this.data, this.options);\r\n\r\n    const data$ = this.dataSource.connectToRows();\r\n    const { columns, columnsDefs } = this.tableService.setColumns(\r\n      this.columns,\r\n      this.model,\r\n      [...filters]\r\n    );\r\n\r\n    this.$data = data$;\r\n    this.tableColumns = columns;\r\n    this.columnDefs = columnsDefs;\r\n    this.pagination = pagination;\r\n    this.register.emit(this.dataSource);\r\n\r\n    this.subscribeToRowEdit();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  public onRowClicked(row: T) {}\r\n\r\n  public onSort(sort: Sort) {\r\n    this.sort.emit(sort);\r\n  }\r\n\r\n  public onFilter(row: RowModel<T>) {\r\n    this.filter.emit(row);\r\n  }\r\n\r\n  public subscribeToRowEdit() {\r\n    this.subscription = this.dataSource\r\n      .connectEdit()\r\n      .subscribe((data: EditRow<T>) => {\r\n        const { row, options } = data;\r\n        const rows = this.dataSource.getRows();\r\n        const index = this.tableService.findRowIndex(rows, 'id', row.item);\r\n        const { editRow, columns } = this.tableService.onEditMode(\r\n          row,\r\n          this.tableColumns,\r\n          options\r\n        );\r\n\r\n        rows[index] = editRow;\r\n        this.tableColumns = columns;\r\n        this.dataSource.loadRows(rows);\r\n      });\r\n  }\r\n\r\n  private getProperty<T, K extends keyof T>(obj: T, key: K) {\r\n    return obj[key];\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { Classes } from '../../utilities/directives/classes.directive';\r\nimport { Palette } from '../../../styles/theme';\r\nimport { TypographyService } from './typography.service';\r\n\r\n@Component({\r\n  selector: 'kkl-typography',\r\n  template: (require('./typography.component.html').default || require('./typography.component.html')).length ? (require('./typography.component.html').default || require('./typography.component.html')) : '',\r\n  styles: [(require('./typography.component.scss').default || require('./typography.component.scss')).length ? (require('./typography.component.scss').default || require('./typography.component.scss')) : ''],\r\n})\r\nexport class TypographyComponent implements OnInit {\r\n\r\n  @Input() color: Palette;\r\n  @Input() size: number;\r\n  @Input() bold: number;\r\n  @Input() button: boolean;\r\n\r\n  @Input() classes: Classes\r\n  @Input() activeClasses: Classes;\r\n\r\n  @Input() active$: Observable<boolean>;\r\n\r\n  private unsubscribe: Subscription;\r\n\r\n  public classes$: Observable<Classes>\r\n\r\n\r\n  constructor(\r\n    private typographyService: TypographyService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.seFontSize();\r\n    this.setFontWeight();\r\n    this.setClasses();\r\n    this.classes$ = this.typographyService.getClasses()\r\n    this.subscribeToActive();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.unsubscribe) {\r\n      this.unsubscribe.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private seFontSize() {\r\n    this.size = this.size || 1.4;\r\n  }\r\n\r\n  private setFontWeight() {\r\n    this.bold = this.bold || 500;\r\n  }\r\n\r\n  private setClasses() {\r\n    this.classes = this.classes || {\r\n      fontSize: this.size || 1.4,\r\n      fontWeight: this.bold | 500,\r\n      color: this.color || 'text',\r\n      cursor: this.button ? 'pointer' : 'initial'\r\n    };\r\n    this.typographyService.setClasses(this.classes)\r\n  }\r\n\r\n  private subscribeToActive() {\r\n    if (this.active$) {\r\n      this.unsubscribe = this.active$.subscribe((active) => {\r\n        active\r\n          ? this.typographyService.updateClasses(this.activeClasses)\r\n          : this.typographyService.updateClasses(this.classes)\r\n\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { Classes } from '../../utilities/directives/classes.directive';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TypographyService {\r\n\r\n  private classes$: BehaviorSubject<Classes>;\r\n\r\n\r\n  constructor() { }\r\n\r\n  public getClasses(): Observable<Classes> {\r\n    return this.classes$.asObservable()\r\n  }\r\n\r\n  public updateClasses(classes: Classes) {\r\n    this.classes$.next(classes)\r\n  }\r\n\r\n  public setClasses(classes: Classes) {\r\n    this.classes$ = new BehaviorSubject<Classes>(classes)\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { CardDashboardModel } from '../../components/cards/card-dashboard/card-dashboard.model';\r\n\r\n@Component({\r\n  selector: 'kkl-dashboard-ex',\r\n  template: (require('./dashboard-ex.component.html').default || require('./dashboard-ex.component.html')).length ? (require('./dashboard-ex.component.html').default || require('./dashboard-ex.component.html')) : '',\r\n  styles: [(require('./dashboard-ex.component.scss').default || require('./dashboard-ex.component.scss')).length ? (require('./dashboard-ex.component.scss').default || require('./dashboard-ex.component.scss')) : '']\r\n})\r\nexport class DashboardExComponent implements OnInit {\r\n\r\n  @Input() public cards: CardDashboardModel[];\r\n  @Input() public width: number;\r\n  @Input() public moduleTitle: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, Inject, Input, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { CardStepModel } from '../../components/cards/card-step/card-step.model';\r\nimport { IconModel } from '../../components/icon/icon.model';\r\nimport { MenuModel } from '../../components/menu/menu.model';\r\nimport { MenuService } from '../../components/menu/menu.service';\r\nimport { NavbarService } from '../../components/navigation/navbar/navbar.service';\r\nimport { StepperDirection } from '../../components/step/step.model';\r\nimport { StepperService } from '../../components/stepper/stepper.service';\r\n\r\n@Component({\r\n  selector: 'kkl-layout-ex',\r\n  template: (require('./layout-ex.component.html').default || require('./layout-ex.component.html')).length ? (require('./layout-ex.component.html').default || require('./layout-ex.component.html')) : '',\r\n  styles: [(require('./layout-ex.component.scss').default || require('./layout-ex.component.scss')).length ? (require('./layout-ex.component.scss').default || require('./layout-ex.component.scss')) : '']\r\n})\r\nexport class LayoutExComponent implements OnInit {\r\n\r\n  // NAVBAR DATA SECTION\r\n\r\n  // uniqu gradient icon per project\r\n  @Input() public openIcon: string;\r\n\r\n  @Input() public logos: IconModel[];\r\n  @Input() public showStatusPath: string[] = [];\r\n  @Input() public prefix: string;\r\n  @Input() public status: CardStepModel[];\r\n\r\n  // WIZARD SECTION\r\n  @Input() public steps: CardStepModel[];\r\n  @Input() public direction: StepperDirection = 'column';\r\n  @Input() public hideWizardPath: string[] = [];\r\n\r\n  // MENU SECTION\r\n  @Input() public menu: MenuModel[];\r\n\r\n  constructor(\r\n    private stepperService: StepperService,\r\n    private menuService: MenuService,\r\n    private navbarService: NavbarService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.subscribeToModulePrefix();\r\n    this.subscribeToRouter();\r\n    this.setProps();\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.status) {\r\n      console.log(1)\r\n      this.navbarService.emitStatus(this.status);\r\n    }\r\n  }\r\n\r\n  // SET PROPS METHOD\r\n  private setProps() {\r\n\r\n  }\r\n\r\n  private subscribeToRouter() {\r\n  }\r\n\r\n  private subscribeToModulePrefix() {\r\n  }\r\n\r\n  private setSteps(modulePrefix: string) {\r\n    this.steps = this.stepperService.setSteps(\r\n      this.steps,\r\n      'path',\r\n      modulePrefix\r\n    );\r\n  }\r\n\r\n  private setMenu(path: string) {\r\n  }\r\n\r\n  public onChangeStep(step: CardStepModel) {\r\n  }\r\n\r\n  public onChangePath(data: { link: string, path: string }) {\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { CardStepModel } from '../../components/cards/card-step/card-step.model';\r\nimport {\r\n  StepModel,\r\n  StepperDirection,\r\n} from '../../components/step/step.model';\r\nimport { StepperService } from '../../components/stepper/stepper.service';\r\n\r\n@Component({\r\n  selector: 'kkl-stepper-ex',\r\n  template: (require('./stepper-ex.component.html').default || require('./stepper-ex.component.html')).length ? (require('./stepper-ex.component.html').default || require('./stepper-ex.component.html')) : '',\r\n  styles: [(require('./stepper-ex.component.scss').default || require('./stepper-ex.component.scss')).length ? (require('./stepper-ex.component.scss').default || require('./stepper-ex.component.scss')) : ''],\r\n})\r\nexport class StepperExComponent {\r\n  constructor(private stepperService: StepperService) {}\r\n\r\n  @Input() public steps: CardStepModel[];\r\n  @Input() public direction: StepperDirection;\r\n\r\n  public onStepChange(step: StepModel) {\r\n    this.steps = this.stepperService.setSteps(this.steps, 'path', step.path);\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { ColumnModel } from '../../components/columns/column.model';\r\nimport { TableOptions } from '../../components/table/table.component';\r\n\r\n@Component({\r\n  selector: 'app-table-ex',\r\n  template: (require('./table-ex.component.html').default || require('./table-ex.component.html')).length ? (require('./table-ex.component.html').default || require('./table-ex.component.html')) : '',\r\n  styles: [(require('./table-ex.component.scss').default || require('./table-ex.component.scss')).length ? (require('./table-ex.component.scss').default || require('./table-ex.component.scss')) : ''],\r\n})\r\nexport class TableExComponent<T> implements OnInit {\r\n  @Input() public theme: ThemePalette;\r\n\r\n  @Input() public data: T[];\r\n  @Input() public columns: ColumnModel[];\r\n  @Input() public model: T;\r\n  @Input() public options: TableOptions<T>;\r\n  \r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { CardDashboardModel } from '../../components/cards/card-dashboard/card-dashboard.model';\r\nimport { BreakpointService } from '../../utilities/services/breakpoint.service';\r\n\r\n@Component({\r\n  selector: 'kkl-dashboard',\r\n  template: (require('./dashboard.component.html').default || require('./dashboard.component.html')).length ? (require('./dashboard.component.html').default || require('./dashboard.component.html')) : '',\r\n  styles: [(require('./dashboard.component.scss').default || require('./dashboard.component.scss')).length ? (require('./dashboard.component.scss').default || require('./dashboard.component.scss')) : '']\r\n})\r\nexport class DashboardComponent {\r\n\r\n  @Input() public prefix: string;\r\n  @Input() public width: number;\r\n  @Input() public moduleTitle: string;\r\n  @Input() public cards: CardDashboardModel[];\r\n  \r\n  public md$: Observable<boolean>;\r\n  public cols: number;\r\n\r\n  @Output() cardClick: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  constructor(\r\n    private breakpointService: BreakpointService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.md$ = this.breakpointService.isTablet();\r\n    this.setCols()\r\n  }\r\n\r\n  private setCols() {\r\n    this.cols =  (this.cards.length)  <= 3 ? this.cards.length : (this.cards.length / 2)\r\n  }\r\n\r\n  public onCardClick(card) {\r\n    if (this.prefix) {\r\n      const path: string = `${this.prefix}/${card.path}`;\r\n      this.cardClick.emit(path)\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Subscription, Observable } from 'rxjs';\r\nimport { IconModel } from '../../components/icon/icon.model';\r\nimport { NavbarService } from '../../components/navigation/navbar/navbar.service';\r\nimport { LayoutService } from './layout.service';\r\n\r\n@Component({\r\n  selector: 'kkl-layout',\r\n  template: (require('./layout.component.html').default || require('./layout.component.html')).length ? (require('./layout.component.html').default || require('./layout.component.html')) : '',\r\n  styles: [(require('./layout.component.scss').default || require('./layout.component.scss')).length ? (require('./layout.component.scss').default || require('./layout.component.scss')) : '']\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n\r\n  private statusSubscription: Subscription;\r\n\r\n  @Input() public openIcon: string;\r\n  @Input() public logos: IconModel[];\r\n\r\n  @Input() public hideWizardPath: string[];\r\n  @Input() public showStatusPath: string[];\r\n\r\n  public wizard$: Observable<boolean>;\r\n\r\n  constructor(\r\n    private layoutService: LayoutService,\r\n    private navbarService: NavbarService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getCurrentPath();\r\n    this.subscribeToLastPath();\r\n    this.wizard$ = this.layoutService.getWizardObs();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.statusSubscription) {\r\n      this.statusSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n\r\n  // VIEW METHODS SECTION\r\n\r\n  private findPath(list: any[], value: string): boolean {\r\n    return !!list.find((path: string) => path == value);\r\n  }\r\n\r\n  private handleStatusState(path: string) {\r\n    this.navbarService.emitShowStatus(this.findPath(this.showStatusPath, path));\r\n  }\r\n\r\n  private handleShowState(path: string) {\r\n    this.layoutService.toggleWizard(this.findPath(this.hideWizardPath, path));\r\n    this.handleStatusState(path);\r\n  }\r\n\r\n  // ROUTE METHODS SECTION\r\n  private getCurrentPath() {\r\n    // const path = this.routerService.getCurrentPath();\r\n    // this.handleShowState(path);\r\n  }\r\n\r\n  private subscribeToLastPath() {\r\n    //   this.routerSubscription = this.routerService\r\n    //     .getLastPathObs()\r\n    //     .subscribe((path) => {\r\n    //       this.handleShowState(path);\r\n    //     });\r\n    // }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LayoutService {\r\n  private hideWizard$: BehaviorSubject<boolean>;\r\n\r\n  constructor() {\r\n    this.hideWizard$ = new BehaviorSubject<boolean>(false);\r\n  }\r\n\r\n  public getWizardObs(): Observable<boolean> {\r\n    return this.hideWizard$.asObservable();\r\n  }\r\n\r\n  public toggleWizard(value: boolean) {\r\n    return this.hideWizard$.next(value);\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  HostBinding,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { theme, Palette } from '../../../styles/theme';\r\n\r\n@Directive({\r\n  selector: '[appColor]',\r\n})\r\nexport class ColorDirective implements OnInit, OnDestroy {\r\n  private palette = theme.palette;\r\n  private subscription: Subscription\r\n\r\n  @Input() public color: Palette;\r\n  @Input() public color$: Observable<Palette>;\r\n\r\n  @HostBinding('style.color') private iconColor: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.iconColor = this.palette[this.color];\r\n    this.subscribeToColor()\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe()\r\n    }\r\n  }\r\n\r\n  private subscribeToColor() {\r\n    if (this.color$) {\r\n      this.subscription = this.color$.subscribe(\r\n        (color) => {\r\n          this.iconColor = this.palette[color]\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n}\r\n","import { Directive, HostBinding, Input } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { StepType } from '../../components/step/step.model';\r\nimport { BreakpointService } from '../services/breakpoint.service';\r\n\r\n@Directive({\r\n  selector: '[appSize]',\r\n})\r\nexport class SizeDirective {\r\n  @Input() size: number;\r\n  @Input() type: StepType;\r\n  @Input() divider: number;\r\n  private tablet$: Observable<boolean>;\r\n\r\n  private subscription: Subscription;\r\n\r\n  @HostBinding('style.height') public height: string;\r\n  @HostBinding('style.width') public width: string;\r\n\r\n  constructor(private breakpointService: BreakpointService) {}\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.setSize();\r\n    this.tablet$ = this.breakpointService.isTablet();\r\n    this.subscribeToBreakpoint();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  private setSize() {\r\n    switch (this.type) {\r\n      case 'wizard':\r\n        this.width = '6rem';\r\n        this.height = '7.5rem';\r\n        break;\r\n      case 'status':\r\n        this.width = `${6 * (this.divider || 1)}rem`;\r\n        this.height = `6rem`;\r\n        break;\r\n      case 'step':\r\n        this.width = `8rem`;\r\n        this.height = `12rem`;\r\n        break;\r\n      default:\r\n        this.width = `${this.size * (this.divider || 1)}rem`;\r\n        this.height = `${this.size}rem`;\r\n    }\r\n  }\r\n\r\n  private subscribeToBreakpoint() {\r\n    this.subscription = this.tablet$.subscribe((tablet: boolean) => {\r\n      this.setSize();\r\n    });\r\n  }\r\n}\r\n","import { Directive, Input, HostBinding } from '@angular/core';\r\nimport { StepVariant, StepType } from '../../components/step/step.model';\r\n\r\n@Directive({\r\n  selector: '[appVariant]',\r\n})\r\nexport class VariantDirective {\r\n  @Input() variant: StepVariant = 'circle';\r\n  @Input() type: StepType;\r\n\r\n  @HostBinding('style.border') private border: string;\r\n  @HostBinding('style.border-radius') private radius: string;\r\n  @HostBinding('style.box-shadow') private boxShadow: string;\r\n  @HostBinding('style.background') private background: string;\r\n  @HostBinding('style.background-color') private backgroundColor: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n\r\n    switch (this.variant) {\r\n      case 'circle':\r\n\r\n        this.radius = `${5}rem`;\r\n\r\n        switch (this.type) {\r\n\r\n          case 'step':\r\n            this.boxShadow ='0px 3px 3px 1px #dadada, 0px 0px 0px 9px #ececec';\r\n            this.background = `linear-gradient(0deg, #eeeeee 0%, #fefefe 100%)`;\r\n\r\n            break;\r\n\r\n          case 'status':\r\n            this.boxShadow = '0px 0px 0px 6px #ffffff !important';\r\n            this.backgroundColor = '#ffffff !important';\r\n            this.border = `1px solid #00000029`;\r\n            break;\r\n        }\r\n\r\n        break\r\n\r\n      case 'square':\r\n\r\n        switch (this.type) {\r\n\r\n          case 'step':\r\n                      this.background = `linear-gradient(0deg, #eeeeee 0%, #fefefe 100%)`;\r\n\r\n            break;\r\n        }\r\n\r\n    }\r\n\r\n  }\r\n}\r\n","import { ThemePalette } from '@angular/material/core';\r\n\r\n// export declare type Palette =\r\n//   | ThemePalette\r\n//   | 'paper'\r\n//   | 'default'\r\n//   | 'disable'\r\n//   | 'table'\r\n//   | 'text'\r\n//   | 'success';\r\nexport declare type Palette = string;\r\n\r\nexport type Color = { [color in Palette]: string };\r\n\r\nexport interface Theme {\r\n  palette: Color;\r\n}\r\n\r\nexport const theme: Theme = {\r\n  palette: {\r\n    primary: '#d6a348',\r\n    accent: '#ff6f2e',\r\n    warn: '#d83020',\r\n    paper: '#fff',\r\n    default: '#bababa',\r\n    disable: 'rgba(0, 0, 0, 0.26)',\r\n    table: '#F8F8F8',\r\n    text: '#000000',\r\n    success: '#59a437',\r\n  },\r\n};\r\n"],"names":[],"sourceRoot":""}