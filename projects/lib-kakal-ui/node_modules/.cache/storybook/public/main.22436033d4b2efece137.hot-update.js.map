{"version":3,"file":"main.22436033d4b2efece137.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;ACvFA;AAEA;AAOA;AACA;AACA;AACA;AAOA;AAsBA;AACA;AACA;AACA;AACA;AAzBA;AAQA;AACA;AACA;AACA;AAIA;AACA;AAUA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAMA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAvIA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AALA;AALA;AACA;AACA;AACA;AACA;AAwBA;AAvBA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AAKA;AAWA;AAAA;AAAA;AARA;AACA;AAQA;AACA;AAoBA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AAiCA;AACA;AACA;AAEA;AACA;AACA;AAeA;AAtGA;AAHA;AACA;AACA;AAYA;AAXA;AAAA","sources":["webpack://lib-kakal-ui/./src/lib/stories/Menu.stories.ts","webpack://lib-kakal-ui/./src/lib/app/examples/layout-ex/layout-ex.component.ts","webpack://lib-kakal-ui/./src/lib/app/utilities/services/route.service.ts"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { moduleMetadata, Story, Meta } from '@storybook/angular';\\r\\nimport { APP_BASE_HREF, CommonModule } from '@angular/common';\\r\\nimport { MaterialModule } from '../material/material.module';\\r\\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\\r\\n\\r\\nimport { MenuComponent } from '../app/components/menu/menu.component';\\r\\nimport { TypographyComponent } from '../app/components/typography/typography.component';\\r\\nimport { CardUserComponent } from '../app/components/cards/card-user/card-user.component';\\r\\nimport { MenuItemComponent } from '../app/components/menu-item/menu-item.component';\\r\\nimport { IconComponent } from '../app/components/icon/icon.component';\\r\\n\\r\\nimport { ColorDirective } from '../app/utilities/directives/color.directive';\\r\\nimport { SizeDirective } from '../app/utilities/directives/size.directive';\\r\\nimport { ButtonDirective } from '../app/utilities/directives/button.directive';\\r\\n\\r\\nexport default {\\r\\n  title: 'Menu',\\r\\n  component: MenuComponent,\\r\\n  decorators: [\\r\\n    moduleMetadata({\\r\\n      declarations: [\\r\\n        MenuItemComponent,\\r\\n        CardUserComponent,\\r\\n        TypographyComponent,\\r\\n        IconComponent,\\r\\n\\r\\n        SizeDirective, ColorDirective, ButtonDirective],\\r\\n      providers: [],\\r\\n      imports: [\\r\\n        CommonModule,\\r\\n        MaterialModule,\\r\\n        BrowserAnimationsModule,\\r\\n      ],\\r\\n    }),\\r\\n  ],\\r\\n} as Meta;\\r\\n\\r\\nconst Template: Story<MenuComponent> = (args: MenuComponent) => ({\\r\\n  props: args,\\r\\n});\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\nDefault.args = {\\r\\n  menu: [\\r\\n    {\\r\\n      label: 'ראשי',\\r\\n      prefix: 'assets',\\r\\n      links: [],\\r\\n    },\\r\\n    {\\r\\n      label: 'פיקוח',\\r\\n      prefix: 'supervision',\\r\\n      links: [],\\r\\n    },\\r\\n    {\\r\\n      label: 'שומה',\\r\\n      prefix: 'evaluation',\\r\\n      links: [],\\r\\n    },\\r\\n    {\\r\\n      label: 'עסקאות',\\r\\n      prefix: 'transactions',\\r\\n      links: [],\\r\\n    },\\r\\n    {\\r\\n      label: 'מדידות',\\r\\n      prefix: 'measurements',\\r\\n      links: [],\\r\\n    },\\r\\n    {\\r\\n      label: 'תכנון',\\r\\n      prefix: 'design',\\r\\n      links: [],\\r\\n    },\\r\\n  ],\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":39,\"line\":38},\"endLoc\":{\"col\":2,\"line\":40},\"startBody\":{\"col\":39,\"line\":38},\"endBody\":{\"col\":2,\"line\":40}}};\n    \nimport { moduleMetadata, Story, Meta } from '@storybook/angular';\r\nimport { APP_BASE_HREF, CommonModule } from '@angular/common';\r\nimport { MaterialModule } from '../material/material.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { MenuComponent } from '../app/components/menu/menu.component';\r\nimport { TypographyComponent } from '../app/components/typography/typography.component';\r\nimport { CardUserComponent } from '../app/components/cards/card-user/card-user.component';\r\nimport { MenuItemComponent } from '../app/components/menu-item/menu-item.component';\r\nimport { IconComponent } from '../app/components/icon/icon.component';\r\n\r\nimport { ColorDirective } from '../app/utilities/directives/color.directive';\r\nimport { SizeDirective } from '../app/utilities/directives/size.directive';\r\nimport { ButtonDirective } from '../app/utilities/directives/button.directive';\r\n\r\nexport default {\r\n  title: 'Menu',\r\n  component: MenuComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [\r\n        MenuItemComponent,\r\n        CardUserComponent,\r\n        TypographyComponent,\r\n        IconComponent,\r\n\r\n        SizeDirective, ColorDirective, ButtonDirective],\r\n      providers: [],\r\n      imports: [\r\n        CommonModule,\r\n        MaterialModule,\r\n        BrowserAnimationsModule,\r\n      ],\r\n    }),\r\n  ],\r\n} as Meta;\r\n\r\nconst Template: Story<MenuComponent> = (args: MenuComponent) => ({\r\n  props: args,\r\n});\r\n\r\nexport const Default = Template.bind({});\r\nDefault.args = {\r\n  menu: [\r\n    {\r\n      label: 'ראשי',\r\n      prefix: 'assets',\r\n      links: [],\r\n    },\r\n    {\r\n      label: 'פיקוח',\r\n      prefix: 'supervision',\r\n      links: [],\r\n    },\r\n    {\r\n      label: 'שומה',\r\n      prefix: 'evaluation',\r\n      links: [],\r\n    },\r\n    {\r\n      label: 'עסקאות',\r\n      prefix: 'transactions',\r\n      links: [],\r\n    },\r\n    {\r\n      label: 'מדידות',\r\n      prefix: 'measurements',\r\n      links: [],\r\n    },\r\n    {\r\n      label: 'תכנון',\r\n      prefix: 'design',\r\n      links: [],\r\n    },\r\n  ],\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"(args: MenuComponent) => ({\\r\\n  props: args,\\r\\n})\" }, ...Default.parameters };","import { Component, Inject, Input, OnInit } from '@angular/core';\r\nimport { Subscription, Observable } from 'rxjs';\r\nimport { distinctUntilChanged, map, switchMap } from 'rxjs/operators';\r\nimport {\r\n  CardStepModel,\r\n  StepperDirection,\r\n} from '../../components/cards/card-step/card-step.model';\r\nimport { IconModel } from '../../components/icon/icon.model';\r\nimport { MenuModel } from '../../components/menu/menu.model';\r\nimport { MenuService } from '../../components/menu/menu.service';\r\nimport { NavbarService } from '../../components/navbar/navbar.service';\r\nimport { LayoutService } from '../../screens/layout/layout.service';\r\nimport { RouterService } from '../../utilities/services/route.service';\r\n\r\n@Component({\r\n  selector: 'app-layout-ex',\r\n  template: (require('./layout-ex.component.html').default || require('./layout-ex.component.html')).length ? (require('./layout-ex.component.html').default || require('./layout-ex.component.html')) : '',\r\n  styles: [(require('./layout-ex.component.scss').default || require('./layout-ex.component.scss')).length ? (require('./layout-ex.component.scss').default || require('./layout-ex.component.scss')) : ''],\r\n})\r\nexport class LayoutExComponent implements OnInit {\r\n  @Input() public projectPrefix: string = '';\r\n  @Input() public logos: IconModel[];\r\n  @Input() public status: CardStepModel[];\r\n  @Input() public steps: CardStepModel[];\r\n  @Input() public menu: MenuModel[];\r\n\r\n  private pathSubscription: Subscription;\r\n\r\n  // NAVBAR SECTION\r\n  private headers = { lands: 'מקרקעין', neches: 'מנהלת ספר נכסים' };\r\n  public openIcon: string = 'treegradientlands';\r\n  public showStatusPath: string[] = [this.projectPrefix, 'neches'];\r\n\r\n  // WIZARD SECTION\r\n  public steps$: Observable<CardStepModel[]>;\r\n  public direction: StepperDirection = 'column';\r\n  public hideWizardPath: string[] = ['results', this.projectPrefix];\r\n\r\n  // MENU SECTION\r\n  public menu$: Observable<MenuModel[]>;\r\n\r\n  constructor(\r\n    private menuService: MenuService,\r\n    private navbarService: NavbarService,\r\n    private layoutService: LayoutService,\r\n    private routerService: RouterService\r\n  ) {}\r\n\r\n  // ROUTE METHODS SECTION\r\n  private setCurrentPath() {\r\n    const path = this.routerService.getCurrentPath();\r\n    this.layoutService.emitCurrentPath(path);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setCurrentPath();\r\n    this.setNavbar();\r\n    this.steps$ = this.setWizard();\r\n    this.menu$ = this.setMenu();\r\n    this.subscribeToRouter();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n<<<<<<< HEAD\r\n    if (this.pathSubscription) {\r\n      this.pathSubscription.unsubscribe();\r\n=======\r\n    if (this.status) {\r\n      this.navbarService.emitStatus(this.status);\r\n>>>>>>> f2b8410da69f9d70dfad648367224ec7d8520aa9\r\n    }\r\n  }\r\n\r\n  private setNavbar() {\r\n    this.navbarService.setHeaders(this.headers);\r\n    this.navbarService.emitStatus(this.status);\r\n    this.navbarService.setHeadersObs(this.setHeaders());\r\n    this.logos = this.logos;\r\n  }\r\n\r\n  private setHeaders() {\r\n    return this.routerService.getModulePrefixObs().pipe(\r\n      distinctUntilChanged(),\r\n      map((path: string) => this.headers[path])\r\n    );\r\n  }\r\n\r\n  private subscribeToRouter() {\r\n    this.pathSubscription = this.routerService\r\n      .getLastPathObs()\r\n      .subscribe((path: string) => {\r\n        path === this.projectPrefix && this.navbarService.emitTitle(path);\r\n        this.layoutService.emitCurrentPath(path);\r\n        this.routerService.currentPath$.next(path);\r\n      });\r\n  }\r\n\r\n  private setWizard() {\r\n    return this.routerService.getModulePrefixObs().pipe(\r\n      map((path: string) => {\r\n        const steps = this.steps;\r\n\r\n        steps.map((step) => {\r\n          if (step.isActive) {\r\n            step.unactive();\r\n          }\r\n          if (step.path === path) {\r\n            step.active();\r\n          }\r\n        });\r\n\r\n        return steps;\r\n      })\r\n    );\r\n  }\r\n\r\n  private setMenu() {\r\n    const modulePath$ = this.routerService.getModulePrefixObs();\r\n    const lastPath$ = this.layoutService.getCurrentPathObs();\r\n\r\n    return modulePath$.pipe(\r\n      switchMap((modulePath: string) => {\r\n        return lastPath$.pipe(\r\n          map((path: string) => {\r\n            const menu = this.menuService.setMenu(\r\n              this.menu,\r\n              modulePath,\r\n              'path',\r\n              path\r\n            );\r\n            return menu;\r\n          })\r\n        );\r\n      })\r\n    );\r\n\r\n    // return path$.pipe(\r\n    //   // distinctUntilChanged(),\r\n    //   map((path: string) => {\r\n    //     console.log(path)\r\n    //     return this.menuService.setList(this.menuService.getMenu(), 'path', path);\r\n\r\n    //   })\r\n    // )\r\n  }\r\n\r\n  public onChangeModule(step: CardStepModel) {\r\n    const path: string = `${this.projectPrefix}/${step.path}`;\r\n    this.routerService.navigate(path);\r\n  }\r\n\r\n  public onChangeMenu(path: string) {\r\n    path = `${this.projectPrefix}/${path}`;\r\n    this.routerService.navigate(path);\r\n  }\r\n}\r\n","import { Location } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RouterService {\r\n<<<<<<< HEAD\r\n\r\n  private modulePrefix$: BehaviorSubject<string> = new BehaviorSubject('');\r\n  public currentPath$: BehaviorSubject<string> = new BehaviorSubject('');\r\n=======\r\n>>>>>>> f2b8410da69f9d70dfad648367224ec7d8520aa9\r\n\r\n  // private $modulePrefix: Subject<string> = new Subject();\r\n\r\n<<<<<<< HEAD\r\n  constructor(private router: Router, private location: Location) {\r\n    this.ListenToRoute()\r\n  }\r\n=======\r\n  // public currentRoute: string;\r\n  // public history: string[] = [];\r\n>>>>>>> f2b8410da69f9d70dfad648367224ec7d8520aa9\r\n\r\n  // constructor(private router: Router, private location: Location) {\r\n  //   this.subscribeToRoute()\r\n  // }\r\n\r\n  // public goBack() {\r\n  //   this.history.pop();\r\n  //   if (this.history.length > 0) {\r\n  //     this.location.back();\r\n  //   } else {\r\n  //     this.router.navigateByUrl('/');\r\n  //   }\r\n  // }\r\n\r\n<<<<<<< HEAD\r\n  public ListenToRoute(): Observable<string> {\r\n    return this.router.events.pipe(\r\n      filter((event) => event instanceof NavigationEnd),\r\n      map((event: any) => {\r\n        this.history.push(event.urlAfterRedirects);\r\n        this.currentRoute = event.utl;\r\n        return event.url;\r\n      })\r\n    );\r\n  }\r\n\r\n  public getLastPathObs(): Observable<string> {\r\n    return this.ListenToRoute().pipe(\r\n      map((path: string) => this.setLastPath(path))\r\n    );\r\n  }\r\n=======\r\n  // public getCurrentPath(): string {\r\n  //   return this.setLastPath(this.router.url);\r\n  // }\r\n\r\n  // public subscribeToRoute(): Observable<string> {\r\n  //   return this.router.events.pipe(\r\n  //     filter((event) => event instanceof NavigationEnd),\r\n  //     map((event: any) => {\r\n  //       this.history.push(event.urlAfterRedirects);\r\n  //       this.currentRoute = event.utl;\r\n  //       return event.url;\r\n  //     })\r\n  //   );\r\n  // }\r\n>>>>>>> f2b8410da69f9d70dfad648367224ec7d8520aa9\r\n\r\n  // public getLastPathObs(): Observable<string> {\r\n  //   return this.subscribeToRoute().pipe(\r\n  //     map((path: string) => this.setLastPath(path))\r\n  //   );\r\n  // }\r\n\r\n  // public async navigate(path: string) {\r\n  //   try {\r\n  //     await this.router.navigateByUrl(path);\r\n  //   } catch (err) {\r\n  //     console.log(err);\r\n  //   }\r\n  // }\r\n\r\n<<<<<<< HEAD\r\n  public getModulePrefixObs(): Observable<string> {\r\n    return this.modulePrefix$.asObservable();\r\n  }\r\n\r\n  public emitModulePrefix(path: string): void {\r\n    this.modulePrefix$.next(path);\r\n  }\r\n=======\r\n  // public setLastPath(url: string) {\r\n  //   const path = url.split('/');\r\n  //   return path[path.length - 1];\r\n  // }\r\n\r\n  // public getModulePrefixObs(): Observable<string> {\r\n  //   return this.$modulePrefix.asObservable();\r\n  // }\r\n\r\n  // public emitModulePrefix(path: string): void {\r\n  //   this.$modulePrefix.next(path);\r\n  // }\r\n>>>>>>> f2b8410da69f9d70dfad648367224ec7d8520aa9\r\n}\r\n"],"names":[],"sourceRoot":""}