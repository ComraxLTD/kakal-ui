"use strict";
globalThis["webpackHotUpdatelib_kakal_ui"]("main",{

/***/ "./src/lib/app/components/columns/columns.service.ts":
/*!***********************************************************!*\
  !*** ./src/lib/app/components/columns/columns.service.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ColumnsService": () => (/* binding */ ColumnsService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _column_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./column.model */ "./src/lib/app/components/columns/column.model.ts");



let ColumnsService = class ColumnsService {
    constructor() { }
    setColumnDefsFromType(model) {
        return Object.keys(model);
    }
    filterColumnDefs(columnDefs, filters) {
        return columnDefs.filter((item) => !filters.includes(item));
    }
    setColumnDefs(model, filters) {
        return this.filterColumnDefs(this.setColumnDefsFromType(model), filters);
    }
    setColumnWithColumnDefs(columns, columnDefs) {
        return columns.map((column, i) => {
            return new _column_model__WEBPACK_IMPORTED_MODULE_0__.ColumnModel(Object.assign(Object.assign({}, column), { columnDef: column.columnDef || columnDefs[i] }));
        });
    }
    setColumnDefsFromColumns(columns, columnDefs) {
        if (columns.length > columnDefs.length) {
            columnDefs = columns.map((column) => column.columnDef);
        }
        return columnDefs;
    }
    initColumnsDefs(model, filters) {
        return this.setColumnDefs(model, filters);
    }
    getColumnsDefs(columns, columnDefs) {
        return this.setColumnDefsFromColumns(columns, columnDefs);
    }
    getColumns(model, filters, tableColumns) {
        const columnsDefs = this.initColumnsDefs(model, filters);
        const columns = this.setColumnWithColumnDefs(tableColumns, columnsDefs);
        return { columns, columnsDefs: this.getColumnsDefs(columns, columnsDefs) };
    }
};
ColumnsService = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Injectable)({
        providedIn: 'root',
    }),
    (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__metadata)("design:paramtypes", [])
], ColumnsService);



/***/ })

});
//# sourceMappingURL=main.e14129ba3a2eda2205b5.hot-update.js.map