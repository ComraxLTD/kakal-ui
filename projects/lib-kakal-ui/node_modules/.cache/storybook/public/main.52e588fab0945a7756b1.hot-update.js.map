{"version":3,"file":"main.52e588fab0945a7756b1.hot-update.js","mappings":";;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;;;;;;;;;;;;;;;;;;AC1GA;AACA;AAMA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAtCA;AAHA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;;;;;;;;;;ACPA;AAGA;AACA;AAOA;AAYA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArDA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AACA;AAAA;;AAAA;AARA;AALA;AACA;AACA;AACA;AACA;AAcA;AAbA;AAAA;;;;;;;;;;;;;;;;;;ACXA;AACA;AAKA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAdA;AAHA;AACA;AACA;;AACA;AAAA","sources":["webpack://lib-kakal-ui/./src/lib/app/screens/layout/layout.component.scss","webpack://lib-kakal-ui/./src/lib/app/screens/layout/layout.component.html","webpack://lib-kakal-ui/./src/lib/stories/screens/Layout.stories.ts","webpack://lib-kakal-ui/./src/lib/app/components/navigation/navbar/navbar.service.ts","webpack://lib-kakal-ui/./src/lib/app/screens/layout/layout.component.ts","webpack://lib-kakal-ui/./src/lib/app/screens/layout/layout.service.ts"],"sourcesContent":["export default \"* {\\n  font-family: \\\"open sans hebrew\\\" !important;\\n  src: url(\\\"../assets/fonts/opanSansHebrew/OpenSansHebrew-Regular.ttf\\\") format(\\\"opentype\\\") !important;\\n}\\n\\nhtml,\\nbody,\\napp-root,\\n#root {\\n  height: 100%;\\n  box-sizing: border-box;\\n  font-size: 10px;\\n}\\n\\nbody {\\n  margin: 0;\\n  padding: 0;\\n  font-family: \\\"open sans hebrew\\\", \\\"Helvetica Neue\\\", sans-serif;\\n  src: url(\\\"../assets/fonts/opanSansHebrew/OpenSansHebrew-Regular.ttf\\\") format(\\\"opentype\\\") !important;\\n  box-sizing: border-box;\\n}\\n\\n::ng-deep mat-grid-list,\\nmat-grid-tile {\\n  height: 100%;\\n  width: 100%;\\n}\\n\\n.material-icons {\\n  font-family: \\\"Material Icons\\\" !important;\\n}\\n\\n@media screen and (max-width: 1280px) {\\n  html {\\n    font-size: 8px;\\n  }\\n}\\n/* iPads (landscape) ----------- */\\n@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation: landscape) {\\n  html {\\n    font-size: 8px;\\n  }\\n}\\n/* iPads (portrait) ----------- */\\n@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation: portrait) {\\n  html {\\n    font-size: 10px;\\n  }\\n}\\n.sidenav-container {\\n  height: 100%;\\n}\\n\\nmat-sidenav-content {\\n  margin: 0px !important;\\n  overflow-x: hidden;\\n}\\n\\nmat-sidenav.menu {\\n  width: 246px;\\n  top: 10rem;\\n  height: calc(100% - 10rem);\\n  z-index: 100;\\n}\\nmat-sidenav.menu div.menu-container {\\n  height: inherit;\\n  padding-right: 8px;\\n}\\nmat-sidenav.wizard {\\n  background-color: transparent !important;\\n  width: 80px;\\n  height: 100%;\\n  border: none;\\n}\\nmat-sidenav.wizard div.stepper-container {\\n  height: 100%;\\n}\";","export default \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav-content>\\n    <app-navbar\\n      [logos]=\\\"logos\\\"\\n      [openIcon]=\\\"openIcon\\\"\\n      (menuToggle)=\\\"menuDrawer.toggle()\\\"\\n    ></app-navbar>\\n\\n    <mat-sidenav\\n      class=\\\"wizard\\\"\\n      opened=\\\"true\\\"\\n      mode=\\\"side\\\"\\n      position=\\\"start\\\"\\n      *ngIf=\\\"!(wizard$ | async)\\\"\\n    >\\n      <div\\n        class=\\\"stepper-container\\\"\\n        fxLayout=\\\"column\\\"\\n        fxLayoutAlign=\\\"center center\\\"\\n      >\\n        <ng-content select=\\\"[wizard]\\\"></ng-content>\\n      </div>\\n    </mat-sidenav>\\n\\n    <mat-sidenav #menuDrawer class=\\\"menu\\\" mode=\\\"side\\\" position=\\\"end\\\">\\n      <div class=\\\"menu-container\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start end\\\">\\n        <ng-content select=\\\"[menu]\\\"></ng-content>\\n      </div>\\n    </mat-sidenav>\\n\\n    <ng-content></ng-content>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\";","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { CardDashboardModel } from '../../app/components/cards/card-dashboard/card-dashboard.model';\\r\\nimport { moduleMetadata, Story, Meta } from '@storybook/angular';\\r\\nimport { CommonModule } from '@angular/common';\\r\\nimport { MaterialModule } from '../../material/material.module';\\r\\n\\r\\nimport { SizeDirective } from '../../app/utilities/directives/size.directive';\\r\\nimport { IconComponent } from '../../app/components/icon/icon.component';\\r\\nimport { ClassesDirective } from '../../app/utilities/directives/classes.directive';\\r\\nimport { VariantDirective } from '../../app/utilities/directives/variant.directive';\\r\\nimport { TypographyComponent } from '../../app/components/typography/typography.component';\\r\\nimport { ButtonDirective } from '../../app/utilities/directives/button.directive';\\r\\nimport { ColorDirective } from '../../app/utilities/directives/color.directive';\\r\\nimport { DashboardExComponent } from '../../app/examples/dashboard-ex/dashboard-ex.component';\\r\\nimport { CardDashboardComponent } from '../../app/components/cards/card-dashboard/card-dashboard.component';\\r\\nimport { BreakpointService } from '../../app/utilities/services/breakpoint.service';\\r\\nimport { DashboardComponent } from '../../app/screens/dashboard/dashboard.component';\\r\\nimport { LayoutComponent } from '../../app/screens/layout/layout.component';\\r\\n\\r\\nexport default {\\r\\n  title: 'Screen - Layout',\\r\\n  component: DashboardExComponent,\\r\\n  decorators: [\\r\\n    moduleMetadata({\\r\\n      declarations: [\\r\\n        IconComponent,\\r\\n        TypographyComponent,\\r\\n\\r\\n        LayoutComponent,\\r\\n        DashboardComponent,\\r\\n        CardDashboardComponent,\\r\\n        DashboardExComponent,\\r\\n\\r\\n        SizeDirective,\\r\\n        VariantDirective,\\r\\n        ClassesDirective,\\r\\n        ButtonDirective,\\r\\n        ColorDirective,\\r\\n      ],\\r\\n\\r\\n      providers: [BreakpointService],\\r\\n      imports: [CommonModule, MaterialModule],\\r\\n    }),\\r\\n  ],\\r\\n} as Meta;\\r\\n\\r\\nconst Template: Story<DashboardExComponent> = (args: DashboardExComponent) => ({\\r\\n  props: args,\\r\\n});\\r\\n\\r\\nexport const Dashboard = Template.bind({});\\r\\n\\r\\nDashboard.args = {\\r\\n  cards: [\\r\\n    new CardDashboardModel({\\r\\n      label: 'פירוט הנכס',\\r\\n      svgUrl: 'home',\\r\\n      path: 'details',\\r\\n    }),\\r\\n    new CardDashboardModel({\\r\\n      label: 'תנועות',\\r\\n      svgUrl: 'list',\\r\\n      path: 'movements',\\r\\n    }),\\r\\n    new CardDashboardModel({\\r\\n      label: 'עסקאות',\\r\\n      svgUrl: 'transactions',\\r\\n      path: 'transactions',\\r\\n    }),\\r\\n    new CardDashboardModel({\\r\\n      label: 'תתי חלקה',\\r\\n      svgUrl: 'building',\\r\\n      path: 'subdivision',\\r\\n    }),\\r\\n  ],\\r\\n  width: 50\\r\\n};\\r\\n\\r\\nexport const Foresrty = Template.bind({});\\r\\n\\r\\nForesrty.args = {\\r\\n  cards: [\\r\\n    new CardDashboardModel({\\r\\n      label: 'פירוט הנכס',\\r\\n      svgUrl: 'home',\\r\\n      path: 'details',\\r\\n    }),\\r\\n    new CardDashboardModel({\\r\\n      label: 'תנועות',\\r\\n      svgUrl: 'list',\\r\\n      path: 'movements',\\r\\n    }),\\r\\n  ],\\r\\n  width: 50\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Dashboard\":{\"startLoc\":{\"col\":46,\"line\":46},\"endLoc\":{\"col\":2,\"line\":48},\"startBody\":{\"col\":46,\"line\":46},\"endBody\":{\"col\":2,\"line\":48}},\"Foresrty\":{\"startLoc\":{\"col\":46,\"line\":46},\"endLoc\":{\"col\":2,\"line\":48},\"startBody\":{\"col\":46,\"line\":46},\"endBody\":{\"col\":2,\"line\":48}}};\n    \nimport { CardDashboardModel } from '../../app/components/cards/card-dashboard/card-dashboard.model';\r\nimport { moduleMetadata, Story, Meta } from '@storybook/angular';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MaterialModule } from '../../material/material.module';\r\n\r\nimport { SizeDirective } from '../../app/utilities/directives/size.directive';\r\nimport { IconComponent } from '../../app/components/icon/icon.component';\r\nimport { ClassesDirective } from '../../app/utilities/directives/classes.directive';\r\nimport { VariantDirective } from '../../app/utilities/directives/variant.directive';\r\nimport { TypographyComponent } from '../../app/components/typography/typography.component';\r\nimport { ButtonDirective } from '../../app/utilities/directives/button.directive';\r\nimport { ColorDirective } from '../../app/utilities/directives/color.directive';\r\nimport { DashboardExComponent } from '../../app/examples/dashboard-ex/dashboard-ex.component';\r\nimport { CardDashboardComponent } from '../../app/components/cards/card-dashboard/card-dashboard.component';\r\nimport { BreakpointService } from '../../app/utilities/services/breakpoint.service';\r\nimport { DashboardComponent } from '../../app/screens/dashboard/dashboard.component';\r\nimport { LayoutComponent } from '../../app/screens/layout/layout.component';\r\n\r\nexport default {\r\n  title: 'Screen - Layout',\r\n  component: DashboardExComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [\r\n        IconComponent,\r\n        TypographyComponent,\r\n\r\n        LayoutComponent,\r\n        DashboardComponent,\r\n        CardDashboardComponent,\r\n        DashboardExComponent,\r\n\r\n        SizeDirective,\r\n        VariantDirective,\r\n        ClassesDirective,\r\n        ButtonDirective,\r\n        ColorDirective,\r\n      ],\r\n\r\n      providers: [BreakpointService],\r\n      imports: [CommonModule, MaterialModule],\r\n    }),\r\n  ],\r\n} as Meta;\r\n\r\nconst Template: Story<DashboardExComponent> = (args: DashboardExComponent) => ({\r\n  props: args,\r\n});\r\n\r\nexport const Dashboard = Template.bind({});;\r\n\r\nDashboard.args = {\r\n  cards: [\r\n    new CardDashboardModel({\r\n      label: 'פירוט הנכס',\r\n      svgUrl: 'home',\r\n      path: 'details',\r\n    }),\r\n    new CardDashboardModel({\r\n      label: 'תנועות',\r\n      svgUrl: 'list',\r\n      path: 'movements',\r\n    }),\r\n    new CardDashboardModel({\r\n      label: 'עסקאות',\r\n      svgUrl: 'transactions',\r\n      path: 'transactions',\r\n    }),\r\n    new CardDashboardModel({\r\n      label: 'תתי חלקה',\r\n      svgUrl: 'building',\r\n      path: 'subdivision',\r\n    }),\r\n  ],\r\n  width: 50\r\n};\r\n\r\nexport const Foresrty = Template.bind({});\r\n\r\nForesrty.args = {\r\n  cards: [\r\n    new CardDashboardModel({\r\n      label: 'פירוט הנכס',\r\n      svgUrl: 'home',\r\n      path: 'details',\r\n    }),\r\n    new CardDashboardModel({\r\n      label: 'תנועות',\r\n      svgUrl: 'list',\r\n      path: 'movements',\r\n    }),\r\n  ],\r\n  width: 50\r\n};\r\n\n\n\nDashboard.parameters = { storySource: { source: \"(args: DashboardExComponent) => ({\\r\\n  props: args,\\r\\n})\" }, ...Dashboard.parameters };\nForesrty.parameters = { storySource: { source: \"(args: DashboardExComponent) => ({\\r\\n  props: args,\\r\\n})\" }, ...Foresrty.parameters };","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { CardStepModel } from '../../cards/card-step/card-step.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NavbarService {\r\n  private title$: BehaviorSubject<string>;\r\n  private status$: BehaviorSubject<CardStepModel[]>;\r\n  private showStatus$: BehaviorSubject<boolean>;\r\n\r\n  constructor() {\r\n    this.title$ = new BehaviorSubject<string>('');\r\n    this.status$ = new BehaviorSubject<CardStepModel[]>([]);\r\n    this.showStatus$  = new BehaviorSubject<boolean>(false)\r\n  }\r\n\r\n  public getTitleObs(): Observable<string> {\r\n    return this.title$.asObservable();\r\n  }\r\n\r\n  public emitTitle(value: string) {\r\n    return this.title$.next(value);\r\n  }\r\n\r\n  public getStatusObs(): Observable<CardStepModel[]> {\r\n    return this.status$.asObservable();\r\n  }\r\n\r\n  public emitStatus(value: CardStepModel[]): void {\r\n    this.status$.next(value);\r\n  }\r\n\r\n  public getShowStatusObs(): Observable<boolean> {\r\n    return this.showStatus$.asObservable();\r\n  }\r\n\r\n  public emitShowStatus(value: boolean): void {\r\n    this.showStatus$.next(value);\r\n  }\r\n\r\n  public toggleStatus(show: boolean, status: CardStepModel[]): void {\r\n    show ? this.emitStatus(status) : this.emitStatus([]);\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Subscription, Observable } from 'rxjs';\nimport { IconModel } from '../../components/icon/icon.model';\nimport { NavbarService } from '../../components/navigation/navbar/navbar.service';\nimport { LayoutService } from './layout.service';\n\n@Component({\n  selector: 'kkl-layout',\n  template: (require('./layout.component.html').default || require('./layout.component.html')).length ? (require('./layout.component.html').default || require('./layout.component.html')) : '',\n  styles: [(require('./layout.component.scss').default || require('./layout.component.scss')).length ? (require('./layout.component.scss').default || require('./layout.component.scss')) : '']\n})\nexport class LayoutComponent implements OnInit {\n\n  private statusSubscription: Subscription;\n\n  @Input() public openIcon: string;\n  @Input() public logos: IconModel[];\n\n  @Input() public hideWizardPath: string[];\n  @Input() public showStatusPath: string[];\n\n  public wizard$: Observable<boolean>;\n\n  constructor(\n    private layoutService: LayoutService,\n    private navbarService: NavbarService\n  ) {}\n\n  ngOnInit(): void {\n    this.getCurrentPath();\n    this.subscribeToLastPath();\n    this.wizard$ = this.layoutService.getWizardObs();\n  }\n\n  ngOnDestroy(): void {\n    this.statusSubscription.unsubscribe();\n  }\n\n\n  // VIEW METHODS SECTION\n\n  private findPath(list: any[], value: string): boolean {\n    return !!list.find((path: string) => path == value);\n  }\n\n  private handleStatusState(path: string) {\n    this.navbarService.emitShowStatus(this.findPath(this.showStatusPath, path));\n  }\n\n  private handleShowState(path: string) {\n    this.layoutService.toggleWizard(this.findPath(this.hideWizardPath, path));\n    this.handleStatusState(path);\n  }\n\n  // ROUTE METHODS SECTION\n  private getCurrentPath() {\n    // const path = this.routerService.getCurrentPath();\n    // this.handleShowState(path);\n  }\n\n  private subscribeToLastPath() {\n  //   this.routerSubscription = this.routerService\n  //     .getLastPathObs()\n  //     .subscribe((path) => {\n  //       this.handleShowState(path);\n  //     });\n  // }\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LayoutService {\r\n  private hideWizard$: BehaviorSubject<boolean>;\r\n\r\n  constructor() {\r\n    this.hideWizard$ = new BehaviorSubject<boolean>(false);\r\n  }\r\n\r\n  public getWizardObs(): Observable<boolean> {\r\n    return this.hideWizard$.asObservable();\r\n  }\r\n\r\n  public toggleWizard(value: boolean) {\r\n    return this.hideWizard$.next(value);\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":""}