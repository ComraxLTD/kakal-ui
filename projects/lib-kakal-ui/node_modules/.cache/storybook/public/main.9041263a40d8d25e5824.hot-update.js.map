{"version":3,"file":"main.9041263a40d8d25e5824.hot-update.js","mappings":";;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;ACAA;AAGA;AAOA;AAYA;AACA;AAHA;AAIA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAKA;AAAA;AAAA;AAAA;AAVA;AALA;AACA;AACA;AACA;AACA;AAcA;AAbA;AAAA","sources":["webpack://lib-kakal-ui/./src/lib/app/screens/dashboard/dashboard.component.scss","webpack://lib-kakal-ui/./src/lib/app/screens/dashboard/dashboard.component.html","webpack://lib-kakal-ui/./src/lib/app/screens/dashboard/dashboard.component.ts"],"sourcesContent":["export default \"* {\\n  font-family: \\\"open sans hebrew\\\" !important;\\n  src: url(\\\"../assets/fonts/opanSansHebrew/OpenSansHebrew-Regular.ttf\\\") format(\\\"opentype\\\") !important;\\n}\\n\\nhtml,\\nbody,\\napp-root,\\n#root {\\n  height: 100%;\\n  box-sizing: border-box;\\n  font-size: 10px;\\n}\\n\\nbody {\\n  margin: 0;\\n  padding: 0;\\n  font-family: \\\"open sans hebrew\\\", \\\"Helvetica Neue\\\", sans-serif;\\n  src: url(\\\"../assets/fonts/opanSansHebrew/OpenSansHebrew-Regular.ttf\\\") format(\\\"opentype\\\") !important;\\n  box-sizing: border-box;\\n}\\n\\n::ng-deep mat-grid-list,\\nmat-grid-tile {\\n  height: 100%;\\n  width: 100%;\\n}\\n\\n.material-icons {\\n  font-family: \\\"Material Icons\\\" !important;\\n}\\n\\n@media screen and (max-width: 1280px) {\\n  html {\\n    font-size: 8px;\\n  }\\n}\\n/* iPads (landscape) ----------- */\\n@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation: landscape) {\\n  html {\\n    font-size: 8px;\\n  }\\n}\\n/* iPads (portrait) ----------- */\\n@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation: portrait) {\\n  html {\\n    font-size: 10px;\\n  }\\n}\\n:host {\\n  width: 100%;\\n  height: 100%;\\n}\\n\\ndiv {\\n  height: calc(100% - 10rem);\\n}\\n\\ndiv.container {\\n  height: inherit;\\n  width: 40%;\\n}\\n\\nkkl-dashboard-card {\\n  width: 100;\\n  height: 100%;\\n}\";","export default \"<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n  <div\\r\\n    class=\\\"container\\\"\\r\\n    fxLayout=\\\"column\\\"\\r\\n    fxLayoutAlign=\\\"center center\\\"\\r\\n    [ngStyle]=\\\"{ 'width.rem': width || 80 }\\\"\\r\\n  >\\r\\n    <div fxFlex=\\\"8\\\" *ngIf=\\\"moduleTitle\\\">\\r\\n      <kkl-typography [bold]=\\\"600\\\" [size]=\\\"3\\\">{{ moduleTitle }}</kkl-typography>\\r\\n    </div>\\r\\n    <mat-grid-list\\r\\n      [cols]=\\\"cols || cards.length / 2\\\"\\r\\n      [rowHeight]=\\\"((md$ | async) ? 16 : 24) + 'rem'\\\"\\r\\n      gutterSize=\\\"4rem\\\"\\r\\n      [dir]=\\\"'rtl'\\\"\\r\\n    >\\r\\n      <ng-container *ngFor=\\\"let card of cards; let i = index\\\">\\r\\n        <mat-grid-tile>\\r\\n          <div\\r\\n            appSize\\r\\n            [size]=\\\"(md$ | async) ? 16 : 24\\\"\\r\\n            (click)=\\\"onCardClick(card)\\\"\\r\\n          >\\r\\n            <kkl-card-dashboard [card]=\\\"card\\\"> </kkl-card-dashboard>\\r\\n          </div>\\r\\n        </mat-grid-tile>\\r\\n      </ng-container>\\r\\n    </mat-grid-list>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { CardDashboardModel } from '../../components/cards/card-dashboard/card-dashboard.model';\r\nimport { BreakpointService } from '../../utilities/services/breakpoint.service';\r\n\r\n@Component({\r\n  selector: 'kkl-dashboard',\r\n  template: (require('./dashboard.component.html').default || require('./dashboard.component.html')).length ? (require('./dashboard.component.html').default || require('./dashboard.component.html')) : '',\r\n  styles: [(require('./dashboard.component.scss').default || require('./dashboard.component.scss')).length ? (require('./dashboard.component.scss').default || require('./dashboard.component.scss')) : '']\r\n})\r\nexport class DashboardComponent {\r\n\r\n  @Input() public prefix: string;\r\n  @Input() public width: number;\r\n  @Input() public moduleTitle: string;\r\n  @Input() public cards: CardDashboardModel[];\r\n  \r\n  public md$: Observable<boolean>;\r\n  public cols: number;\r\n\r\n  @Output() cardClick: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  constructor(\r\n    private breakpointService: BreakpointService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.md$ = this.breakpointService.isTablet();\r\n    this.se\r\n  }\r\n\r\n  private setCols() {\r\n    this.cols =  (this.cards.length / 2)  <2 ? 1 : this.cards.length / 2\r\n  }\r\n\r\n  public onCardClick(card) {\r\n    if (this.prefix) {\r\n      const path: string = `${this.prefix}/${card.path}`;\r\n      this.cardClick.emit(path)\r\n    }\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":""}