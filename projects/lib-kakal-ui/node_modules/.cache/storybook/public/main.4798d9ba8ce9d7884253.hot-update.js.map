{"version":3,"file":"main.4798d9ba8ce9d7884253.hot-update.js","mappings":";;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;ACAA;AAWA;AAEA;AACA;AA0BA;AA0BA;AAAA;AAJA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AA3FA;AAAA;AAAA;AAAA;AAEA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAaA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAxBA;AANA;AACA;AACA;AACA;AACA;AACA;AA2BA;AA1BA;AAAA;;;;;;;;;;;;;;;;;;;;ACxCA;AACA;AAEA;AAOA;AAQA;AAEA;AACA;AAVA;AAAA;AAAA;AAAA;AAEA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AANA;AALA;AACA;AACA;AACA;AACA;;AACA;AAAA","sources":["webpack://lib-kakal-ui/./src/lib/app/examples/table-ex/table-ex.component.html","webpack://lib-kakal-ui/./src/lib/app/components/table/table.component.ts","webpack://lib-kakal-ui/./src/lib/app/examples/table-ex/table-ex.component.ts"],"sourcesContent":["export default \"<div class=\\\"container\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n  <div class=\\\"table\\\">\\r\\n    <kkl-table\\r\\n      [data]=\\\"data\\\"\\r\\n      [columns]=\\\"columns\\\"\\r\\n      [model]=\\\"model\\\"\\r\\n      [options]=\\\"options\\\"\\r\\n      [rowSlots]=\\\"{status}\\\"\\r\\n    ></kkl-table>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #status let-cell=\\\"cell\\\">\\r\\n  <div class=\\\"status\\\">\\r\\n    <app-status [status]=\\\"cell.item?.status\\\"></app-status>\\r\\n  </div>\\r\\n</ng-template>\\r\\n`;\\r\\n\";","import {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\nimport { PaginationInstance } from 'ngx-pagination';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { RowModel } from './models/row.model';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { Sort } from '@angular/material/sort';\r\nimport { TableService } from './table.service';\r\nimport { EditRow, TableDataSource } from './table-datasource';\r\nimport { ColumnModel } from '../columns/column.model';\r\n\r\ndeclare type id = string | number;\r\n\r\nexport interface TableOptions<T> {\r\n  filters?: (keyof T)[];\r\n  pagination?: PaginationInstance;\r\n  editable?: id[];\r\n  pending?: id[];\r\n}\r\n\r\nexport interface Table<T> {\r\n  columns: ColumnModel[];\r\n  data: T[];\r\n  options: TableOptions<T>;\r\n  model: T;\r\n  dataSource: TableDataSource<T>;\r\n}\r\n\r\n@Component({\r\n  selector: 'kkl-table',\r\n  template: (require('./table.component.html').default || require('./table.component.html')).length ? (require('./table.component.html').default || require('./table.component.html')) : '',\r\n  styles: [(require('./table.component.scss').default || require('./table.component.scss')).length ? (require('./table.component.scss').default || require('./table.component.scss')) : ''],\r\n  providers: [TableService, TableService],\r\n})\r\nexport class TableComponent<T> implements OnInit, Table<T> {\r\n  @Input() public theme: ThemePalette;\r\n\r\n  @Input() public data: T[];\r\n  @Input() public columns: ColumnModel[];\r\n  @Input() public model: T;\r\n  @Input() public options: TableOptions<T>;\r\n\r\n  @Input() public rowSlots: {};\r\n  @Input() public headerSlots: { headerActions: ElementRef };\r\n\r\n  private subscription: Subscription;\r\n\r\n  public dataSource: TableDataSource<T>;\r\n\r\n  public columnDefs: (string | keyof T)[];\r\n\r\n  public $data: Observable<RowModel<T>[]>;\r\n  public $columnDefs: Observable<string[]>;\r\n  public tableColumns: ColumnModel[];\r\n  public pagination: PaginationInstance;\r\n\r\n  @Output() register: EventEmitter<TableDataSource<T>> = new EventEmitter();\r\n  @Output() sort: EventEmitter<Sort> = new EventEmitter();\r\n  @Output() filter: EventEmitter<RowModel<T>> = new EventEmitter();\r\n\r\n  constructor(private tableService: TableService<T>) {}\r\n\r\n  ngOnInit() {\r\n    this.theme = this.theme || 'accent';\r\n    this.setTable();\r\n  }\r\n\r\n  private setTable() {\r\n    const { pagination, filters } = this.options;\r\n\r\n    this.dataSource = new TableDataSource<T>(this.data, this.options);\r\n\r\n    const data$ = this.dataSource.connectToRows();\r\n    const { columns, columnsDefs } = this.tableService.setColumns(\r\n      this.columns,\r\n      this.model,\r\n      [...filters]\r\n    );\r\n\r\n    this.$data = data$;\r\n    this.tableColumns = columns;\r\n    this.columnDefs = columnsDefs;\r\n    this.pagination = pagination;\r\n    this.register.emit(this.dataSource);\r\n\r\n    this.subscribeToRowEdit();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  public onRowClicked(row: T) {}\r\n\r\n  public onSort(sort: Sort) {\r\n    this.sort.emit(sort);\r\n  }\r\n\r\n  public onFilter(row: RowModel<T>) {\r\n    this.filter.emit(row);\r\n  }\r\n\r\n  public subscribeToRowEdit() {\r\n    this.subscription = this.dataSource\r\n      .connectEdit()\r\n      .subscribe((data: EditRow<T>) => {\r\n        const { row, options } = data;\r\n        const rows = this.dataSource.getRows();\r\n        const index = this.tableService.findRowIndex(rows, 'id', row.item);\r\n        const { editRow, columns } = this.tableService.onEditMode(\r\n          row,\r\n          this.tableColumns,\r\n          options\r\n        );\r\n\r\n        rows[index] = editRow;\r\n        this.tableColumns = columns;\r\n        this.dataSource.loadRows(rows);\r\n      });\r\n  }\r\n\r\n  private getProperty<T, K extends keyof T>(obj: T, key: K) {\r\n    return obj[key];\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { ColumnModel } from '../../components/columns/column.model';\r\nimport { TableOptions } from '../../components/table/table.component';\r\n\r\n@Component({\r\n  selector: 'kkl-table-ex',\r\n  template: (require('./table-ex.component.html').default || require('./table-ex.component.html')).length ? (require('./table-ex.component.html').default || require('./table-ex.component.html')) : '',\r\n  styles: [(require('./table-ex.component.scss').default || require('./table-ex.component.scss')).length ? (require('./table-ex.component.scss').default || require('./table-ex.component.scss')) : ''],\r\n})\r\nexport class TableExComponent<T> implements OnInit {\r\n  @Input() public theme: ThemePalette;\r\n\r\n  @Input() public data: T[];\r\n  @Input() public columns: ColumnModel[];\r\n  @Input() public model: T;\r\n  @Input() public options: TableOptions<T>;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n"],"names":[],"sourceRoot":""}