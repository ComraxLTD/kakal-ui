{"version":3,"file":"main.fd6595fa537ee60d7b59.hot-update.js","mappings":";;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;ACAA;AAGA;AACA;AAOA;AAYA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxDA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AACA;AAAA;;AAAA;AARA;AALA;AACA;AACA;AACA;AACA;AAcA;AAbA;AAAA","sources":["webpack://lib-kakal-ui/./src/lib/app/screens/layout/layout.component.scss","webpack://lib-kakal-ui/./src/lib/app/screens/layout/layout.component.html","webpack://lib-kakal-ui/./src/lib/app/screens/layout/layout.component.ts"],"sourcesContent":["export default \"* {\\n  font-family: \\\"open sans hebrew\\\" !important;\\n  src: url(\\\"../assets/fonts/opanSansHebrew/OpenSansHebrew-Regular.ttf\\\") format(\\\"opentype\\\") !important;\\n}\\n\\nhtml,\\nbody,\\napp-root,\\n#root {\\n  height: 100%;\\n  box-sizing: border-box;\\n  font-size: 10px;\\n}\\n\\nbody {\\n  margin: 0;\\n  padding: 0;\\n  font-family: \\\"open sans hebrew\\\", \\\"Helvetica Neue\\\", sans-serif;\\n  src: url(\\\"../assets/fonts/opanSansHebrew/OpenSansHebrew-Regular.ttf\\\") format(\\\"opentype\\\") !important;\\n  box-sizing: border-box;\\n}\\n\\n::ng-deep mat-grid-list,\\nmat-grid-tile {\\n  height: 100%;\\n  width: 100%;\\n}\\n\\n.material-icons {\\n  font-family: \\\"Material Icons\\\" !important;\\n}\\n\\n@media screen and (max-width: 1280px) {\\n  html {\\n    font-size: 8px;\\n  }\\n}\\n/* iPads (landscape) ----------- */\\n@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation: landscape) {\\n  html {\\n    font-size: 8px;\\n  }\\n}\\n/* iPads (portrait) ----------- */\\n@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation: portrait) {\\n  html {\\n    font-size: 10px;\\n  }\\n}\\n.sidenav-container {\\n  height: 100%;\\n}\\n\\nmat-sidenav-content {\\n  margin: 0px !important;\\n  overflow-x: hidden;\\n}\\n\\nmat-sidenav.menu {\\n  width: 246px;\\n  top: 10rem;\\n  height: calc(100% - 10rem);\\n  z-index: 100;\\n}\\nmat-sidenav.menu div.menu-container {\\n  height: inherit;\\n  padding-right: 8px;\\n}\\nmat-sidenav.wizard {\\n  background-color: transparent !important;\\n  width: 80px;\\n  height: 100%;\\n  border: none;\\n}\\nmat-sidenav.wizard div.stepper-container {\\n  height: 100%;\\n}\";","export default \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav-content>\\n    <app-navbar\\n      [logos]=\\\"logos\\\"\\n      [openIcon]=\\\"openIcon\\\"\\n      (menuToggle)=\\\"menuDrawer.toggle()\\\"\\n    ></app-navbar>\\n\\n    <mat-sidenav\\n      class=\\\"wizard\\\"\\n      opened=\\\"true\\\"\\n      mode=\\\"side\\\"\\n      position=\\\"start\\\"\\n      *ngIf=\\\"!(wizard$ | async)\\\"\\n    >\\n      <div\\n        class=\\\"stepper-container\\\"\\n        fxLayout=\\\"column\\\"\\n        fxLayoutAlign=\\\"center center\\\"\\n      >\\n        <ng-content select=\\\"[wizard]\\\"></ng-content>\\n      </div>\\n    </mat-sidenav>\\n\\n    <mat-sidenav #menuDrawer class=\\\"menu\\\" mode=\\\"side\\\" position=\\\"end\\\">\\n      <div class=\\\"menu-container\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start end\\\">\\n        <ng-content select=\\\"[menu]\\\"></ng-content>\\n      </div>\\n    </mat-sidenav>\\n\\n    <ng-content></ng-content>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\";","import { Component, Input, OnInit } from '@angular/core';\nimport { Subscription, Observable } from 'rxjs';\nimport { IconModel } from '../../components/icon/icon.model';\nimport { NavbarService } from '../../components/navigation/navbar/navbar.service';\nimport { LayoutService } from './layout.service';\n\n@Component({\n  selector: 'kkl-layout',\n  template: (require('./layout.component.html').default || require('./layout.component.html')).length ? (require('./layout.component.html').default || require('./layout.component.html')) : '',\n  styles: [(require('./layout.component.scss').default || require('./layout.component.scss')).length ? (require('./layout.component.scss').default || require('./layout.component.scss')) : '']\n})\nexport class LayoutComponent implements OnInit {\n\n  private statusSubscription: Subscription;\n\n  @Input() public openIcon: string;\n  @Input() public logos: IconModel[];\n\n  @Input() public hideWizardPath: string[];\n  @Input() public showStatusPath: string[];\n\n  public wizard$: Observable<boolean>;\n\n  constructor(\n    private layoutService: LayoutService,\n    private navbarService: NavbarService\n  ) {}\n\n  ngOnInit(): void {\n    this.getCurrentPath();\n    this.subscribeToLastPath();\n    this.wizard$ = this.layoutService.getWizardObs();\n  }\n\n  ngOnDestroy(): void {\n    if(this.statusSubscription) {\n\n    }\n    this.statusSubscription.unsubscribe();\n  }\n\n\n  // VIEW METHODS SECTION\n\n  private findPath(list: any[], value: string): boolean {\n    return !!list.find((path: string) => path == value);\n  }\n\n  private handleStatusState(path: string) {\n    this.navbarService.emitShowStatus(this.findPath(this.showStatusPath, path));\n  }\n\n  private handleShowState(path: string) {\n    this.layoutService.toggleWizard(this.findPath(this.hideWizardPath, path));\n    this.handleStatusState(path);\n  }\n\n  // ROUTE METHODS SECTION\n  private getCurrentPath() {\n    // const path = this.routerService.getCurrentPath();\n    // this.handleShowState(path);\n  }\n\n  private subscribeToLastPath() {\n  //   this.routerSubscription = this.routerService\n  //     .getLastPathObs()\n  //     .subscribe((path) => {\n  //       this.handleShowState(path);\n  //     });\n  // }\n  }\n}\n"],"names":[],"sourceRoot":""}