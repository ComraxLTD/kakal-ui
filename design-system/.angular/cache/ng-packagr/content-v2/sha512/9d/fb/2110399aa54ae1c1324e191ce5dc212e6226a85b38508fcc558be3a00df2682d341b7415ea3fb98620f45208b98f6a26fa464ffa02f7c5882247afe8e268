{"hash":"3a9c03b6d406ec83f1e5316b5195c87b58aa07ea","fesm2020":{"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, ViewEncapsulation, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nclass KakalUiService {\n    constructor() { }\n}\nKakalUiService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: KakalUiService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nKakalUiService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: KakalUiService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: KakalUiService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass KakalUiComponent {\n    constructor() { }\n    ngOnInit() {\n    }\n}\nKakalUiComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: KakalUiComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nKakalUiComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.1\", type: KakalUiComponent, selector: \"kkl-kakal-ui\", ngImport: i0, template: `\n    <p>\n      kakal-ui works!\n    </p>\n  `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: KakalUiComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kkl-kakal-ui',\n                    template: `\n    <p>\n      kakal-ui works!\n    </p>\n  `,\n                    styles: []\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass ButtonComponent {\n    constructor() {\n        this.bordersLeft = true;\n        this.bordersRight = true;\n    }\n    ngOnInit() {\n    }\n}\nButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: ButtonComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.1\", type: ButtonComponent, selector: \"kkl-button\", inputs: { label: \"label\", pink: \"pink\", noShadow: \"noShadow\", bordersLeft: \"bordersLeft\", bordersRight: \"bordersRight\" }, ngImport: i0, template: \"<button \\n    [attr.is-pink]=\\\"pink\\\" \\n    [ngClass]=\\\"{'make-pink': pink, 'rm-left-borders': !bordersLeft, 'rm-right-borders': !bordersRight, 'no-shadow': noShadow}\\\">\\n    {{label ? label : \\\"No Label provided\\\"}}\\n</button>\", styles: [\":host{display:inline-block}button{background:blue;padding:1rem 2rem;border-radius:5px;appearance:none;border:0;-webkit-appearance:none;-moz-appearance:none;font-size:1.5rem;letter-spacing:1px;color:#fff;box-shadow:0 4px 10px #0096,0 6px 35px #0000ccb3;cursor:pointer}button.make-pink{background:#ff00a2;box-shadow:0 4px 10px #3737374d,0 6px 35px #c83796b3}button.rm-right-borders{border-top-right-radius:0;border-bottom-right-radius:0}button.rm-left-borders{border-top-left-radius:0;border-bottom-left-radius:0}button.no-shadow{box-shadow:none}\\n\"], directives: [{ type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: ButtonComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'kkl-button', encapsulation: ViewEncapsulation.Emulated, template: \"<button \\n    [attr.is-pink]=\\\"pink\\\" \\n    [ngClass]=\\\"{'make-pink': pink, 'rm-left-borders': !bordersLeft, 'rm-right-borders': !bordersRight, 'no-shadow': noShadow}\\\">\\n    {{label ? label : \\\"No Label provided\\\"}}\\n</button>\", styles: [\":host{display:inline-block}button{background:blue;padding:1rem 2rem;border-radius:5px;appearance:none;border:0;-webkit-appearance:none;-moz-appearance:none;font-size:1.5rem;letter-spacing:1px;color:#fff;box-shadow:0 4px 10px #0096,0 6px 35px #0000ccb3;cursor:pointer}button.make-pink{background:#ff00a2;box-shadow:0 4px 10px #3737374d,0 6px 35px #c83796b3}button.rm-right-borders{border-top-right-radius:0;border-bottom-right-radius:0}button.rm-left-borders{border-top-left-radius:0;border-bottom-left-radius:0}button.no-shadow{box-shadow:none}\\n\"] }]\n        }], ctorParameters: function () { return []; }, propDecorators: { label: [{\n                type: Input,\n                args: ['label']\n            }], pink: [{\n                type: Input,\n                args: ['pink']\n            }], noShadow: [{\n                type: Input,\n                args: ['noShadow']\n            }], bordersLeft: [{\n                type: Input,\n                args: ['bordersLeft']\n            }], bordersRight: [{\n                type: Input,\n                args: ['bordersRight']\n            }] } });\n\nclass ButtonsetComponent {\n    constructor() { }\n    ngOnInit() {\n    }\n}\nButtonsetComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: ButtonsetComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nButtonsetComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.1\", type: ButtonsetComponent, selector: \"kkl-buttonset\", ngImport: i0, template: \"<div class=\\\"buttonset\\\">\\n    <!-- <pl-button label=\\\"Button 1\\\" [bordersRight]=\\\"false\\\" noShadow=true></pl-button> -->\\n    <!-- <pl-button label=\\\"Button 2\\\" [bordersLeft]=\\\"false\\\" [bordersRight]=\\\"false\\\" [noShadow]=\\\"true\\\"></pl-button> -->\\n    <!-- <pl-button label=\\\"Button 3\\\" [bordersLeft]=\\\"false\\\" [noShadow]=\\\"true\\\"></pl-button> -->\\n</div>\", styles: [\":host{display:inline-block;padding:1.5em;border:3px solid blue}.buttonset{display:inline-block;border-radius:5px;box-shadow:0 4px 10px #0096,0 6px 35px #0000ccb3}\\n\"] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: ButtonsetComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'kkl-buttonset', encapsulation: ViewEncapsulation.Emulated, template: \"<div class=\\\"buttonset\\\">\\n    <!-- <pl-button label=\\\"Button 1\\\" [bordersRight]=\\\"false\\\" noShadow=true></pl-button> -->\\n    <!-- <pl-button label=\\\"Button 2\\\" [bordersLeft]=\\\"false\\\" [bordersRight]=\\\"false\\\" [noShadow]=\\\"true\\\"></pl-button> -->\\n    <!-- <pl-button label=\\\"Button 3\\\" [bordersLeft]=\\\"false\\\" [noShadow]=\\\"true\\\"></pl-button> -->\\n</div>\", styles: [\":host{display:inline-block;padding:1.5em;border:3px solid blue}.buttonset{display:inline-block;border-radius:5px;box-shadow:0 4px 10px #0096,0 6px 35px #0000ccb3}\\n\"] }]\n        }], ctorParameters: function () { return []; } });\n\nconst exportPipes = [];\nconst exportDirective = [];\nclass KakalUiModule {\n}\nKakalUiModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: KakalUiModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nKakalUiModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: KakalUiModule, declarations: [KakalUiComponent,\n        ButtonComponent,\n        ButtonsetComponent], imports: [CommonModule], exports: [KakalUiComponent,\n        ButtonComponent,\n        ButtonsetComponent] });\nKakalUiModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: KakalUiModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: KakalUiModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        KakalUiComponent,\n                        ButtonComponent,\n                        ButtonsetComponent,\n                        ...exportPipes,\n                        ...exportDirective,\n                    ],\n                    imports: [CommonModule],\n                    exports: [\n                        KakalUiComponent,\n                        ButtonComponent,\n                        ButtonsetComponent,\n                        ...exportPipes,\n                        ...exportDirective,\n                    ],\n                }]\n        }] });\n\n/*\n * Public API Surface of kakal-ui\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ButtonComponent, ButtonsetComponent, KakalUiComponent, KakalUiModule, KakalUiService };\n//# sourceMappingURL=ComraxLTD-kakal-ui.mjs.map\n","map":{"version":3,"file":"ComraxLTD-kakal-ui.mjs","sources":["../../../projects/kakal-ui/src/lib/kakal-ui.service.ts","../../../projects/kakal-ui/src/lib/kakal-ui.component.ts","../../../projects/kakal-ui/src/lib/button/button.component.ts","../../../projects/kakal-ui/src/lib/button/button.component.html","../../../projects/kakal-ui/src/lib/buttonset/buttonset.component.ts","../../../projects/kakal-ui/src/lib/buttonset/buttonset.component.html","../../../projects/kakal-ui/src/lib/kakal-ui.module.ts","../../../projects/kakal-ui/src/public-api.ts","../../../projects/kakal-ui/src/ComraxLTD-kakal-ui.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class KakalUiService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kkl-kakal-ui',\n  template: `\n    <p>\n      kakal-ui works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class KakalUiComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'kkl-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class ButtonComponent implements OnInit {\n  @Input('label') label: string | null;\n  @Input('pink') pink: boolean;\n  @Input('noShadow') noShadow: boolean;\n  @Input('bordersLeft') bordersLeft: boolean = true;\n  @Input('bordersRight') bordersRight: boolean = true;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<button \n    [attr.is-pink]=\"pink\" \n    [ngClass]=\"{'make-pink': pink, 'rm-left-borders': !bordersLeft, 'rm-right-borders': !bordersRight, 'no-shadow': noShadow}\">\n    {{label ? label : \"No Label provided\"}}\n</button>","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'kkl-buttonset',\n  templateUrl: './buttonset.component.html',\n  styleUrls: ['./buttonset.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class ButtonsetComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"buttonset\">\n    <!-- <pl-button label=\"Button 1\" [bordersRight]=\"false\" noShadow=true></pl-button> -->\n    <!-- <pl-button label=\"Button 2\" [bordersLeft]=\"false\" [bordersRight]=\"false\" [noShadow]=\"true\"></pl-button> -->\n    <!-- <pl-button label=\"Button 3\" [bordersLeft]=\"false\" [noShadow]=\"true\"></pl-button> -->\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { KakalUiComponent } from './kakal-ui.component';\nimport { ButtonComponent } from './button/button.component';\nimport { ButtonsetComponent } from './buttonset/buttonset.component';\n\nconst exportPipes = [];\nconst exportDirective = [\n];\n\n@NgModule({\n  declarations: [\n    KakalUiComponent,\n    ButtonComponent,\n    ButtonsetComponent,\n    ...exportPipes,\n    ...exportDirective,\n  ],\n  imports: [CommonModule],\n  exports: [\n    KakalUiComponent,\n    ButtonComponent,\n    ButtonsetComponent,\n    ...exportPipes,\n    ...exportDirective,\n  ],\n})\nexport class KakalUiModule {}\n","/*\n * Public API Surface of kakal-ui\n */\n\nexport * from './lib/kakal-ui.service';\nexport * from './lib/kakal-ui.component';\nexport * from './lib/kakal-ui.module';\n\nexport * from './lib/button/button.component';\nexport * from './lib/buttonset/buttonset.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;MAKa,cAAc;IAEzB,iBAAiB;;2GAFN,cAAc;+GAAd,cAAc,cAFb,MAAM;2FAEP,cAAc;kBAH1B,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;MCQY,gBAAgB;IAE3B,iBAAiB;IAEjB,QAAQ;KACP;;6GALU,gBAAgB;iGAAhB,gBAAgB,oDARjB;;;;GAIT;2FAIU,gBAAgB;kBAV5B,SAAS;mBAAC;oBACT,QAAQ,EAAE,cAAc;oBACxB,QAAQ,EAAE;;;;GAIT;oBACD,MAAM,EAAE,EACP;iBACF;;;MCHY,eAAe;IAO1B;QAHsB,gBAAW,GAAY,IAAI,CAAC;QAC3B,iBAAY,GAAY,IAAI,CAAC;KAEnC;IAEjB,QAAQ;KACP;;4GAVU,eAAe;gGAAf,eAAe,4KCR5B,qOAIS;2FDII,eAAe;kBAN3B,SAAS;+BACE,YAAY,iBAGP,iBAAiB,CAAC,QAAQ;0EAGzB,KAAK;sBAApB,KAAK;uBAAC,OAAO;gBACC,IAAI;sBAAlB,KAAK;uBAAC,MAAM;gBACM,QAAQ;sBAA1B,KAAK;uBAAC,UAAU;gBACK,WAAW;sBAAhC,KAAK;uBAAC,aAAa;gBACG,YAAY;sBAAlC,KAAK;uBAAC,cAAc;;;MELV,kBAAkB;IAE7B,iBAAiB;IAEjB,QAAQ;KACP;;+GALU,kBAAkB;mGAAlB,kBAAkB,qDCR/B,sWAIM;2FDIO,kBAAkB;kBAN9B,SAAS;+BACE,eAAe,iBAGV,iBAAiB,CAAC,QAAQ;;;AEA3C,MAAM,WAAW,GAAG,EAAE,CAAC;AACvB,MAAM,eAAe,GAAG,EACvB,CAAC;MAmBW,aAAa;;0GAAb,aAAa;2GAAb,aAAa,iBAftB,gBAAgB;QAChB,eAAe;QACf,kBAAkB,aAIV,YAAY,aAEpB,gBAAgB;QAChB,eAAe;QACf,kBAAkB;2GAKT,aAAa,YATf,CAAC,YAAY,CAAC;2FASZ,aAAa;kBAjBzB,QAAQ;mBAAC;oBACR,YAAY,EAAE;wBACZ,gBAAgB;wBAChB,eAAe;wBACf,kBAAkB;wBAClB,GAAG,WAAW;wBACd,GAAG,eAAe;qBACnB;oBACD,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,OAAO,EAAE;wBACP,gBAAgB;wBAChB,eAAe;wBACf,kBAAkB;wBAClB,GAAG,WAAW;wBACd,GAAG,eAAe;qBACnB;iBACF;;;AC1BD;;;;ACAA;;;;;;"}},"fesm2015":{"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, ViewEncapsulation, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nclass KakalUiService {\n    constructor() { }\n}\nKakalUiService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: KakalUiService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nKakalUiService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: KakalUiService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: KakalUiService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass KakalUiComponent {\n    constructor() { }\n    ngOnInit() {\n    }\n}\nKakalUiComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: KakalUiComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nKakalUiComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.1\", type: KakalUiComponent, selector: \"kkl-kakal-ui\", ngImport: i0, template: `\n    <p>\n      kakal-ui works!\n    </p>\n  `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: KakalUiComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kkl-kakal-ui',\n                    template: `\n    <p>\n      kakal-ui works!\n    </p>\n  `,\n                    styles: []\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass ButtonComponent {\n    constructor() {\n        this.bordersLeft = true;\n        this.bordersRight = true;\n    }\n    ngOnInit() {\n    }\n}\nButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: ButtonComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.1\", type: ButtonComponent, selector: \"kkl-button\", inputs: { label: \"label\", pink: \"pink\", noShadow: \"noShadow\", bordersLeft: \"bordersLeft\", bordersRight: \"bordersRight\" }, ngImport: i0, template: \"<button \\n    [attr.is-pink]=\\\"pink\\\" \\n    [ngClass]=\\\"{'make-pink': pink, 'rm-left-borders': !bordersLeft, 'rm-right-borders': !bordersRight, 'no-shadow': noShadow}\\\">\\n    {{label ? label : \\\"No Label provided\\\"}}\\n</button>\", styles: [\":host{display:inline-block}button{background:blue;padding:1rem 2rem;border-radius:5px;appearance:none;border:0;-webkit-appearance:none;-moz-appearance:none;font-size:1.5rem;letter-spacing:1px;color:#fff;box-shadow:0 4px 10px #0096,0 6px 35px #0000ccb3;cursor:pointer}button.make-pink{background:#ff00a2;box-shadow:0 4px 10px #3737374d,0 6px 35px #c83796b3}button.rm-right-borders{border-top-right-radius:0;border-bottom-right-radius:0}button.rm-left-borders{border-top-left-radius:0;border-bottom-left-radius:0}button.no-shadow{box-shadow:none}\\n\"], directives: [{ type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: ButtonComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'kkl-button', encapsulation: ViewEncapsulation.Emulated, template: \"<button \\n    [attr.is-pink]=\\\"pink\\\" \\n    [ngClass]=\\\"{'make-pink': pink, 'rm-left-borders': !bordersLeft, 'rm-right-borders': !bordersRight, 'no-shadow': noShadow}\\\">\\n    {{label ? label : \\\"No Label provided\\\"}}\\n</button>\", styles: [\":host{display:inline-block}button{background:blue;padding:1rem 2rem;border-radius:5px;appearance:none;border:0;-webkit-appearance:none;-moz-appearance:none;font-size:1.5rem;letter-spacing:1px;color:#fff;box-shadow:0 4px 10px #0096,0 6px 35px #0000ccb3;cursor:pointer}button.make-pink{background:#ff00a2;box-shadow:0 4px 10px #3737374d,0 6px 35px #c83796b3}button.rm-right-borders{border-top-right-radius:0;border-bottom-right-radius:0}button.rm-left-borders{border-top-left-radius:0;border-bottom-left-radius:0}button.no-shadow{box-shadow:none}\\n\"] }]\n        }], ctorParameters: function () { return []; }, propDecorators: { label: [{\n                type: Input,\n                args: ['label']\n            }], pink: [{\n                type: Input,\n                args: ['pink']\n            }], noShadow: [{\n                type: Input,\n                args: ['noShadow']\n            }], bordersLeft: [{\n                type: Input,\n                args: ['bordersLeft']\n            }], bordersRight: [{\n                type: Input,\n                args: ['bordersRight']\n            }] } });\n\nclass ButtonsetComponent {\n    constructor() { }\n    ngOnInit() {\n    }\n}\nButtonsetComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: ButtonsetComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nButtonsetComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.1\", type: ButtonsetComponent, selector: \"kkl-buttonset\", ngImport: i0, template: \"<div class=\\\"buttonset\\\">\\n    <!-- <pl-button label=\\\"Button 1\\\" [bordersRight]=\\\"false\\\" noShadow=true></pl-button> -->\\n    <!-- <pl-button label=\\\"Button 2\\\" [bordersLeft]=\\\"false\\\" [bordersRight]=\\\"false\\\" [noShadow]=\\\"true\\\"></pl-button> -->\\n    <!-- <pl-button label=\\\"Button 3\\\" [bordersLeft]=\\\"false\\\" [noShadow]=\\\"true\\\"></pl-button> -->\\n</div>\", styles: [\":host{display:inline-block;padding:1.5em;border:3px solid blue}.buttonset{display:inline-block;border-radius:5px;box-shadow:0 4px 10px #0096,0 6px 35px #0000ccb3}\\n\"] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: ButtonsetComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'kkl-buttonset', encapsulation: ViewEncapsulation.Emulated, template: \"<div class=\\\"buttonset\\\">\\n    <!-- <pl-button label=\\\"Button 1\\\" [bordersRight]=\\\"false\\\" noShadow=true></pl-button> -->\\n    <!-- <pl-button label=\\\"Button 2\\\" [bordersLeft]=\\\"false\\\" [bordersRight]=\\\"false\\\" [noShadow]=\\\"true\\\"></pl-button> -->\\n    <!-- <pl-button label=\\\"Button 3\\\" [bordersLeft]=\\\"false\\\" [noShadow]=\\\"true\\\"></pl-button> -->\\n</div>\", styles: [\":host{display:inline-block;padding:1.5em;border:3px solid blue}.buttonset{display:inline-block;border-radius:5px;box-shadow:0 4px 10px #0096,0 6px 35px #0000ccb3}\\n\"] }]\n        }], ctorParameters: function () { return []; } });\n\nconst exportPipes = [];\nconst exportDirective = [];\nclass KakalUiModule {\n}\nKakalUiModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: KakalUiModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nKakalUiModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: KakalUiModule, declarations: [KakalUiComponent,\n        ButtonComponent,\n        ButtonsetComponent], imports: [CommonModule], exports: [KakalUiComponent,\n        ButtonComponent,\n        ButtonsetComponent] });\nKakalUiModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: KakalUiModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: KakalUiModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        KakalUiComponent,\n                        ButtonComponent,\n                        ButtonsetComponent,\n                        ...exportPipes,\n                        ...exportDirective,\n                    ],\n                    imports: [CommonModule],\n                    exports: [\n                        KakalUiComponent,\n                        ButtonComponent,\n                        ButtonsetComponent,\n                        ...exportPipes,\n                        ...exportDirective,\n                    ],\n                }]\n        }] });\n\n/*\n * Public API Surface of kakal-ui\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ButtonComponent, ButtonsetComponent, KakalUiComponent, KakalUiModule, KakalUiService };\n//# sourceMappingURL=ComraxLTD-kakal-ui.mjs.map\n","map":{"version":3,"file":"ComraxLTD-kakal-ui.mjs","sources":["../../../projects/kakal-ui/src/lib/kakal-ui.service.ts","../../../projects/kakal-ui/src/lib/kakal-ui.component.ts","../../../projects/kakal-ui/src/lib/button/button.component.ts","../../../projects/kakal-ui/src/lib/button/button.component.html","../../../projects/kakal-ui/src/lib/buttonset/buttonset.component.ts","../../../projects/kakal-ui/src/lib/buttonset/buttonset.component.html","../../../projects/kakal-ui/src/lib/kakal-ui.module.ts","../../../projects/kakal-ui/src/public-api.ts","../../../projects/kakal-ui/src/ComraxLTD-kakal-ui.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class KakalUiService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kkl-kakal-ui',\n  template: `\n    <p>\n      kakal-ui works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class KakalUiComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'kkl-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class ButtonComponent implements OnInit {\n  @Input('label') label: string | null;\n  @Input('pink') pink: boolean;\n  @Input('noShadow') noShadow: boolean;\n  @Input('bordersLeft') bordersLeft: boolean = true;\n  @Input('bordersRight') bordersRight: boolean = true;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<button \n    [attr.is-pink]=\"pink\" \n    [ngClass]=\"{'make-pink': pink, 'rm-left-borders': !bordersLeft, 'rm-right-borders': !bordersRight, 'no-shadow': noShadow}\">\n    {{label ? label : \"No Label provided\"}}\n</button>","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'kkl-buttonset',\n  templateUrl: './buttonset.component.html',\n  styleUrls: ['./buttonset.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class ButtonsetComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"buttonset\">\n    <!-- <pl-button label=\"Button 1\" [bordersRight]=\"false\" noShadow=true></pl-button> -->\n    <!-- <pl-button label=\"Button 2\" [bordersLeft]=\"false\" [bordersRight]=\"false\" [noShadow]=\"true\"></pl-button> -->\n    <!-- <pl-button label=\"Button 3\" [bordersLeft]=\"false\" [noShadow]=\"true\"></pl-button> -->\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { KakalUiComponent } from './kakal-ui.component';\nimport { ButtonComponent } from './button/button.component';\nimport { ButtonsetComponent } from './buttonset/buttonset.component';\n\nconst exportPipes = [];\nconst exportDirective = [\n];\n\n@NgModule({\n  declarations: [\n    KakalUiComponent,\n    ButtonComponent,\n    ButtonsetComponent,\n    ...exportPipes,\n    ...exportDirective,\n  ],\n  imports: [CommonModule],\n  exports: [\n    KakalUiComponent,\n    ButtonComponent,\n    ButtonsetComponent,\n    ...exportPipes,\n    ...exportDirective,\n  ],\n})\nexport class KakalUiModule {}\n","/*\n * Public API Surface of kakal-ui\n */\n\nexport * from './lib/kakal-ui.service';\nexport * from './lib/kakal-ui.component';\nexport * from './lib/kakal-ui.module';\n\nexport * from './lib/button/button.component';\nexport * from './lib/buttonset/buttonset.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;MAKa,cAAc;IAEzB,iBAAiB;;2GAFN,cAAc;+GAAd,cAAc,cAFb,MAAM;2FAEP,cAAc;kBAH1B,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;MCQY,gBAAgB;IAE3B,iBAAiB;IAEjB,QAAQ;KACP;;6GALU,gBAAgB;iGAAhB,gBAAgB,oDARjB;;;;GAIT;2FAIU,gBAAgB;kBAV5B,SAAS;mBAAC;oBACT,QAAQ,EAAE,cAAc;oBACxB,QAAQ,EAAE;;;;GAIT;oBACD,MAAM,EAAE,EACP;iBACF;;;MCHY,eAAe;IAO1B;QAHsB,gBAAW,GAAY,IAAI,CAAC;QAC3B,iBAAY,GAAY,IAAI,CAAC;KAEnC;IAEjB,QAAQ;KACP;;4GAVU,eAAe;gGAAf,eAAe,4KCR5B,qOAIS;2FDII,eAAe;kBAN3B,SAAS;+BACE,YAAY,iBAGP,iBAAiB,CAAC,QAAQ;0EAGzB,KAAK;sBAApB,KAAK;uBAAC,OAAO;gBACC,IAAI;sBAAlB,KAAK;uBAAC,MAAM;gBACM,QAAQ;sBAA1B,KAAK;uBAAC,UAAU;gBACK,WAAW;sBAAhC,KAAK;uBAAC,aAAa;gBACG,YAAY;sBAAlC,KAAK;uBAAC,cAAc;;;MELV,kBAAkB;IAE7B,iBAAiB;IAEjB,QAAQ;KACP;;+GALU,kBAAkB;mGAAlB,kBAAkB,qDCR/B,sWAIM;2FDIO,kBAAkB;kBAN9B,SAAS;+BACE,eAAe,iBAGV,iBAAiB,CAAC,QAAQ;;;AEA3C,MAAM,WAAW,GAAG,EAAE,CAAC;AACvB,MAAM,eAAe,GAAG,EACvB,CAAC;MAmBW,aAAa;;0GAAb,aAAa;2GAAb,aAAa,iBAftB,gBAAgB;QAChB,eAAe;QACf,kBAAkB,aAIV,YAAY,aAEpB,gBAAgB;QAChB,eAAe;QACf,kBAAkB;2GAKT,aAAa,YATf,CAAC,YAAY,CAAC;2FASZ,aAAa;kBAjBzB,QAAQ;mBAAC;oBACR,YAAY,EAAE;wBACZ,gBAAgB;wBAChB,eAAe;wBACf,kBAAkB;wBAClB,GAAG,WAAW;wBACd,GAAG,eAAe;qBACnB;oBACD,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,OAAO,EAAE;wBACP,gBAAgB;wBAChB,eAAe;wBACf,kBAAkB;wBAClB,GAAG,WAAW;wBACd,GAAG,eAAe;qBACnB;iBACF;;;AC1BD;;;;ACAA;;;;;;"}}}